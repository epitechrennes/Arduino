<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="2">
    <Box name="root" robot="" id="-1" tooltip="Root box of Choregraphe&apos;s project. Highest level possible." bitmap_expanded="1" plugin="" x="0" y="0">
        <bitmap>media/images/box/root.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
        <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
            <watches />
            <BehaviorLayer name="behavior_layer1" mute="0">
                <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                    <Diagram scale="99">
                        <Box name="stand_realStory1_1" robot="" id="1" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="89" y="36">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                            <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                <watches />
                                <BehaviorLayer name="speech" mute="0">
                                    <BehaviorKeyframe name="speech" index="7" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="Enter name here" robot="" id="1" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="localizationbox_plugin" x="111" y="66">
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)
		self.tts = ALProxy("ALTextToSpeech")

	def onInput_onStart(self):
		sEnglish = ""
		sFrench = "\\RSPD=90\\ Tu sais pas ce qu'il m'est arrivé l'autre jour?"
		sSpanish = ""
		sItalian = ""
		sGerman = ""
		sChinese = ""
		sPolish = ""
		sKorean = ""
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(eval("s"+sDefaultLang))]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <english></english>
                                                    <french>\\RSPD=90\\ Tu sais pas ce qu&apos;il m&apos;est arrivé l&apos;autre jour?</french>
                                                    <spanish></spanish>
                                                    <italian></italian>
                                                    <german></german>
                                                    <chinese></chinese>
                                                    <polish></polish>
                                                    <korean></korean>
                                                    <language>1</language>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Box name="SayTextPrerender_ref" robot="" id="2" tooltip="Receive a string, precompute it, then say it!&#x0A;All steps are outputted to add synchro or interesting behaviors...&#x0A;&#x0A;v1.1" bitmap_expanded="1" plugin="" x="390" y="63">
                                                <bitmap>media/images/box/icons_appu/sayPrecomputed.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# SayTextPrerender - v1.1
import altools

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self);
        self.nStateInit = 0;
        self.nStatePreparing = 1;
        self.nStateSpeaking = 2;
        self.nStateStopped = 3;
        
    def onLoad(self):
        self.nStep = self.nStateInit;
        self.bStopped = False;
    
    def onUnload(self):
        self.onInput_onStop();

    def onInput_onStart(self, p):
        if( self.nStep == self.nStateSpeaking or self.nStep == self.nStatePreparing ):
            self.log( "%s: already speaking, won't say that sentence: '%s'" % ( self.boxName, p ) );
            return;

        self.bStopped = False;
        txt = p;
        self.nStep = self.nStatePreparing;
        self.output_onPreparing();
        if( self.getParameter( "bWithLight" ) ):
            altools.sayAndCacheAndLight( txt, True, self.getParameter( 'bStoreToNonVolatilePath' ), nUseLang = self.getParameter( 'nNumLanguage' ) );
        else:
            altools.sayAndCache( txt, True, self.getParameter( 'bStoreToNonVolatilePath' ), nUseLang = self.getParameter( 'nNumLanguage' ) );
        self.output_onPrepared();            
        if( not self.getParameter( 'bJustPrepare' ) ):
            if( not self.bStopped ):
                self.nStep = self.nStateSpeaking;
                self.output_onStartSpeaking();
                if( self.getParameter( "bWithLight" ) ):
                    altools.sayAndCacheAndLight( txt, nUseLang = self.getParameter( 'nNumLanguage' ) );
                else:
                    altools.sayAndCache( txt, nUseLang = self.getParameter( 'nNumLanguage' ) );
                self.output_onStopSpeaking();            
        else:
            pass
        self.nStep = self.nStateStopped;
    
    def onInput_onStop(self):
        nCpt = 0;
        # adding a timeout
        nMaxCpt = 60;
        self.bStopped = True;
        while( self.nStep == self.nStatePreparing and nCpt <= nMaxCpt ): # can't kill while preparing
            print( "%s.onStop: waiting to stop than the sound is prepared..." % self.boxName );
            time.sleep( 0.5 );
            nCpt += 1;
        if( nCpt > nMaxCpt ):
            altools.playSound( 'warning_speech_error.wav' );
        # on le fait plusieurs fois car des fois on peut se trouver pile entre le set du play et le lancage de la commande
        for i in range( 3 ):
            if( self.nStep == self.nStateSpeaking ):
                altools.mySystemCall( "killall aplay" );     # todo: better killling method!
                time.sleep( 0.2 );]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="output_onPreparing" type="1" type_size="1" nature="2" inner="0" tooltip="Text are being prepared" id="4" />
                                                <Output name="output_onPrepared" type="1" type_size="1" nature="2" inner="0" tooltip="the sound is prepared and ready to be launched" id="5" />
                                                <Output name="output_onStartSpeaking" type="1" type_size="1" nature="2" inner="0" tooltip="Nao begin to speak" id="6" />
                                                <Output name="output_onStopSpeaking" type="1" type_size="1" nature="2" inner="0" tooltip="Nao has stop speaking" id="7" />
                                                <Parameter name="bWithLight" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="use light in eyes to speak" id="8" />
                                                <Parameter name="bJustPrepare" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Don&apos;t say the text now, just generate it." id="9" />
                                                <Parameter name="bStoreToNonVolatilePath" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="copy the generated file to a non volatile path." id="10" />
                                                <Parameter name="nNumLanguage" inherits_from_parent="0" content_type="1" value="-1" default_value="-1" min="-1" max="30" tooltip="To speak with a different speak language, specify it there (default -1: current one)" id="11" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <BehaviorLayer name="LED" mute="0">
                                    <BehaviorKeyframe name="blink" index="15" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="blink2" index="87" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList>
                                    <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="18" value="-5.27591" />
                                        <Key frame="31" value="-7.12163" />
                                        <Key frame="44" value="-7.73688" />
                                        <Key frame="58" value="-9.49471" />
                                        <Key frame="73" value="-9.84628" />
                                        <Key frame="99" value="-8.26423" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="18" value="-21.0085" />
                                        <Key frame="31" value="-8.35212" />
                                        <Key frame="44" value="-14.7682" />
                                        <Key frame="58" value="-9.84628" />
                                        <Key frame="73" value="-17.0534" />
                                        <Key frame="99" value="-18.8112" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="16" value="78.397" />
                                        <Key frame="29" value="69.4321" />
                                        <Key frame="42" value="80.9459" />
                                        <Key frame="56" value="49.0412" />
                                        <Key frame="71" value="70.2231" />
                                        <Key frame="97" value="74.9692" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="16" value="0.498473" />
                                        <Key frame="29" value="0.70073" />
                                        <Key frame="42" value="2.63435" />
                                        <Key frame="56" value="0.498473" />
                                        <Key frame="71" value="8.87466" />
                                        <Key frame="97" value="9.66569" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="16" value="-58.1867" />
                                        <Key frame="29" value="-34.2802" />
                                        <Key frame="42" value="-50.1007" />
                                        <Key frame="56" value="-14.3288" />
                                        <Key frame="71" value="-105.56" />
                                        <Key frame="97" value="-107.406" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="16" value="-24.6073" />
                                        <Key frame="29" value="-52.9084" />
                                        <Key frame="42" value="-33.4843" />
                                        <Key frame="56" value="-64.1586" />
                                        <Key frame="71" value="-37.791" />
                                        <Key frame="97" value="-32.0781" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="29" value="6" />
                                        <Key frame="56" value="-74" />
                                        <Key frame="97" value="-47.376" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="29" value="5.84144" />
                                        <Key frame="56" value="31" />
                                        <Key frame="97" value="19.6614" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="14" value="29.6219" />
                                        <Key frame="27" value="37.9716" />
                                        <Key frame="40" value="69.4369" />
                                        <Key frame="54" value="92.904" />
                                        <Key frame="69" value="94.1344" />
                                        <Key frame="95" value="96.947" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="14" value="-1.49656" />
                                        <Key frame="27" value="-1.145" />
                                        <Key frame="40" value="-1.58446" />
                                        <Key frame="54" value="-2.1997" />
                                        <Key frame="69" value="-1.67235" />
                                        <Key frame="95" value="-2.11181" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="14" value="46.9318" />
                                        <Key frame="27" value="75.145" />
                                        <Key frame="40" value="47.9865" />
                                        <Key frame="54" value="93.3386" />
                                        <Key frame="69" value="109.335" />
                                        <Key frame="95" value="114.433" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="14" value="88.5973" />
                                        <Key frame="27" value="60.1203" />
                                        <Key frame="40" value="86.8394" />
                                        <Key frame="54" value="45.9698" />
                                        <Key frame="69" value="35.0712" />
                                        <Key frame="95" value="30.7645" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="27" value="-33" />
                                        <Key frame="54" value="8.6" />
                                        <Key frame="95" value="-5.53958" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="27" value="29.7" />
                                        <Key frame="54" value="13.6" />
                                        <Key frame="95" value="24.1614" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="28" value="-18.6306" />
                                        <Key frame="55" value="-20.0369" />
                                        <Key frame="96" value="-19.3338" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="28" value="8.79158" />
                                        <Key frame="55" value="2.46337" />
                                        <Key frame="96" value="9.84628" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="28" value="17.5807" />
                                        <Key frame="55" value="13.0983" />
                                        <Key frame="96" value="13.0983" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="28" value="-5.29104" />
                                        <Key frame="55" value="-4.92434" />
                                        <Key frame="96" value="-5.01223" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="28" value="3.95272" />
                                        <Key frame="55" value="6.76526" />
                                        <Key frame="96" value="5.44688" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="28" value="-7.02893" />
                                        <Key frame="55" value="-2.45856" />
                                        <Key frame="96" value="-8.34731" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="28" value="-2.81013" />
                                        <Key frame="55" value="-6.41369" />
                                        <Key frame="96" value="0.266079" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="28" value="19.7732" />
                                        <Key frame="55" value="13.5329" />
                                        <Key frame="96" value="16.4333" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="28" value="-5.88634" />
                                        <Key frame="55" value="-5.53477" />
                                        <Key frame="96" value="-5.79845" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="28" value="2.28759" />
                                        <Key frame="55" value="6.24272" />
                                        <Key frame="96" value="3.2544" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="28" value="2.02391" />
                                        <Key frame="55" value="5.01223" />
                                        <Key frame="96" value="0.178188" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="stand_realStory1_5" robot="" id="3" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="93" y="157">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                            <Timeline fps="25" resources_acquisition="0" size="400" enable="1" start_frame="0" end_frame="-1" scale="10">
                                <watches />
                                <BehaviorLayer name="speech" mute="0">
                                    <BehaviorKeyframe name="speech" index="29" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="Enter name here" robot="" id="1" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="localizationbox_plugin" x="111" y="66">
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)
		self.tts = ALProxy("ALTextToSpeech")

	def onInput_onStart(self):
		sEnglish = ""
		sFrench = "Je sors du waggon et essaye de trouver la sortie du métro, mais voilà que je me perds dans les couloirs!"
		sSpanish = ""
		sItalian = ""
		sGerman = ""
		sChinese = ""
		sPolish = ""
		sKorean = ""
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(eval("s"+sDefaultLang))]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <english></english>
                                                    <french>Je sors du waggon et essaye de trouver la sortie du métro, mais voilà que je me perds dans les couloirs!</french>
                                                    <spanish></spanish>
                                                    <italian></italian>
                                                    <german></german>
                                                    <chinese></chinese>
                                                    <polish></polish>
                                                    <korean></korean>
                                                    <language>1</language>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Box name="SayTextPrerender_ref" robot="" id="2" tooltip="Receive a string, precompute it, then say it!&#x0A;All steps are outputted to add synchro or interesting behaviors...&#x0A;&#x0A;v1.1" bitmap_expanded="1" plugin="" x="416" y="70">
                                                <bitmap>media/images/box/icons_appu/sayPrecomputed.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# SayTextPrerender - v1.1
import altools

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self);
        self.nStateInit = 0;
        self.nStatePreparing = 1;
        self.nStateSpeaking = 2;
        self.nStateStopped = 3;
        
    def onLoad(self):
        self.nStep = self.nStateInit;
        self.bStopped = False;
    
    def onUnload(self):
        self.onInput_onStop();

    def onInput_onStart(self, p):
        if( self.nStep == self.nStateSpeaking or self.nStep == self.nStatePreparing ):
            self.log( "%s: already speaking, won't say that sentence: '%s'" % ( self.boxName, p ) );
            return;

        self.bStopped = False;
        txt = p;
        self.nStep = self.nStatePreparing;
        self.output_onPreparing();
        if( self.getParameter( "bWithLight" ) ):
            altools.sayAndCacheAndLight( txt, True, self.getParameter( 'bStoreToNonVolatilePath' ), nUseLang = self.getParameter( 'nNumLanguage' ) );
        else:
            altools.sayAndCache( txt, True, self.getParameter( 'bStoreToNonVolatilePath' ), nUseLang = self.getParameter( 'nNumLanguage' ) );
        self.output_onPrepared();            
        if( not self.getParameter( 'bJustPrepare' ) ):
            if( not self.bStopped ):
                self.nStep = self.nStateSpeaking;
                self.output_onStartSpeaking();
                if( self.getParameter( "bWithLight" ) ):
                    altools.sayAndCacheAndLight( txt, nUseLang = self.getParameter( 'nNumLanguage' ) );
                else:
                    altools.sayAndCache( txt, nUseLang = self.getParameter( 'nNumLanguage' ) );
                self.output_onStopSpeaking();            
        else:
            pass
        self.nStep = self.nStateStopped;
    
    def onInput_onStop(self):
        nCpt = 0;
        # adding a timeout
        nMaxCpt = 60;
        self.bStopped = True;
        while( self.nStep == self.nStatePreparing and nCpt <= nMaxCpt ): # can't kill while preparing
            print( "%s.onStop: waiting to stop than the sound is prepared..." % self.boxName );
            time.sleep( 0.5 );
            nCpt += 1;
        if( nCpt > nMaxCpt ):
            altools.playSound( 'warning_speech_error.wav' );
        # on le fait plusieurs fois car des fois on peut se trouver pile entre le set du play et le lancage de la commande
        for i in range( 3 ):
            if( self.nStep == self.nStateSpeaking ):
                altools.mySystemCall( "killall aplay" );     # todo: better killling method!
                time.sleep( 0.2 );]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="output_onPreparing" type="1" type_size="1" nature="2" inner="0" tooltip="Text are being prepared" id="4" />
                                                <Output name="output_onPrepared" type="1" type_size="1" nature="2" inner="0" tooltip="the sound is prepared and ready to be launched" id="5" />
                                                <Output name="output_onStartSpeaking" type="1" type_size="1" nature="2" inner="0" tooltip="Nao begin to speak" id="6" />
                                                <Output name="output_onStopSpeaking" type="1" type_size="1" nature="2" inner="0" tooltip="Nao has stop speaking" id="7" />
                                                <Parameter name="bWithLight" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="use light in eyes to speak" id="8" />
                                                <Parameter name="bJustPrepare" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Don&apos;t say the text now, just generate it." id="9" />
                                                <Parameter name="bStoreToNonVolatilePath" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="copy the generated file to a non volatile path." id="10" />
                                                <Parameter name="nNumLanguage" inherits_from_parent="0" content_type="1" value="-1" default_value="-1" min="-1" max="30" tooltip="To speak with a different speak language, specify it there (default -1: current one)" id="11" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <BehaviorLayer name="LED" mute="0">
                                    <BehaviorKeyframe name="blink" index="17" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="blink2" index="95" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="blink3" index="154" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList>
                                    <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="29" value="5.35899" />
                                        <Key frame="43" value="-5.80326" />
                                        <Key frame="60" value="-4.22121" />
                                        <Key frame="73" value="-4.13332" />
                                        <Key frame="91" value="-12.483" />
                                        <Key frame="102" value="-6.94585" />
                                        <Key frame="117" value="-7.4732" />
                                        <Key frame="131" value="-7.29742" />
                                        <Key frame="150" value="-3.86964" />
                                        <Key frame="170" value="-4.3091" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="29" value="4.04062" />
                                        <Key frame="43" value="-19.778" />
                                        <Key frame="60" value="-11.692" />
                                        <Key frame="73" value="-12.9225" />
                                        <Key frame="91" value="12.4782" />
                                        <Key frame="102" value="-11.3404" />
                                        <Key frame="117" value="-11.3404" />
                                        <Key frame="131" value="-1.23289" />
                                        <Key frame="150" value="-14.2409" />
                                        <Key frame="170" value="-25.0515" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="27" value="87.1862" />
                                        <Key frame="41" value="75.0571" />
                                        <Key frame="58" value="62.137" />
                                        <Key frame="71" value="60.9066" />
                                        <Key frame="89" value="55.9846" />
                                        <Key frame="100" value="79.4517" />
                                        <Key frame="115" value="80.7701" />
                                        <Key frame="129" value="73.6509" />
                                        <Key frame="148" value="79.1001" />
                                        <Key frame="168" value="80.7701" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="27" value="0.498473" />
                                        <Key frame="41" value="1.14019" />
                                        <Key frame="58" value="0.498473" />
                                        <Key frame="71" value="0.876513" />
                                        <Key frame="89" value="0.524946" />
                                        <Key frame="100" value="2.98591" />
                                        <Key frame="115" value="0.498473" />
                                        <Key frame="129" value="0.70073" />
                                        <Key frame="148" value="19.3338" />
                                        <Key frame="168" value="6.15002" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="27" value="-79.105" />
                                        <Key frame="41" value="-93.0797" />
                                        <Key frame="58" value="-60.2961" />
                                        <Key frame="71" value="-72.5131" />
                                        <Key frame="89" value="-93.1676" />
                                        <Key frame="100" value="-117.25" />
                                        <Key frame="115" value="-63.0208" />
                                        <Key frame="129" value="-40.6084" />
                                        <Key frame="148" value="-100.551" />
                                        <Key frame="168" value="-38.6748" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="27" value="-31.4628" />
                                        <Key frame="41" value="-69.3442" />
                                        <Key frame="58" value="-83.1432" />
                                        <Key frame="71" value="-75.2329" />
                                        <Key frame="89" value="-61.0823" />
                                        <Key frame="100" value="-42.8888" />
                                        <Key frame="115" value="-40.3399" />
                                        <Key frame="129" value="-61.6976" />
                                        <Key frame="148" value="-34.0117" />
                                        <Key frame="168" value="-29.1776" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="27" value="-32.786" />
                                        <Key frame="58" value="-56" />
                                        <Key frame="89" value="26" />
                                        <Key frame="115" value="-40" />
                                        <Key frame="148" value="-40.7842" />
                                        <Key frame="168" value="-42.0147" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="27" value="25.9414" />
                                        <Key frame="58" value="10" />
                                        <Key frame="89" value="38" />
                                        <Key frame="115" value="12.5" />
                                        <Key frame="148" value="12.6414" />
                                        <Key frame="168" value="12.6614" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="25" value="85.3453" />
                                        <Key frame="39" value="75.0619" />
                                        <Key frame="56" value="61.3508" />
                                        <Key frame="69" value="51.6827" />
                                        <Key frame="87" value="58.2746" />
                                        <Key frame="98" value="75.1498" />
                                        <Key frame="113" value="74.6225" />
                                        <Key frame="127" value="85.8726" />
                                        <Key frame="146" value="71.8978" />
                                        <Key frame="166" value="85.6089" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="25" value="-1.67235" />
                                        <Key frame="39" value="-0.705538" />
                                        <Key frame="56" value="-0.529755" />
                                        <Key frame="69" value="-0.705538" />
                                        <Key frame="87" value="-0.969213" />
                                        <Key frame="98" value="-1.0571" />
                                        <Key frame="113" value="-1.23289" />
                                        <Key frame="127" value="-0.881321" />
                                        <Key frame="146" value="-14.8561" />
                                        <Key frame="166" value="-2.46337" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="25" value="71.3657" />
                                        <Key frame="39" value="56.5999" />
                                        <Key frame="56" value="108.192" />
                                        <Key frame="69" value="70.6625" />
                                        <Key frame="87" value="23.6405" />
                                        <Key frame="98" value="44.1192" />
                                        <Key frame="113" value="99.9305" />
                                        <Key frame="127" value="63.9828" />
                                        <Key frame="146" value="110.653" />
                                        <Key frame="166" value="68.8168" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="25" value="34.9833" />
                                        <Key frame="39" value="77.435" />
                                        <Key frame="56" value="59.0656" />
                                        <Key frame="69" value="87.8941" />
                                        <Key frame="87" value="58.3625" />
                                        <Key frame="98" value="43.5967" />
                                        <Key frame="113" value="46.9366" />
                                        <Key frame="127" value="39.2021" />
                                        <Key frame="146" value="42.2783" />
                                        <Key frame="166" value="22.0632" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="25" value="-3.86964" />
                                        <Key frame="56" value="37.7" />
                                        <Key frame="87" value="15.1" />
                                        <Key frame="113" value="36.6" />
                                        <Key frame="146" value="37.3516" />
                                        <Key frame="166" value="35.9453" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="25" value="15.3814" />
                                        <Key frame="56" value="28.7" />
                                        <Key frame="87" value="14" />
                                        <Key frame="113" value="32.9" />
                                        <Key frame="146" value="33.0414" />
                                        <Key frame="166" value="33.0414" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="26" value="-18.1912" />
                                        <Key frame="57" value="-18.1033" />
                                        <Key frame="88" value="-19.0701" />
                                        <Key frame="114" value="-18.367" />
                                        <Key frame="147" value="-20.1248" />
                                        <Key frame="167" value="-28.7382" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="26" value="7.20953" />
                                        <Key frame="57" value="1.76024" />
                                        <Key frame="88" value="4.66067" />
                                        <Key frame="114" value="6.59428" />
                                        <Key frame="147" value="6.77007" />
                                        <Key frame="167" value="6.4185" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="26" value="12.3951" />
                                        <Key frame="57" value="13.8893" />
                                        <Key frame="88" value="11.4283" />
                                        <Key frame="114" value="16.8776" />
                                        <Key frame="147" value="9.93417" />
                                        <Key frame="167" value="4.74856" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="26" value="-5.01223" />
                                        <Key frame="57" value="-4.83645" />
                                        <Key frame="88" value="-5.29104" />
                                        <Key frame="114" value="-5.29104" />
                                        <Key frame="147" value="-5.29104" />
                                        <Key frame="167" value="-5.29104" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="26" value="6.41369" />
                                        <Key frame="57" value="5.2711" />
                                        <Key frame="88" value="9.40201" />
                                        <Key frame="114" value="5.18321" />
                                        <Key frame="147" value="7.81996" />
                                        <Key frame="167" value="14.9392" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="26" value="-6.23791" />
                                        <Key frame="57" value="-2.01911" />
                                        <Key frame="88" value="-3.77694" />
                                        <Key frame="114" value="-5.35899" />
                                        <Key frame="147" value="-6.15002" />
                                        <Key frame="167" value="-4.48007" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="26" value="-1.49176" />
                                        <Key frame="57" value="-7.55628" />
                                        <Key frame="88" value="-3.33748" />
                                        <Key frame="114" value="-4.30429" />
                                        <Key frame="147" value="-1.0523" />
                                        <Key frame="167" value="1.0571" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="26" value="15.3786" />
                                        <Key frame="57" value="15.8181" />
                                        <Key frame="88" value="13.9724" />
                                        <Key frame="114" value="21.0037" />
                                        <Key frame="147" value="15.2029" />
                                        <Key frame="167" value="13.2692" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="26" value="-5.90622" />
                                        <Key frame="57" value="-5.88634" />
                                        <Key frame="88" value="-5.88634" />
                                        <Key frame="114" value="-5.90622" />
                                        <Key frame="147" value="-5.90622" />
                                        <Key frame="167" value="-5.71056" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="26" value="4.13332" />
                                        <Key frame="57" value="4.22121" />
                                        <Key frame="88" value="7.03374" />
                                        <Key frame="114" value="1.84813" />
                                        <Key frame="147" value="3.60596" />
                                        <Key frame="167" value="7.4732" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="26" value="1.32078" />
                                        <Key frame="57" value="5.80326" />
                                        <Key frame="88" value="2.55126" />
                                        <Key frame="114" value="2.90283" />
                                        <Key frame="147" value="1.32078" />
                                        <Key frame="167" value="0.617646" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="stand_realStory1_9" robot="" id="2" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="97" y="280">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                            <Timeline fps="25" resources_acquisition="0" size="400" enable="1" start_frame="0" end_frame="-1" scale="10">
                                <watches />
                                <BehaviorLayer name="speech" mute="0">
                                    <BehaviorKeyframe name="speech" index="3" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="Enter name here" robot="" id="1" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="localizationbox_plugin" x="95" y="235">
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)
		self.tts = ALProxy("ALTextToSpeech")

	def onInput_onStart(self):
		sEnglish = ""
		sFrench = "et par chance, un béta testeur qui passait par là, me voit et me dépose devan aldébaran."
		sSpanish = ""
		sItalian = ""
		sGerman = ""
		sChinese = ""
		sPolish = ""
		sKorean = ""
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(eval("s"+sDefaultLang))]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <english></english>
                                                    <french>et par chance, un béta testeur qui passait par là, me voit et me dépose devan aldébaran.</french>
                                                    <spanish></spanish>
                                                    <italian></italian>
                                                    <german></german>
                                                    <chinese></chinese>
                                                    <polish></polish>
                                                    <korean></korean>
                                                    <language>1</language>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Box name="Enter name here" robot="" id="2" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="localizationbox_plugin" x="104" y="25">
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)
		self.tts = ALProxy("ALTextToSpeech")

	def onInput_onStart(self):
		sEnglish = ""
		sFrench = "Je fais mine de planter,"
		sSpanish = ""
		sItalian = ""
		sGerman = ""
		sChinese = ""
		sPolish = ""
		sKorean = ""
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(eval("s"+sDefaultLang))]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <english></english>
                                                    <french>Je fais mine de planter,</french>
                                                    <spanish></spanish>
                                                    <italian></italian>
                                                    <german></german>
                                                    <chinese></chinese>
                                                    <polish></polish>
                                                    <korean></korean>
                                                    <language>1</language>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Box name="SayTextPrerender_ref" robot="" id="6" tooltip="Receive a string, precompute it, then say it!&#x0A;All steps are outputted to add synchro or interesting behaviors...&#x0A;&#x0A;v1.1" bitmap_expanded="1" plugin="" x="380" y="8">
                                                <bitmap>media/images/box/icons_appu/sayPrecomputed.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# SayTextPrerender - v1.1
import altools

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self);
        self.nStateInit = 0;
        self.nStatePreparing = 1;
        self.nStateSpeaking = 2;
        self.nStateStopped = 3;
        
    def onLoad(self):
        self.nStep = self.nStateInit;
        self.bStopped = False;
    
    def onUnload(self):
        self.onInput_onStop();

    def onInput_onStart(self, p):
        if( self.nStep == self.nStateSpeaking or self.nStep == self.nStatePreparing ):
            self.log( "%s: already speaking, won't say that sentence: '%s'" % ( self.boxName, p ) );
            return;

        self.bStopped = False;
        txt = p;
        self.nStep = self.nStatePreparing;
        self.output_onPreparing();
        if( self.getParameter( "bWithLight" ) ):
            altools.sayAndCacheAndLight( txt, True, self.getParameter( 'bStoreToNonVolatilePath' ), nUseLang = self.getParameter( 'nNumLanguage' ) );
        else:
            altools.sayAndCache( txt, True, self.getParameter( 'bStoreToNonVolatilePath' ), nUseLang = self.getParameter( 'nNumLanguage' ) );
        self.output_onPrepared();            
        if( not self.getParameter( 'bJustPrepare' ) ):
            if( not self.bStopped ):
                self.nStep = self.nStateSpeaking;
                self.output_onStartSpeaking();
                if( self.getParameter( "bWithLight" ) ):
                    altools.sayAndCacheAndLight( txt, nUseLang = self.getParameter( 'nNumLanguage' ) );
                else:
                    altools.sayAndCache( txt, nUseLang = self.getParameter( 'nNumLanguage' ) );
                self.output_onStopSpeaking();            
        else:
            pass
        self.nStep = self.nStateStopped;
    
    def onInput_onStop(self):
        nCpt = 0;
        # adding a timeout
        nMaxCpt = 60;
        self.bStopped = True;
        while( self.nStep == self.nStatePreparing and nCpt <= nMaxCpt ): # can't kill while preparing
            print( "%s.onStop: waiting to stop than the sound is prepared..." % self.boxName );
            time.sleep( 0.5 );
            nCpt += 1;
        if( nCpt > nMaxCpt ):
            altools.playSound( 'warning_speech_error.wav' );
        # on le fait plusieurs fois car des fois on peut se trouver pile entre le set du play et le lancage de la commande
        for i in range( 3 ):
            if( self.nStep == self.nStateSpeaking ):
                altools.mySystemCall( "killall aplay" );     # todo: better killling method!
                time.sleep( 0.2 );]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="output_onPreparing" type="1" type_size="1" nature="2" inner="0" tooltip="Text are being prepared" id="4" />
                                                <Output name="output_onPrepared" type="1" type_size="1" nature="2" inner="0" tooltip="the sound is prepared and ready to be launched" id="5" />
                                                <Output name="output_onStartSpeaking" type="1" type_size="1" nature="2" inner="0" tooltip="Nao begin to speak" id="6" />
                                                <Output name="output_onStopSpeaking" type="1" type_size="1" nature="2" inner="0" tooltip="Nao has stop speaking" id="7" />
                                                <Parameter name="bWithLight" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="use light in eyes to speak" id="8" />
                                                <Parameter name="bJustPrepare" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Don&apos;t say the text now, just generate it." id="9" />
                                                <Parameter name="bStoreToNonVolatilePath" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="copy the generated file to a non volatile path." id="10" />
                                                <Parameter name="nNumLanguage" inherits_from_parent="0" content_type="1" value="-1" default_value="-1" min="-1" max="30" tooltip="To speak with a different speak language, specify it there (default -1: current one)" id="11" />
                                            </Box>
                                            <Box name="SayTextPrerender_ref" robot="" id="5" tooltip="Receive a string, precompute it, then say it!&#x0A;All steps are outputted to add synchro or interesting behaviors...&#x0A;&#x0A;v1.1" bitmap_expanded="1" plugin="" x="389" y="227">
                                                <bitmap>media/images/box/icons_appu/sayPrecomputed.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# SayTextPrerender - v1.1
import altools

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self);
        self.nStateInit = 0;
        self.nStatePreparing = 1;
        self.nStateSpeaking = 2;
        self.nStateStopped = 3;
        
    def onLoad(self):
        self.nStep = self.nStateInit;
        self.bStopped = False;
    
    def onUnload(self):
        self.onInput_onStop();

    def onInput_onStart(self, p):
        if( self.nStep == self.nStateSpeaking or self.nStep == self.nStatePreparing ):
            self.log( "%s: already speaking, won't say that sentence: '%s'" % ( self.boxName, p ) );
            return;

        self.bStopped = False;
        txt = p;
        self.nStep = self.nStatePreparing;
        self.output_onPreparing();
        if( self.getParameter( "bWithLight" ) ):
            altools.sayAndCacheAndLight( txt, True, self.getParameter( 'bStoreToNonVolatilePath' ), nUseLang = self.getParameter( 'nNumLanguage' ) );
        else:
            altools.sayAndCache( txt, True, self.getParameter( 'bStoreToNonVolatilePath' ), nUseLang = self.getParameter( 'nNumLanguage' ) );
        self.output_onPrepared();            
        if( not self.getParameter( 'bJustPrepare' ) ):
            if( not self.bStopped ):
                self.nStep = self.nStateSpeaking;
                self.output_onStartSpeaking();
                if( self.getParameter( "bWithLight" ) ):
                    altools.sayAndCacheAndLight( txt, nUseLang = self.getParameter( 'nNumLanguage' ) );
                else:
                    altools.sayAndCache( txt, nUseLang = self.getParameter( 'nNumLanguage' ) );
                self.output_onStopSpeaking();            
        else:
            pass
        self.nStep = self.nStateStopped;
    
    def onInput_onStop(self):
        nCpt = 0;
        # adding a timeout
        nMaxCpt = 60;
        self.bStopped = True;
        while( self.nStep == self.nStatePreparing and nCpt <= nMaxCpt ): # can't kill while preparing
            print( "%s.onStop: waiting to stop than the sound is prepared..." % self.boxName );
            time.sleep( 0.5 );
            nCpt += 1;
        if( nCpt > nMaxCpt ):
            altools.playSound( 'warning_speech_error.wav' );
        # on le fait plusieurs fois car des fois on peut se trouver pile entre le set du play et le lancage de la commande
        for i in range( 3 ):
            if( self.nStep == self.nStateSpeaking ):
                altools.mySystemCall( "killall aplay" );     # todo: better killling method!
                time.sleep( 0.2 );]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="output_onPreparing" type="1" type_size="1" nature="2" inner="0" tooltip="Text are being prepared" id="4" />
                                                <Output name="output_onPrepared" type="1" type_size="1" nature="2" inner="0" tooltip="the sound is prepared and ready to be launched" id="5" />
                                                <Output name="output_onStartSpeaking" type="1" type_size="1" nature="2" inner="0" tooltip="Nao begin to speak" id="6" />
                                                <Output name="output_onStopSpeaking" type="1" type_size="1" nature="2" inner="0" tooltip="Nao has stop speaking" id="7" />
                                                <Parameter name="bWithLight" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="use light in eyes to speak" id="8" />
                                                <Parameter name="bJustPrepare" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Don&apos;t say the text now, just generate it." id="9" />
                                                <Parameter name="bStoreToNonVolatilePath" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="copy the generated file to a non volatile path." id="10" />
                                                <Parameter name="nNumLanguage" inherits_from_parent="0" content_type="1" value="-1" default_value="-1" min="-1" max="30" tooltip="To speak with a different speak language, specify it there (default -1: current one)" id="11" />
                                            </Box>
                                            <Box name="PlaySoundMixLight_p" robot="" id="4" tooltip="Play a sound even if there&apos;s current one playing.&#x0A;&#x0A;v1.00&#x0A;&#x0A;- just play a sound with a specific sound volume (work only for .wav)" bitmap_expanded="1" plugin="" x="388" y="120">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# PlaySoundMix Light v1.0
import altools
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        altools.playSound( self.getParameter( 'strSoundName' ), bDirectPlay = self.getParameter( 'bDirectPlay' ), nSoundVolume = self.getParameter( 'nVolume' ) );
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Parameter name="strSoundName" inherits_from_parent="0" content_type="3" value="/opt/naoqi/share/naoqi/wav/shutdown.wav" default_value="youhou1.wav" custom_choice="0" tooltip="name of the sound to play (absolute or just the name if it&apos;s in the standard path)" id="5" />
                                                <Parameter name="bDirectPlay" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="launch the sound directly (don&apos;t use gstreamer)" id="6" />
                                                <Parameter name="nVolume" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="volume between 0 and 100% - DON&apos;T WORK IN THOSE VERSION(S)" id="7" />
                                            </Box>
                                            <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="5" indexofinput="2" outputowner="1" indexofoutput="4" />
                                            <Link inputowner="4" indexofinput="2" outputowner="6" indexofoutput="7" />
                                            <Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <BehaviorLayer name="LED" mute="0">
                                    <BehaviorKeyframe name="blink" index="11" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="off" index="47" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        
        rDuration = 2.5;
        ALLeds.fadeRGB( "FaceLeds", 0x000000, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="blink2" index="134" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="blink3" index="231" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="blink4" index="289" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList>
                                    <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="20" value="-7.56109" />
                                        <Key frame="34" value="-8.87947" />
                                        <Key frame="47" value="-8.87947" />
                                        <Key frame="113" value="-4.66067" />
                                        <Key frame="137" value="-5.3638" />
                                        <Key frame="151" value="-5.10012" />
                                        <Key frame="168" value="-6.06693" />
                                        <Key frame="181" value="-7.20953" />
                                        <Key frame="197" value="-8.08844" />
                                        <Key frame="212" value="-5.71537" />
                                        <Key frame="229" value="-7.64898" />
                                        <Key frame="243" value="-8.26423" />
                                        <Key frame="258" value="-7.38531" />
                                        <Key frame="273" value="-8.61579" />
                                        <Key frame="287" value="-11.9557" />
                                        <Key frame="305" value="-12.0436" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="20" value="-7.73688" />
                                        <Key frame="34" value="-12.1315" />
                                        <Key frame="47" value="-18.4597" />
                                        <Key frame="113" value="29.5016" />
                                        <Key frame="137" value="29.1776" />
                                        <Key frame="151" value="-9.05525" />
                                        <Key frame="168" value="5.79845" />
                                        <Key frame="181" value="-9.5826" />
                                        <Key frame="197" value="-2.1997" />
                                        <Key frame="212" value="-13.4498" />
                                        <Key frame="229" value="-7.4732" />
                                        <Key frame="243" value="-12.0436" />
                                        <Key frame="258" value="2.63435" />
                                        <Key frame="273" value="-16.8776" />
                                        <Key frame="287" value="-14.3288" />
                                        <Key frame="305" value="-11.5162" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="18" value="57.1272" />
                                        <Key frame="32" value="76.1118" />
                                        <Key frame="45" value="84.9889" />
                                        <Key frame="111" value="56.0725" />
                                        <Key frame="135" value="56.8635" />
                                        <Key frame="149" value="59.3245" />
                                        <Key frame="166" value="64.4222" />
                                        <Key frame="179" value="76.0239" />
                                        <Key frame="195" value="54.9299" />
                                        <Key frame="210" value="55.5452" />
                                        <Key frame="227" value="58.6214" />
                                        <Key frame="241" value="41.3067" />
                                        <Key frame="256" value="56.8635" />
                                        <Key frame="271" value="69.8715" />
                                        <Key frame="285" value="86.0436" />
                                        <Key frame="303" value="87.0983" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="18" value="0.498473" />
                                        <Key frame="32" value="1.49176" />
                                        <Key frame="45" value="0.498473" />
                                        <Key frame="111" value="3.07381" />
                                        <Key frame="135" value="1.93121" />
                                        <Key frame="149" value="0.498473" />
                                        <Key frame="166" value="5.97423" />
                                        <Key frame="179" value="3.95272" />
                                        <Key frame="195" value="0.498473" />
                                        <Key frame="210" value="0.498473" />
                                        <Key frame="227" value="7.02893" />
                                        <Key frame="241" value="0.70073" />
                                        <Key frame="256" value="2.01911" />
                                        <Key frame="271" value="0.498473" />
                                        <Key frame="285" value="0.498473" />
                                        <Key frame="303" value="1.0523" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="18" value="-50.7159" />
                                        <Key frame="32" value="-99.7595" />
                                        <Key frame="45" value="-90.0914" />
                                        <Key frame="111" value="-47.0245" />
                                        <Key frame="135" value="-47.4639" />
                                        <Key frame="149" value="-43.0693" />
                                        <Key frame="166" value="-90.0035" />
                                        <Key frame="179" value="-73.8315" />
                                        <Key frame="195" value="-41.3994" />
                                        <Key frame="210" value="-91.0582" />
                                        <Key frame="227" value="-100.638" />
                                        <Key frame="241" value="-35.0712" />
                                        <Key frame="256" value="-33.6649" />
                                        <Key frame="271" value="-54.4953" />
                                        <Key frame="285" value="-79.6323" />
                                        <Key frame="303" value="-80.4233" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="18" value="-64.8617" />
                                        <Key frame="32" value="-52.469" />
                                        <Key frame="45" value="-37.0879" />
                                        <Key frame="111" value="-5.53477" />
                                        <Key frame="135" value="-5.79845" />
                                        <Key frame="149" value="-34.0996" />
                                        <Key frame="166" value="-47.4591" />
                                        <Key frame="179" value="-38.9336" />
                                        <Key frame="195" value="-73.6509" />
                                        <Key frame="210" value="-60.9945" />
                                        <Key frame="227" value="-60.2034" />
                                        <Key frame="241" value="-89.0319" />
                                        <Key frame="256" value="-88.6803" />
                                        <Key frame="271" value="-52.1174" />
                                        <Key frame="285" value="-39.8125" />
                                        <Key frame="303" value="-30.8476" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="32" value="-45" />
                                        <Key frame="45" value="-45.003" />
                                        <Key frame="111" value="-45.3545" />
                                        <Key frame="135" value="-44.8272" />
                                        <Key frame="166" value="-42" />
                                        <Key frame="195" value="-72" />
                                        <Key frame="227" value="-37.7" />
                                        <Key frame="256" value="-26" />
                                        <Key frame="285" value="-32.0829" />
                                        <Key frame="303" value="-34.3681" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="32" value="39.8" />
                                        <Key frame="45" value="38.3413" />
                                        <Key frame="111" value="38.3613" />
                                        <Key frame="135" value="36.8613" />
                                        <Key frame="166" value="19.7" />
                                        <Key frame="195" value="41.5" />
                                        <Key frame="227" value="35.8" />
                                        <Key frame="256" value="28" />
                                        <Key frame="285" value="27.9814" />
                                        <Key frame="303" value="27.0014" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="16" value="65.9212" />
                                        <Key frame="30" value="69.0853" />
                                        <Key frame="43" value="72.2494" />
                                        <Key frame="109" value="59.7688" />
                                        <Key frame="133" value="60.7356" />
                                        <Key frame="147" value="55.6379" />
                                        <Key frame="164" value="58.9778" />
                                        <Key frame="177" value="72.0736" />
                                        <Key frame="193" value="76.2045" />
                                        <Key frame="208" value="57.8352" />
                                        <Key frame="225" value="58.1867" />
                                        <Key frame="239" value="78.4897" />
                                        <Key frame="254" value="82.7964" />
                                        <Key frame="269" value="84.3785" />
                                        <Key frame="283" value="77.2592" />
                                        <Key frame="301" value="74.2709" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="16" value="-0.969213" />
                                        <Key frame="30" value="-3.2544" />
                                        <Key frame="43" value="-1.145" />
                                        <Key frame="109" value="-3.43018" />
                                        <Key frame="133" value="-2.37548" />
                                        <Key frame="147" value="-1.23289" />
                                        <Key frame="164" value="-1.0571" />
                                        <Key frame="177" value="-1.32078" />
                                        <Key frame="193" value="-1.0571" />
                                        <Key frame="208" value="-0.705538" />
                                        <Key frame="225" value="-0.617646" />
                                        <Key frame="239" value="-1.32078" />
                                        <Key frame="254" value="-0.969213" />
                                        <Key frame="269" value="-2.63916" />
                                        <Key frame="283" value="-0.705538" />
                                        <Key frame="301" value="-0.969213" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="16" value="66.6195" />
                                        <Key frame="30" value="101.952" />
                                        <Key frame="43" value="50.9748" />
                                        <Key frame="109" value="54.4026" />
                                        <Key frame="133" value="53.9631" />
                                        <Key frame="147" value="33.2207" />
                                        <Key frame="164" value="78.3091" />
                                        <Key frame="177" value="102.567" />
                                        <Key frame="193" value="40.0762" />
                                        <Key frame="208" value="47.2833" />
                                        <Key frame="225" value="39.7247" />
                                        <Key frame="239" value="37.2637" />
                                        <Key frame="254" value="42.5372" />
                                        <Key frame="269" value="97.3816" />
                                        <Key frame="283" value="50.008" />
                                        <Key frame="301" value="44.5587" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="16" value="78.3139" />
                                        <Key frame="30" value="53.88" />
                                        <Key frame="43" value="60.384" />
                                        <Key frame="109" value="7.56109" />
                                        <Key frame="133" value="8.08844" />
                                        <Key frame="147" value="82.7085" />
                                        <Key frame="164" value="62.4055" />
                                        <Key frame="177" value="56.8684" />
                                        <Key frame="193" value="54.8468" />
                                        <Key frame="208" value="70.8431" />
                                        <Key frame="225" value="72.3373" />
                                        <Key frame="239" value="54.0558" />
                                        <Key frame="254" value="43.7725" />
                                        <Key frame="269" value="30.2372" />
                                        <Key frame="283" value="77.6987" />
                                        <Key frame="301" value="82.0933" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="30" value="43" />
                                        <Key frame="43" value="44.2071" />
                                        <Key frame="109" value="43.504" />
                                        <Key frame="133" value="43.2403" />
                                        <Key frame="164" value="28" />
                                        <Key frame="193" value="-11" />
                                        <Key frame="225" value="-22" />
                                        <Key frame="254" value="20" />
                                        <Key frame="283" value="20.74" />
                                        <Key frame="301" value="21.0916" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="30" value="39.4" />
                                        <Key frame="43" value="38.0013" />
                                        <Key frame="109" value="38.0013" />
                                        <Key frame="133" value="36.6013" />
                                        <Key frame="164" value="22" />
                                        <Key frame="193" value="16.8" />
                                        <Key frame="225" value="35" />
                                        <Key frame="254" value="12" />
                                        <Key frame="283" value="12.0814" />
                                        <Key frame="301" value="11.6214" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="31" value="-15.906" />
                                        <Key frame="44" value="-15.8181" />
                                        <Key frame="110" value="-22.3221" />
                                        <Key frame="134" value="-22.3221" />
                                        <Key frame="165" value="-21.1795" />
                                        <Key frame="194" value="-19.0701" />
                                        <Key frame="226" value="-20.9158" />
                                        <Key frame="255" value="-22.2342" />
                                        <Key frame="284" value="-21.619" />
                                        <Key frame="302" value="-21.619" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="31" value="5.53958" />
                                        <Key frame="44" value="5.53958" />
                                        <Key frame="110" value="-6.23791" />
                                        <Key frame="134" value="-6.23791" />
                                        <Key frame="165" value="7.38531" />
                                        <Key frame="194" value="8.61579" />
                                        <Key frame="226" value="12.8346" />
                                        <Key frame="255" value="7.38531" />
                                        <Key frame="284" value="4.13332" />
                                        <Key frame="302" value="4.22121" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="31" value="11.6041" />
                                        <Key frame="44" value="11.692" />
                                        <Key frame="110" value="-28.0351" />
                                        <Key frame="134" value="-28.0351" />
                                        <Key frame="165" value="20.0417" />
                                        <Key frame="194" value="26.6336" />
                                        <Key frame="226" value="18.6355" />
                                        <Key frame="255" value="12.3951" />
                                        <Key frame="284" value="19.8659" />
                                        <Key frame="302" value="19.778" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="31" value="-5.29104" />
                                        <Key frame="44" value="-5.18802" />
                                        <Key frame="110" value="-5.27591" />
                                        <Key frame="134" value="-5.27591" />
                                        <Key frame="165" value="-5.27591" />
                                        <Key frame="194" value="-5.18802" />
                                        <Key frame="226" value="-5.29104" />
                                        <Key frame="255" value="-5.27591" />
                                        <Key frame="284" value="-5.27591" />
                                        <Key frame="302" value="-5.18802" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="31" value="7.55628" />
                                        <Key frame="44" value="7.55628" />
                                        <Key frame="110" value="24.5194" />
                                        <Key frame="134" value="24.5194" />
                                        <Key frame="165" value="6.67737" />
                                        <Key frame="194" value="1.40386" />
                                        <Key frame="226" value="4.91953" />
                                        <Key frame="255" value="9.75358" />
                                        <Key frame="284" value="4.74375" />
                                        <Key frame="302" value="4.91953" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="31" value="-5.18321" />
                                        <Key frame="44" value="-5.18321" />
                                        <Key frame="110" value="0.178188" />
                                        <Key frame="134" value="0.178188" />
                                        <Key frame="165" value="-4.83164" />
                                        <Key frame="194" value="-5.79845" />
                                        <Key frame="226" value="-9.92936" />
                                        <Key frame="255" value="-5.2711" />
                                        <Key frame="284" value="-2.63435" />
                                        <Key frame="302" value="-2.63435" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="31" value="2.28759" />
                                        <Key frame="44" value="2.28759" />
                                        <Key frame="110" value="9.84628" />
                                        <Key frame="134" value="9.84628" />
                                        <Key frame="165" value="-3.95272" />
                                        <Key frame="194" value="-6.76526" />
                                        <Key frame="226" value="1.76024" />
                                        <Key frame="255" value="0.00240423" />
                                        <Key frame="284" value="-7.55628" />
                                        <Key frame="302" value="-7.3805" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="31" value="12.3024" />
                                        <Key frame="44" value="12.1267" />
                                        <Key frame="110" value="-27.6004" />
                                        <Key frame="134" value="-27.6883" />
                                        <Key frame="165" value="22.41" />
                                        <Key frame="194" value="27.8242" />
                                        <Key frame="226" value="23.3768" />
                                        <Key frame="255" value="15.7302" />
                                        <Key frame="284" value="21.4432" />
                                        <Key frame="302" value="21.1795" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="31" value="-5.79845" />
                                        <Key frame="44" value="-5.79845" />
                                        <Key frame="110" value="-5.79845" />
                                        <Key frame="134" value="-5.79845" />
                                        <Key frame="165" value="-5.79845" />
                                        <Key frame="194" value="-5.44688" />
                                        <Key frame="226" value="-5.90622" />
                                        <Key frame="255" value="-5.79845" />
                                        <Key frame="284" value="-5.88634" />
                                        <Key frame="302" value="-5.88634" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="31" value="7.20953" />
                                        <Key frame="44" value="7.12163" />
                                        <Key frame="110" value="23.03" />
                                        <Key frame="134" value="23.1179" />
                                        <Key frame="165" value="4.39699" />
                                        <Key frame="194" value="-0.876513" />
                                        <Key frame="226" value="0.79343" />
                                        <Key frame="255" value="6.68218" />
                                        <Key frame="284" value="3.16651" />
                                        <Key frame="302" value="3.2544" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="31" value="-2.54646" />
                                        <Key frame="44" value="-2.54646" />
                                        <Key frame="110" value="-3.07381" />
                                        <Key frame="134" value="-3.07381" />
                                        <Key frame="165" value="1.76024" />
                                        <Key frame="194" value="3.60596" />
                                        <Key frame="226" value="-1.93121" />
                                        <Key frame="255" value="-0.437054" />
                                        <Key frame="284" value="4.66067" />
                                        <Key frame="302" value="4.57277" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="stand_realStory1_10" robot="" id="5" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="216" y="280">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                            <Timeline fps="25" resources_acquisition="0" size="400" enable="1" start_frame="0" end_frame="-1" scale="10">
                                <watches />
                                <BehaviorLayer name="speech" mute="0">
                                    <BehaviorKeyframe name="speech" index="6" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="Enter name here" robot="" id="1" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="localizationbox_plugin" x="110" y="66">
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)
		self.tts = ALProxy("ALTextToSpeech")

	def onInput_onStart(self):
		sEnglish = ""
		sFrench = "Je m'approche de la porte, mais celle-ci ne s'ouvre pas."
		sSpanish = ""
		sItalian = ""
		sGerman = ""
		sChinese = ""
		sPolish = ""
		sKorean = ""
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(eval("s"+sDefaultLang))]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <english></english>
                                                    <french>Je m&apos;approche de la porte, mais celle-ci ne s&apos;ouvre pas.</french>
                                                    <spanish></spanish>
                                                    <italian></italian>
                                                    <german></german>
                                                    <chinese></chinese>
                                                    <polish></polish>
                                                    <korean></korean>
                                                    <language>1</language>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Box name="SayTextPrerender_ref" robot="" id="2" tooltip="Receive a string, precompute it, then say it!&#x0A;All steps are outputted to add synchro or interesting behaviors...&#x0A;&#x0A;v1.1" bitmap_expanded="1" plugin="" x="428" y="178">
                                                <bitmap>media/images/box/icons_appu/sayPrecomputed.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# SayTextPrerender - v1.1
import altools

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self);
        self.nStateInit = 0;
        self.nStatePreparing = 1;
        self.nStateSpeaking = 2;
        self.nStateStopped = 3;
        
    def onLoad(self):
        self.nStep = self.nStateInit;
        self.bStopped = False;
    
    def onUnload(self):
        self.onInput_onStop();

    def onInput_onStart(self, p):
        if( self.nStep == self.nStateSpeaking or self.nStep == self.nStatePreparing ):
            self.log( "%s: already speaking, won't say that sentence: '%s'" % ( self.boxName, p ) );
            return;

        self.bStopped = False;
        txt = p;
        self.nStep = self.nStatePreparing;
        self.output_onPreparing();
        if( self.getParameter( "bWithLight" ) ):
            altools.sayAndCacheAndLight( txt, True, self.getParameter( 'bStoreToNonVolatilePath' ), nUseLang = self.getParameter( 'nNumLanguage' ) );
        else:
            altools.sayAndCache( txt, True, self.getParameter( 'bStoreToNonVolatilePath' ), nUseLang = self.getParameter( 'nNumLanguage' ) );
        self.output_onPrepared();            
        if( not self.getParameter( 'bJustPrepare' ) ):
            if( not self.bStopped ):
                self.nStep = self.nStateSpeaking;
                self.output_onStartSpeaking();
                if( self.getParameter( "bWithLight" ) ):
                    altools.sayAndCacheAndLight( txt, nUseLang = self.getParameter( 'nNumLanguage' ) );
                else:
                    altools.sayAndCache( txt, nUseLang = self.getParameter( 'nNumLanguage' ) );
                self.output_onStopSpeaking();            
        else:
            pass
        self.nStep = self.nStateStopped;
    
    def onInput_onStop(self):
        nCpt = 0;
        # adding a timeout
        nMaxCpt = 60;
        self.bStopped = True;
        while( self.nStep == self.nStatePreparing and nCpt <= nMaxCpt ): # can't kill while preparing
            print( "%s.onStop: waiting to stop than the sound is prepared..." % self.boxName );
            time.sleep( 0.5 );
            nCpt += 1;
        if( nCpt > nMaxCpt ):
            altools.playSound( 'warning_speech_error.wav' );
        # on le fait plusieurs fois car des fois on peut se trouver pile entre le set du play et le lancage de la commande
        for i in range( 3 ):
            if( self.nStep == self.nStateSpeaking ):
                altools.mySystemCall( "killall aplay" );     # todo: better killling method!
                time.sleep( 0.2 );]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="output_onPreparing" type="1" type_size="1" nature="2" inner="0" tooltip="Text are being prepared" id="4" />
                                                <Output name="output_onPrepared" type="1" type_size="1" nature="2" inner="0" tooltip="the sound is prepared and ready to be launched" id="5" />
                                                <Output name="output_onStartSpeaking" type="1" type_size="1" nature="2" inner="0" tooltip="Nao begin to speak" id="6" />
                                                <Output name="output_onStopSpeaking" type="1" type_size="1" nature="2" inner="0" tooltip="Nao has stop speaking" id="7" />
                                                <Parameter name="bWithLight" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="use light in eyes to speak" id="8" />
                                                <Parameter name="bJustPrepare" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Don&apos;t say the text now, just generate it." id="9" />
                                                <Parameter name="bStoreToNonVolatilePath" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="copy the generated file to a non volatile path." id="10" />
                                                <Parameter name="nNumLanguage" inherits_from_parent="0" content_type="1" value="-1" default_value="-1" min="-1" max="30" tooltip="To speak with a different speak language, specify it there (default -1: current one)" id="11" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <BehaviorLayer name="fx" mute="0">
                                    <BehaviorKeyframe name="blink" index="10" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="blink2" index="88" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList>
                                    <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="22" value="-11.4283" />
                                        <Key frame="39" value="-11.0768" />
                                        <Key frame="53" value="-31.6434" />
                                        <Key frame="66" value="7.55628" />
                                        <Key frame="80" value="-8.70368" />
                                        <Key frame="106" value="-8.61579" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="22" value="-15.9108" />
                                        <Key frame="39" value="-15.2077" />
                                        <Key frame="53" value="-0.881321" />
                                        <Key frame="66" value="1.84332" />
                                        <Key frame="80" value="-19.1628" />
                                        <Key frame="106" value="-14.0651" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="20" value="70.2231" />
                                        <Key frame="37" value="66.0043" />
                                        <Key frame="51" value="82.0885" />
                                        <Key frame="64" value="87.1862" />
                                        <Key frame="78" value="88.6803" />
                                        <Key frame="104" value="90.9655" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="20" value="0.498473" />
                                        <Key frame="37" value="0.498473" />
                                        <Key frame="51" value="0.498473" />
                                        <Key frame="64" value="3.95272" />
                                        <Key frame="78" value="3.95272" />
                                        <Key frame="104" value="9.66569" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="20" value="-55.9015" />
                                        <Key frame="37" value="-57.132" />
                                        <Key frame="51" value="-70.6674" />
                                        <Key frame="64" value="-71.8099" />
                                        <Key frame="78" value="-74.0072" />
                                        <Key frame="104" value="-76.3803" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="20" value="-68.641" />
                                        <Key frame="37" value="-56.6878" />
                                        <Key frame="51" value="-37.5274" />
                                        <Key frame="64" value="-32.957" />
                                        <Key frame="78" value="-27.244" />
                                        <Key frame="104" value="-22.6737" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="37" value="-51.7" />
                                        <Key frame="78" value="-57.3078" />
                                        <Key frame="104" value="-59.3293" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="37" value="35" />
                                        <Key frame="78" value="35.0813" />
                                        <Key frame="104" value="33.7613" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="18" value="75.2377" />
                                        <Key frame="35" value="70.2279" />
                                        <Key frame="49" value="72.601" />
                                        <Key frame="62" value="91.0582" />
                                        <Key frame="76" value="97.3864" />
                                        <Key frame="102" value="100.375" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="18" value="-0.617646" />
                                        <Key frame="35" value="-0.969213" />
                                        <Key frame="49" value="-1.40867" />
                                        <Key frame="62" value="-2.11181" />
                                        <Key frame="76" value="-3.69386" />
                                        <Key frame="102" value="-5.89115" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="18" value="90.614" />
                                        <Key frame="35" value="96.1511" />
                                        <Key frame="49" value="57.0393" />
                                        <Key frame="62" value="67.85" />
                                        <Key frame="76" value="87.362" />
                                        <Key frame="102" value="97.3816" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="18" value="71.3705" />
                                        <Key frame="35" value="60.2961" />
                                        <Key frame="49" value="68.9974" />
                                        <Key frame="62" value="51.8585" />
                                        <Key frame="76" value="40.6084" />
                                        <Key frame="102" value="33.7528" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="35" value="42" />
                                        <Key frame="76" value="43.1524" />
                                        <Key frame="102" value="43.0645" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="35" value="29" />
                                        <Key frame="76" value="29.1414" />
                                        <Key frame="102" value="28.0414" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="36" value="-21.5311" />
                                        <Key frame="77" value="-21.2674" />
                                        <Key frame="103" value="-21.7947" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="36" value="9.40682" />
                                        <Key frame="77" value="7.56109" />
                                        <Key frame="103" value="11.0768" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="36" value="20.2175" />
                                        <Key frame="77" value="16.1745" />
                                        <Key frame="103" value="15.9108" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="36" value="-5.27591" />
                                        <Key frame="77" value="-5.18802" />
                                        <Key frame="103" value="-5.29104" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="36" value="3.51326" />
                                        <Key frame="77" value="6.67737" />
                                        <Key frame="103" value="6.94104" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="36" value="-7.02893" />
                                        <Key frame="77" value="-5.53477" />
                                        <Key frame="103" value="-8.34731" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="36" value="-3.33748" />
                                        <Key frame="77" value="-2.45856" />
                                        <Key frame="103" value="1.23289" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="36" value="24.3436" />
                                        <Key frame="77" value="18.7185" />
                                        <Key frame="103" value="20.0369" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="36" value="-5.90622" />
                                        <Key frame="77" value="-5.44688" />
                                        <Key frame="103" value="-5.71056" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="36" value="0.441863" />
                                        <Key frame="77" value="4.04542" />
                                        <Key frame="103" value="3.07861" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="36" value="1.67235" />
                                        <Key frame="77" value="1.23289" />
                                        <Key frame="103" value="-1.49176" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="stand_realStory1_6" robot="" id="4" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="216" y="157">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                            <Timeline fps="25" resources_acquisition="0" size="400" enable="1" start_frame="0" end_frame="-1" scale="10">
                                <watches />
                                <BehaviorLayer name="speech" mute="0">
                                    <BehaviorKeyframe name="speech" index="8" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="Enter name here" robot="" id="1" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="localizationbox_plugin" x="111" y="66">
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)
		self.tts = ALProxy("ALTextToSpeech")

	def onInput_onStart(self):
		sEnglish = ""
		sFrench = "Comme je suis déjà très en retard, je demande mon chemin à un groupe d'humain."
		sSpanish = ""
		sItalian = ""
		sGerman = ""
		sChinese = ""
		sPolish = ""
		sKorean = ""
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(eval("s"+sDefaultLang))]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <english></english>
                                                    <french>Comme je suis déjà très en retard, je demande mon chemin à un groupe d&apos;humain.</french>
                                                    <spanish></spanish>
                                                    <italian></italian>
                                                    <german></german>
                                                    <chinese></chinese>
                                                    <polish></polish>
                                                    <korean></korean>
                                                    <language>1</language>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Box name="SayTextPrerender_ref" robot="" id="2" tooltip="Receive a string, precompute it, then say it!&#x0A;All steps are outputted to add synchro or interesting behaviors...&#x0A;&#x0A;v1.1" bitmap_expanded="1" plugin="" x="390" y="101">
                                                <bitmap>media/images/box/icons_appu/sayPrecomputed.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# SayTextPrerender - v1.1
import altools

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self);
        self.nStateInit = 0;
        self.nStatePreparing = 1;
        self.nStateSpeaking = 2;
        self.nStateStopped = 3;
        
    def onLoad(self):
        self.nStep = self.nStateInit;
        self.bStopped = False;
    
    def onUnload(self):
        self.onInput_onStop();

    def onInput_onStart(self, p):
        if( self.nStep == self.nStateSpeaking or self.nStep == self.nStatePreparing ):
            self.log( "%s: already speaking, won't say that sentence: '%s'" % ( self.boxName, p ) );
            return;

        self.bStopped = False;
        txt = p;
        self.nStep = self.nStatePreparing;
        self.output_onPreparing();
        if( self.getParameter( "bWithLight" ) ):
            altools.sayAndCacheAndLight( txt, True, self.getParameter( 'bStoreToNonVolatilePath' ), nUseLang = self.getParameter( 'nNumLanguage' ) );
        else:
            altools.sayAndCache( txt, True, self.getParameter( 'bStoreToNonVolatilePath' ), nUseLang = self.getParameter( 'nNumLanguage' ) );
        self.output_onPrepared();            
        if( not self.getParameter( 'bJustPrepare' ) ):
            if( not self.bStopped ):
                self.nStep = self.nStateSpeaking;
                self.output_onStartSpeaking();
                if( self.getParameter( "bWithLight" ) ):
                    altools.sayAndCacheAndLight( txt, nUseLang = self.getParameter( 'nNumLanguage' ) );
                else:
                    altools.sayAndCache( txt, nUseLang = self.getParameter( 'nNumLanguage' ) );
                self.output_onStopSpeaking();            
        else:
            pass
        self.nStep = self.nStateStopped;
    
    def onInput_onStop(self):
        nCpt = 0;
        # adding a timeout
        nMaxCpt = 60;
        self.bStopped = True;
        while( self.nStep == self.nStatePreparing and nCpt <= nMaxCpt ): # can't kill while preparing
            print( "%s.onStop: waiting to stop than the sound is prepared..." % self.boxName );
            time.sleep( 0.5 );
            nCpt += 1;
        if( nCpt > nMaxCpt ):
            altools.playSound( 'warning_speech_error.wav' );
        # on le fait plusieurs fois car des fois on peut se trouver pile entre le set du play et le lancage de la commande
        for i in range( 3 ):
            if( self.nStep == self.nStateSpeaking ):
                altools.mySystemCall( "killall aplay" );     # todo: better killling method!
                time.sleep( 0.2 );]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="output_onPreparing" type="1" type_size="1" nature="2" inner="0" tooltip="Text are being prepared" id="4" />
                                                <Output name="output_onPrepared" type="1" type_size="1" nature="2" inner="0" tooltip="the sound is prepared and ready to be launched" id="5" />
                                                <Output name="output_onStartSpeaking" type="1" type_size="1" nature="2" inner="0" tooltip="Nao begin to speak" id="6" />
                                                <Output name="output_onStopSpeaking" type="1" type_size="1" nature="2" inner="0" tooltip="Nao has stop speaking" id="7" />
                                                <Parameter name="bWithLight" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="use light in eyes to speak" id="8" />
                                                <Parameter name="bJustPrepare" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Don&apos;t say the text now, just generate it." id="9" />
                                                <Parameter name="bStoreToNonVolatilePath" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="copy the generated file to a non volatile path." id="10" />
                                                <Parameter name="nNumLanguage" inherits_from_parent="0" content_type="1" value="-1" default_value="-1" min="-1" max="30" tooltip="To speak with a different speak language, specify it there (default -1: current one)" id="11" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <BehaviorLayer name="LED" mute="0">
                                    <BehaviorKeyframe name="blink" index="5" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="blink2" index="79" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="blink3" index="118" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList>
                                    <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="20" value="-7.64898" />
                                        <Key frame="35" value="-8.44001" />
                                        <Key frame="51" value="-5.45169" />
                                        <Key frame="69" value="-15.6471" />
                                        <Key frame="82" value="-10.4615" />
                                        <Key frame="96" value="-10.7252" />
                                        <Key frame="114" value="-8.87947" />
                                        <Key frame="128" value="-7.03374" />
                                        <Key frame="147" value="-6.77007" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="20" value="-17.2292" />
                                        <Key frame="35" value="-20.5691" />
                                        <Key frame="51" value="-1" />
                                        <Key frame="69" value="-19.3386" />
                                        <Key frame="82" value="-17.1413" />
                                        <Key frame="96" value="-12.2194" />
                                        <Key frame="114" value="-16.7897" />
                                        <Key frame="128" value="-9.67049" />
                                        <Key frame="147" value="-14.5045" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="18" value="71.5415" />
                                        <Key frame="33" value="73.563" />
                                        <Key frame="49" value="83.0553" />
                                        <Key frame="67" value="75.0571" />
                                        <Key frame="80" value="93.9538" />
                                        <Key frame="94" value="96.4148" />
                                        <Key frame="112" value="80.9459" />
                                        <Key frame="126" value="63.1917" />
                                        <Key frame="145" value="98.7879" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="18" value="0.612838" />
                                        <Key frame="33" value="0.788621" />
                                        <Key frame="49" value="0.788621" />
                                        <Key frame="67" value="0.498473" />
                                        <Key frame="80" value="1.31597" />
                                        <Key frame="94" value="2.37067" />
                                        <Key frame="112" value="0.498473" />
                                        <Key frame="126" value="0.498473" />
                                        <Key frame="145" value="5.09532" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="18" value="-52.3859" />
                                        <Key frame="33" value="-82.0933" />
                                        <Key frame="49" value="-58.7141" />
                                        <Key frame="67" value="-59.3293" />
                                        <Key frame="80" value="-74.183" />
                                        <Key frame="94" value="-87.5426" />
                                        <Key frame="112" value="-52.7374" />
                                        <Key frame="126" value="-76.8198" />
                                        <Key frame="145" value="-88.6852" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="18" value="-72.9477" />
                                        <Key frame="33" value="-68.5531" />
                                        <Key frame="49" value="-32.166" />
                                        <Key frame="67" value="-44.295" />
                                        <Key frame="80" value="-58.6214" />
                                        <Key frame="94" value="-44.295" />
                                        <Key frame="112" value="-54.3147" />
                                        <Key frame="126" value="-59.6761" />
                                        <Key frame="145" value="-33.0449" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="33" value="-45" />
                                        <Key frame="67" value="5" />
                                        <Key frame="94" value="2.2" />
                                        <Key frame="126" value="-37" />
                                        <Key frame="145" value="-2" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="33" value="32" />
                                        <Key frame="67" value="25.4" />
                                        <Key frame="94" value="22.5614" />
                                        <Key frame="126" value="41" />
                                        <Key frame="145" value="20" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="16" value="61.0872" />
                                        <Key frame="31" value="70.4916" />
                                        <Key frame="47" value="62.5813" />
                                        <Key frame="65" value="64.6028" />
                                        <Key frame="78" value="93.1676" />
                                        <Key frame="92" value="92.904" />
                                        <Key frame="110" value="74.7104" />
                                        <Key frame="124" value="66.7122" />
                                        <Key frame="143" value="90.6188" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="16" value="-1.40867" />
                                        <Key frame="31" value="-0.969213" />
                                        <Key frame="47" value="-0.969213" />
                                        <Key frame="65" value="-7.03374" />
                                        <Key frame="78" value="-1.93602" />
                                        <Key frame="92" value="-1.49656" />
                                        <Key frame="110" value="-0.79343" />
                                        <Key frame="124" value="-0.79343" />
                                        <Key frame="143" value="-4.66067" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="16" value="48.6896" />
                                        <Key frame="31" value="91.405" />
                                        <Key frame="47" value="47.2833" />
                                        <Key frame="65" value="105.907" />
                                        <Key frame="78" value="107.665" />
                                        <Key frame="92" value="94.4812" />
                                        <Key frame="110" value="56.5999" />
                                        <Key frame="124" value="105.819" />
                                        <Key frame="143" value="99.7547" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="16" value="88.5973" />
                                        <Key frame="31" value="76.644" />
                                        <Key frame="47" value="88.5973" />
                                        <Key frame="65" value="62.845" />
                                        <Key frame="78" value="51.8585" />
                                        <Key frame="92" value="38.6748" />
                                        <Key frame="110" value="76.3803" />
                                        <Key frame="124" value="69.7005" />
                                        <Key frame="143" value="25.6668" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="31" value="39" />
                                        <Key frame="65" value="26.9" />
                                        <Key frame="92" value="-11.9" />
                                        <Key frame="124" value="39" />
                                        <Key frame="143" value="6.5" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="31" value="32.2" />
                                        <Key frame="65" value="29" />
                                        <Key frame="92" value="29.1214" />
                                        <Key frame="124" value="40.1" />
                                        <Key frame="143" value="19" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="32" value="-24.6073" />
                                        <Key frame="66" value="-24.5194" />
                                        <Key frame="93" value="-24.6073" />
                                        <Key frame="125" value="-24.5194" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="32" value="3.43018" />
                                        <Key frame="66" value="3.51807" />
                                        <Key frame="93" value="1.0571" />
                                        <Key frame="125" value="4.13332" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="32" value="21.8874" />
                                        <Key frame="66" value="21.9753" />
                                        <Key frame="93" value="23.3816" />
                                        <Key frame="125" value="23.3816" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="32" value="-5.29104" />
                                        <Key frame="66" value="-5.27591" />
                                        <Key frame="93" value="-5.01223" />
                                        <Key frame="125" value="-4.92434" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="32" value="2.45856" />
                                        <Key frame="66" value="2.45856" />
                                        <Key frame="93" value="1.66754" />
                                        <Key frame="125" value="2.45856" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="32" value="-1.93121" />
                                        <Key frame="66" value="-2.01911" />
                                        <Key frame="93" value="0.529755" />
                                        <Key frame="125" value="-1.66754" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="32" value="-3.24959" />
                                        <Key frame="66" value="-3.1617" />
                                        <Key frame="93" value="-6.23791" />
                                        <Key frame="125" value="-3.77694" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="32" value="22.2342" />
                                        <Key frame="66" value="22.3221" />
                                        <Key frame="93" value="22.41" />
                                        <Key frame="125" value="23.3768" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="32" value="-5.90622" />
                                        <Key frame="66" value="-5.88634" />
                                        <Key frame="93" value="-5.90622" />
                                        <Key frame="125" value="-5.71056" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="32" value="2.63916" />
                                        <Key frame="66" value="2.72705" />
                                        <Key frame="93" value="3.07861" />
                                        <Key frame="125" value="2.99072" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="32" value="1.0571" />
                                        <Key frame="66" value="0.969213" />
                                        <Key frame="93" value="3.34229" />
                                        <Key frame="125" value="0.79343" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="stand_realStory1_2" robot="" id="6" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="218" y="35">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                            <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="101" scale="10">
                                <watches />
                                <BehaviorLayer name="speech" mute="0">
                                    <BehaviorKeyframe name="speech" index="3" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="Enter name here" robot="" id="1" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="localizationbox_plugin" x="111" y="66">
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)
		self.tts = ALProxy("ALTextToSpeech")

	def onInput_onStart(self):
		sEnglish = ""
		sFrench = "Je devais aller chez aldébaran pour me faire graisser les moteurs."
		sSpanish = ""
		sItalian = ""
		sGerman = ""
		sChinese = ""
		sPolish = ""
		sKorean = ""
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(eval("s"+sDefaultLang))]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <english></english>
                                                    <french>Je devais aller chez aldébaran pour me faire graisser les moteurs.</french>
                                                    <spanish></spanish>
                                                    <italian></italian>
                                                    <german></german>
                                                    <chinese></chinese>
                                                    <polish></polish>
                                                    <korean></korean>
                                                    <language>1</language>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Box name="SayTextPrerender_ref" robot="" id="2" tooltip="Receive a string, precompute it, then say it!&#x0A;All steps are outputted to add synchro or interesting behaviors...&#x0A;&#x0A;v1.1" bitmap_expanded="1" plugin="" x="396" y="62">
                                                <bitmap>media/images/box/icons_appu/sayPrecomputed.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# SayTextPrerender - v1.1
import altools

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self);
        self.nStateInit = 0;
        self.nStatePreparing = 1;
        self.nStateSpeaking = 2;
        self.nStateStopped = 3;
        
    def onLoad(self):
        self.nStep = self.nStateInit;
        self.bStopped = False;
    
    def onUnload(self):
        self.onInput_onStop();

    def onInput_onStart(self, p):
        if( self.nStep == self.nStateSpeaking or self.nStep == self.nStatePreparing ):
            self.log( "%s: already speaking, won't say that sentence: '%s'" % ( self.boxName, p ) );
            return;

        self.bStopped = False;
        txt = p;
        self.nStep = self.nStatePreparing;
        self.output_onPreparing();
        if( self.getParameter( "bWithLight" ) ):
            altools.sayAndCacheAndLight( txt, True, self.getParameter( 'bStoreToNonVolatilePath' ), nUseLang = self.getParameter( 'nNumLanguage' ) );
        else:
            altools.sayAndCache( txt, True, self.getParameter( 'bStoreToNonVolatilePath' ), nUseLang = self.getParameter( 'nNumLanguage' ) );
        self.output_onPrepared();            
        if( not self.getParameter( 'bJustPrepare' ) ):
            if( not self.bStopped ):
                self.nStep = self.nStateSpeaking;
                self.output_onStartSpeaking();
                if( self.getParameter( "bWithLight" ) ):
                    altools.sayAndCacheAndLight( txt, nUseLang = self.getParameter( 'nNumLanguage' ) );
                else:
                    altools.sayAndCache( txt, nUseLang = self.getParameter( 'nNumLanguage' ) );
                self.output_onStopSpeaking();            
        else:
            pass
        self.nStep = self.nStateStopped;
    
    def onInput_onStop(self):
        nCpt = 0;
        # adding a timeout
        nMaxCpt = 60;
        self.bStopped = True;
        while( self.nStep == self.nStatePreparing and nCpt <= nMaxCpt ): # can't kill while preparing
            print( "%s.onStop: waiting to stop than the sound is prepared..." % self.boxName );
            time.sleep( 0.5 );
            nCpt += 1;
        if( nCpt > nMaxCpt ):
            altools.playSound( 'warning_speech_error.wav' );
        # on le fait plusieurs fois car des fois on peut se trouver pile entre le set du play et le lancage de la commande
        for i in range( 3 ):
            if( self.nStep == self.nStateSpeaking ):
                altools.mySystemCall( "killall aplay" );     # todo: better killling method!
                time.sleep( 0.2 );]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="output_onPreparing" type="1" type_size="1" nature="2" inner="0" tooltip="Text are being prepared" id="4" />
                                                <Output name="output_onPrepared" type="1" type_size="1" nature="2" inner="0" tooltip="the sound is prepared and ready to be launched" id="5" />
                                                <Output name="output_onStartSpeaking" type="1" type_size="1" nature="2" inner="0" tooltip="Nao begin to speak" id="6" />
                                                <Output name="output_onStopSpeaking" type="1" type_size="1" nature="2" inner="0" tooltip="Nao has stop speaking" id="7" />
                                                <Parameter name="bWithLight" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="use light in eyes to speak" id="8" />
                                                <Parameter name="bJustPrepare" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Don&apos;t say the text now, just generate it." id="9" />
                                                <Parameter name="bStoreToNonVolatilePath" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="copy the generated file to a non volatile path." id="10" />
                                                <Parameter name="nNumLanguage" inherits_from_parent="0" content_type="1" value="-1" default_value="-1" min="-1" max="30" tooltip="To speak with a different speak language, specify it there (default -1: current one)" id="11" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <BehaviorLayer name="LED" mute="0">
                                    <BehaviorKeyframe name="blink" index="5" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="blink2" index="62" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList>
                                    <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="21" value="-8.00055" />
                                        <Key frame="36" value="-9.40682" />
                                        <Key frame="50" value="-7.38531" />
                                        <Key frame="68" value="-6.59428" />
                                        <Key frame="81" value="-6.68218" />
                                        <Key frame="98" value="-3.95753" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="21" value="-1.32078" />
                                        <Key frame="36" value="-16.8776" />
                                        <Key frame="50" value="-12.1315" />
                                        <Key frame="68" value="-18.1081" />
                                        <Key frame="81" value="-23.6453" />
                                        <Key frame="98" value="-16.7897" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="19" value="34.0996" />
                                        <Key frame="34" value="46.8439" />
                                        <Key frame="48" value="47.6349" />
                                        <Key frame="66" value="66.7074" />
                                        <Key frame="79" value="70.7504" />
                                        <Key frame="96" value="64.0707" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="19" value="0.498473" />
                                        <Key frame="34" value="0.498473" />
                                        <Key frame="48" value="0.498473" />
                                        <Key frame="66" value="5.79845" />
                                        <Key frame="79" value="7.73207" />
                                        <Key frame="96" value="0.498473" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="19" value="-32.4344" />
                                        <Key frame="34" value="-47.0245" />
                                        <Key frame="48" value="-17.0534" />
                                        <Key frame="66" value="-45.5303" />
                                        <Key frame="79" value="-44.2119" />
                                        <Key frame="96" value="-47.1124" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="19" value="-88.5046" />
                                        <Key frame="34" value="-78.397" />
                                        <Key frame="48" value="-77.0786" />
                                        <Key frame="66" value="-57.3909" />
                                        <Key frame="79" value="-40.3399" />
                                        <Key frame="96" value="-81.5611" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="34" value="-78" />
                                        <Key frame="66" value="2" />
                                        <Key frame="96" value="0.788621" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="34" value="27.9" />
                                        <Key frame="66" value="14.3" />
                                        <Key frame="96" value="14.4614" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="17" value="87.191" />
                                        <Key frame="32" value="87.6305" />
                                        <Key frame="46" value="85.7847" />
                                        <Key frame="64" value="72.5131" />
                                        <Key frame="77" value="83.0601" />
                                        <Key frame="94" value="79.1928" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="17" value="-0.529755" />
                                        <Key frame="32" value="-0.529755" />
                                        <Key frame="46" value="-0.529755" />
                                        <Key frame="64" value="-0.617646" />
                                        <Key frame="77" value="-0.617646" />
                                        <Key frame="94" value="-0.969213" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="17" value="88.5046" />
                                        <Key frame="32" value="115.839" />
                                        <Key frame="46" value="70.7504" />
                                        <Key frame="64" value="83.1432" />
                                        <Key frame="77" value="99.8426" />
                                        <Key frame="94" value="46.8439" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="17" value="35.5107" />
                                        <Key frame="32" value="28.5672" />
                                        <Key frame="46" value="44.2119" />
                                        <Key frame="64" value="61.4387" />
                                        <Key frame="77" value="50.7159" />
                                        <Key frame="94" value="60.2961" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="32" value="-35" />
                                        <Key frame="64" value="50.6" />
                                        <Key frame="94" value="-0.090296" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="32" value="12.5" />
                                        <Key frame="64" value="33.3" />
                                        <Key frame="94" value="12.2814" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="33" value="-18.9822" />
                                        <Key frame="65" value="-19.949" />
                                        <Key frame="95" value="-19.5096" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="33" value="3.34229" />
                                        <Key frame="65" value="4.74856" />
                                        <Key frame="95" value="5.27591" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="33" value="17.0534" />
                                        <Key frame="65" value="10.4615" />
                                        <Key frame="95" value="15.8229" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="33" value="-5.29104" />
                                        <Key frame="65" value="-5.18802" />
                                        <Key frame="95" value="-5.18802" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="33" value="4.04062" />
                                        <Key frame="65" value="8.08363" />
                                        <Key frame="95" value="3.60116" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="33" value="-2.98591" />
                                        <Key frame="65" value="-4.39218" />
                                        <Key frame="95" value="-4.83164" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="33" value="-7.46839" />
                                        <Key frame="65" value="-2.63435" />
                                        <Key frame="95" value="-5.62267" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="33" value="17.4881" />
                                        <Key frame="65" value="12.3024" />
                                        <Key frame="95" value="18.2791" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="33" value="-5.88634" />
                                        <Key frame="65" value="-5.79845" />
                                        <Key frame="95" value="-5.90622" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="33" value="3.78175" />
                                        <Key frame="65" value="7.03374" />
                                        <Key frame="95" value="2.46337" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="33" value="5.45169" />
                                        <Key frame="65" value="2.28759" />
                                        <Key frame="95" value="4.39699" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="stand_realStory1_11" robot="" id="7" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="338" y="280">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                            <Timeline fps="25" resources_acquisition="0" size="400" enable="1" start_frame="0" end_frame="-1" scale="10">
                                <watches />
                                <BehaviorLayer name="speech" mute="0">
                                    <BehaviorKeyframe name="speech" index="6" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="Enter name here" robot="" id="1" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="localizationbox_plugin" x="110" y="66">
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)
		self.tts = ALProxy("ALTextToSpeech")

	def onInput_onStart(self):
		sEnglish = ""
		sFrench = "Je vérifie alors mon horloge et me rend compte qu'elle était déreglée, \\Pau=200\\ elle était en 2007."
		sSpanish = ""
		sItalian = ""
		sGerman = ""
		sChinese = ""
		sPolish = ""
		sKorean = ""
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(eval("s"+sDefaultLang))]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <english></english>
                                                    <french>Je vérifie alors mon horloge et me rend compte qu&apos;elle était déreglée, \\Pau=200\\ elle était en 2007.</french>
                                                    <spanish></spanish>
                                                    <italian></italian>
                                                    <german></german>
                                                    <chinese></chinese>
                                                    <polish></polish>
                                                    <korean></korean>
                                                    <language>1</language>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Box name="SayTextPrerender_ref" robot="" id="2" tooltip="Receive a string, precompute it, then say it!&#x0A;All steps are outputted to add synchro or interesting behaviors...&#x0A;&#x0A;v1.1" bitmap_expanded="1" plugin="" x="423" y="181">
                                                <bitmap>media/images/box/icons_appu/sayPrecomputed.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# SayTextPrerender - v1.1
import altools

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self);
        self.nStateInit = 0;
        self.nStatePreparing = 1;
        self.nStateSpeaking = 2;
        self.nStateStopped = 3;
        
    def onLoad(self):
        self.nStep = self.nStateInit;
        self.bStopped = False;
    
    def onUnload(self):
        self.onInput_onStop();

    def onInput_onStart(self, p):
        if( self.nStep == self.nStateSpeaking or self.nStep == self.nStatePreparing ):
            self.log( "%s: already speaking, won't say that sentence: '%s'" % ( self.boxName, p ) );
            return;

        self.bStopped = False;
        txt = p;
        self.nStep = self.nStatePreparing;
        self.output_onPreparing();
        if( self.getParameter( "bWithLight" ) ):
            altools.sayAndCacheAndLight( txt, True, self.getParameter( 'bStoreToNonVolatilePath' ), nUseLang = self.getParameter( 'nNumLanguage' ) );
        else:
            altools.sayAndCache( txt, True, self.getParameter( 'bStoreToNonVolatilePath' ), nUseLang = self.getParameter( 'nNumLanguage' ) );
        self.output_onPrepared();            
        if( not self.getParameter( 'bJustPrepare' ) ):
            if( not self.bStopped ):
                self.nStep = self.nStateSpeaking;
                self.output_onStartSpeaking();
                if( self.getParameter( "bWithLight" ) ):
                    altools.sayAndCacheAndLight( txt, nUseLang = self.getParameter( 'nNumLanguage' ) );
                else:
                    altools.sayAndCache( txt, nUseLang = self.getParameter( 'nNumLanguage' ) );
                self.output_onStopSpeaking();            
        else:
            pass
        self.nStep = self.nStateStopped;
    
    def onInput_onStop(self):
        nCpt = 0;
        # adding a timeout
        nMaxCpt = 60;
        self.bStopped = True;
        while( self.nStep == self.nStatePreparing and nCpt <= nMaxCpt ): # can't kill while preparing
            print( "%s.onStop: waiting to stop than the sound is prepared..." % self.boxName );
            time.sleep( 0.5 );
            nCpt += 1;
        if( nCpt > nMaxCpt ):
            altools.playSound( 'warning_speech_error.wav' );
        # on le fait plusieurs fois car des fois on peut se trouver pile entre le set du play et le lancage de la commande
        for i in range( 3 ):
            if( self.nStep == self.nStateSpeaking ):
                altools.mySystemCall( "killall aplay" );     # todo: better killling method!
                time.sleep( 0.2 );]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="output_onPreparing" type="1" type_size="1" nature="2" inner="0" tooltip="Text are being prepared" id="4" />
                                                <Output name="output_onPrepared" type="1" type_size="1" nature="2" inner="0" tooltip="the sound is prepared and ready to be launched" id="5" />
                                                <Output name="output_onStartSpeaking" type="1" type_size="1" nature="2" inner="0" tooltip="Nao begin to speak" id="6" />
                                                <Output name="output_onStopSpeaking" type="1" type_size="1" nature="2" inner="0" tooltip="Nao has stop speaking" id="7" />
                                                <Parameter name="bWithLight" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="use light in eyes to speak" id="8" />
                                                <Parameter name="bJustPrepare" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Don&apos;t say the text now, just generate it." id="9" />
                                                <Parameter name="bStoreToNonVolatilePath" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="copy the generated file to a non volatile path." id="10" />
                                                <Parameter name="nNumLanguage" inherits_from_parent="0" content_type="1" value="-1" default_value="-1" min="-1" max="30" tooltip="To speak with a different speak language, specify it there (default -1: current one)" id="11" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <BehaviorLayer name="fx" mute="0">
                                    <BehaviorKeyframe name="blink" index="3" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="blink2" index="100" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList>
                                    <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="26" value="-6.77007" />
                                        <Key frame="41" value="-6.59428" />
                                        <Key frame="57" value="-6.94585" />
                                        <Key frame="71" value="-7.03374" />
                                        <Key frame="86" value="-6.85796" />
                                        <Key frame="106" value="-13.7135" />
                                        <Key frame="123" value="-10.11" />
                                        <Key frame="137" value="-22.3269" />
                                        <Key frame="153" value="5.97423" />
                                        <Key frame="171" value="-4.74856" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="26" value="-14.5045" />
                                        <Key frame="41" value="2.01911" />
                                        <Key frame="57" value="-14.0651" />
                                        <Key frame="71" value="-13.9772" />
                                        <Key frame="86" value="5.35899" />
                                        <Key frame="106" value="13.5329" />
                                        <Key frame="123" value="-13.4498" />
                                        <Key frame="137" value="-5.18802" />
                                        <Key frame="153" value="-10.6373" />
                                        <Key frame="171" value="-14.5045" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="24" value="64.1586" />
                                        <Key frame="39" value="69.6957" />
                                        <Key frame="55" value="66.4437" />
                                        <Key frame="69" value="96.7664" />
                                        <Key frame="84" value="101.073" />
                                        <Key frame="104" value="96.5906" />
                                        <Key frame="121" value="94.657" />
                                        <Key frame="135" value="90.7019" />
                                        <Key frame="151" value="84.8131" />
                                        <Key frame="169" value="89.9987" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="24" value="7.81996" />
                                        <Key frame="39" value="7.81996" />
                                        <Key frame="55" value="5.62267" />
                                        <Key frame="69" value="3.24959" />
                                        <Key frame="84" value="3.51326" />
                                        <Key frame="104" value="7.73207" />
                                        <Key frame="121" value="7.3805" />
                                        <Key frame="135" value="5.2711" />
                                        <Key frame="151" value="1.57965" />
                                        <Key frame="169" value="3.60116" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="24" value="-48.4307" />
                                        <Key frame="39" value="-47.376" />
                                        <Key frame="55" value="-71.2826" />
                                        <Key frame="69" value="-119.271" />
                                        <Key frame="84" value="-92.9919" />
                                        <Key frame="104" value="-76.644" />
                                        <Key frame="121" value="-91.7614" />
                                        <Key frame="135" value="-83.4117" />
                                        <Key frame="151" value="-58.0988" />
                                        <Key frame="169" value="-97.8259" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="24" value="-88.2409" />
                                        <Key frame="39" value="-87.6256" />
                                        <Key frame="55" value="-78.1333" />
                                        <Key frame="69" value="-68.2016" />
                                        <Key frame="84" value="-45.2618" />
                                        <Key frame="104" value="-42.6251" />
                                        <Key frame="121" value="-34.0996" />
                                        <Key frame="135" value="-33.0449" />
                                        <Key frame="151" value="-51.4143" />
                                        <Key frame="169" value="-34.2754" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="39" value="-39" />
                                        <Key frame="69" value="-23" />
                                        <Key frame="104" value="-11" />
                                        <Key frame="135" value="-10.7252" />
                                        <Key frame="169" value="-35" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="39" value="43.3" />
                                        <Key frame="69" value="30.4" />
                                        <Key frame="104" value="12.5" />
                                        <Key frame="135" value="12.1414" />
                                        <Key frame="169" value="26.5" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="22" value="74.4467" />
                                        <Key frame="37" value="80.687" />
                                        <Key frame="53" value="37.9716" />
                                        <Key frame="67" value="48.0792" />
                                        <Key frame="82" value="62.845" />
                                        <Key frame="102" value="65.6575" />
                                        <Key frame="119" value="75.9409" />
                                        <Key frame="133" value="78.7534" />
                                        <Key frame="149" value="73.0404" />
                                        <Key frame="167" value="91.8493" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="22" value="-1.84813" />
                                        <Key frame="37" value="-1.23289" />
                                        <Key frame="53" value="-0.881321" />
                                        <Key frame="67" value="-0.79343" />
                                        <Key frame="82" value="-0.79343" />
                                        <Key frame="102" value="-0.705538" />
                                        <Key frame="119" value="-0.498473" />
                                        <Key frame="133" value="-0.881321" />
                                        <Key frame="149" value="-0.498473" />
                                        <Key frame="167" value="-0.617646" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="22" value="54.3147" />
                                        <Key frame="37" value="59.5003" />
                                        <Key frame="53" value="81.1217" />
                                        <Key frame="67" value="101.337" />
                                        <Key frame="82" value="33.6601" />
                                        <Key frame="102" value="37.791" />
                                        <Key frame="119" value="78.1333" />
                                        <Key frame="133" value="53.5237" />
                                        <Key frame="149" value="73.0356" />
                                        <Key frame="167" value="98.7" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="22" value="88.9488" />
                                        <Key frame="37" value="88.5094" />
                                        <Key frame="53" value="88.4215" />
                                        <Key frame="67" value="48.0792" />
                                        <Key frame="82" value="73.9193" />
                                        <Key frame="102" value="83.8511" />
                                        <Key frame="119" value="51.507" />
                                        <Key frame="133" value="59.4172" />
                                        <Key frame="149" value="76.9077" />
                                        <Key frame="167" value="56.8684" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="37" value="38" />
                                        <Key frame="67" value="66" />
                                        <Key frame="102" value="67" />
                                        <Key frame="133" value="67.1469" />
                                        <Key frame="167" value="43.1" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="37" value="39" />
                                        <Key frame="67" value="42.3" />
                                        <Key frame="102" value="11.8" />
                                        <Key frame="119" value="35.8" />
                                        <Key frame="133" value="34.3813" />
                                        <Key frame="167" value="24.7" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="38" value="-19.8611" />
                                        <Key frame="68" value="-23.4647" />
                                        <Key frame="103" value="-26.8046" />
                                        <Key frame="134" value="-27.5956" />
                                        <Key frame="168" value="-26.8046" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="38" value="8.5279" />
                                        <Key frame="68" value="14.944" />
                                        <Key frame="103" value="8.87947" />
                                        <Key frame="134" value="17.6686" />
                                        <Key frame="168" value="9.49471" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="38" value="25.3152" />
                                        <Key frame="68" value="17.6686" />
                                        <Key frame="103" value="12.5709" />
                                        <Key frame="134" value="13.0983" />
                                        <Key frame="168" value="22.5027" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="38" value="-5.29104" />
                                        <Key frame="68" value="-5.18802" />
                                        <Key frame="103" value="-5.29104" />
                                        <Key frame="134" value="-5.29104" />
                                        <Key frame="168" value="-5.29104" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="38" value="2.107" />
                                        <Key frame="68" value="7.99574" />
                                        <Key frame="103" value="12.5661" />
                                        <Key frame="134" value="10.0173" />
                                        <Key frame="168" value="3.95272" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="38" value="-5.62267" />
                                        <Key frame="68" value="-10.3688" />
                                        <Key frame="103" value="-5.53477" />
                                        <Key frame="134" value="-12.7419" />
                                        <Key frame="168" value="-6.15002" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="38" value="-6.58948" />
                                        <Key frame="68" value="3.34229" />
                                        <Key frame="103" value="1.40867" />
                                        <Key frame="134" value="8.26423" />
                                        <Key frame="168" value="-4.04062" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="38" value="27.8242" />
                                        <Key frame="68" value="23.992" />
                                        <Key frame="103" value="16.9607" />
                                        <Key frame="134" value="23.7284" />
                                        <Key frame="168" value="27.7714" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="38" value="-5.79845" />
                                        <Key frame="68" value="-5.90622" />
                                        <Key frame="103" value="-5.88634" />
                                        <Key frame="134" value="-5.90622" />
                                        <Key frame="168" value="-5.90622" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="38" value="-0.261271" />
                                        <Key frame="68" value="3.2544" />
                                        <Key frame="103" value="8.44001" />
                                        <Key frame="134" value="1.93602" />
                                        <Key frame="168" value="-0.0854875" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="38" value="3.34229" />
                                        <Key frame="68" value="-3.95272" />
                                        <Key frame="103" value="-2.19489" />
                                        <Key frame="134" value="-7.11683" />
                                        <Key frame="168" value="1.145" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="stand_realStory1_7" robot="" id="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="339" y="157">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                            <Timeline fps="25" resources_acquisition="0" size="400" enable="1" start_frame="0" end_frame="-1" scale="10">
                                <watches />
                                <BehaviorLayer name="speech" mute="0">
                                    <BehaviorKeyframe name="speech" index="11" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="Enter name here" robot="" id="1" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="localizationbox_plugin" x="110" y="66">
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)
		self.tts = ALProxy("ALTextToSpeech")

	def onInput_onStart(self):
		sEnglish = ""
		sFrench = "Ceux-ci, voyant que ma reco vocale ne marchait pas, se mettent à tripoter mes capteurs tactiles avec leurs mains toute sales."
		sSpanish = ""
		sItalian = ""
		sGerman = ""
		sChinese = ""
		sPolish = ""
		sKorean = ""
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(eval("s"+sDefaultLang))]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <english></english>
                                                    <french>Ceux-ci, voyant que ma reco vocale ne marchait pas, se mettent à tripoter mes capteurs tactiles avec leurs mains toute sales.</french>
                                                    <spanish></spanish>
                                                    <italian></italian>
                                                    <german></german>
                                                    <chinese></chinese>
                                                    <polish></polish>
                                                    <korean></korean>
                                                    <language>1</language>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Box name="SayTextPrerender_ref" robot="" id="2" tooltip="Receive a string, precompute it, then say it!&#x0A;All steps are outputted to add synchro or interesting behaviors...&#x0A;&#x0A;v1.1" bitmap_expanded="1" plugin="" x="442" y="166">
                                                <bitmap>media/images/box/icons_appu/sayPrecomputed.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# SayTextPrerender - v1.1
import altools

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self);
        self.nStateInit = 0;
        self.nStatePreparing = 1;
        self.nStateSpeaking = 2;
        self.nStateStopped = 3;
        
    def onLoad(self):
        self.nStep = self.nStateInit;
        self.bStopped = False;
    
    def onUnload(self):
        self.onInput_onStop();

    def onInput_onStart(self, p):
        if( self.nStep == self.nStateSpeaking or self.nStep == self.nStatePreparing ):
            self.log( "%s: already speaking, won't say that sentence: '%s'" % ( self.boxName, p ) );
            return;

        self.bStopped = False;
        txt = p;
        self.nStep = self.nStatePreparing;
        self.output_onPreparing();
        if( self.getParameter( "bWithLight" ) ):
            altools.sayAndCacheAndLight( txt, True, self.getParameter( 'bStoreToNonVolatilePath' ), nUseLang = self.getParameter( 'nNumLanguage' ) );
        else:
            altools.sayAndCache( txt, True, self.getParameter( 'bStoreToNonVolatilePath' ), nUseLang = self.getParameter( 'nNumLanguage' ) );
        self.output_onPrepared();            
        if( not self.getParameter( 'bJustPrepare' ) ):
            if( not self.bStopped ):
                self.nStep = self.nStateSpeaking;
                self.output_onStartSpeaking();
                if( self.getParameter( "bWithLight" ) ):
                    altools.sayAndCacheAndLight( txt, nUseLang = self.getParameter( 'nNumLanguage' ) );
                else:
                    altools.sayAndCache( txt, nUseLang = self.getParameter( 'nNumLanguage' ) );
                self.output_onStopSpeaking();            
        else:
            pass
        self.nStep = self.nStateStopped;
    
    def onInput_onStop(self):
        nCpt = 0;
        # adding a timeout
        nMaxCpt = 60;
        self.bStopped = True;
        while( self.nStep == self.nStatePreparing and nCpt <= nMaxCpt ): # can't kill while preparing
            print( "%s.onStop: waiting to stop than the sound is prepared..." % self.boxName );
            time.sleep( 0.5 );
            nCpt += 1;
        if( nCpt > nMaxCpt ):
            altools.playSound( 'warning_speech_error.wav' );
        # on le fait plusieurs fois car des fois on peut se trouver pile entre le set du play et le lancage de la commande
        for i in range( 3 ):
            if( self.nStep == self.nStateSpeaking ):
                altools.mySystemCall( "killall aplay" );     # todo: better killling method!
                time.sleep( 0.2 );]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="output_onPreparing" type="1" type_size="1" nature="2" inner="0" tooltip="Text are being prepared" id="4" />
                                                <Output name="output_onPrepared" type="1" type_size="1" nature="2" inner="0" tooltip="the sound is prepared and ready to be launched" id="5" />
                                                <Output name="output_onStartSpeaking" type="1" type_size="1" nature="2" inner="0" tooltip="Nao begin to speak" id="6" />
                                                <Output name="output_onStopSpeaking" type="1" type_size="1" nature="2" inner="0" tooltip="Nao has stop speaking" id="7" />
                                                <Parameter name="bWithLight" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="use light in eyes to speak" id="8" />
                                                <Parameter name="bJustPrepare" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Don&apos;t say the text now, just generate it." id="9" />
                                                <Parameter name="bStoreToNonVolatilePath" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="copy the generated file to a non volatile path." id="10" />
                                                <Parameter name="nNumLanguage" inherits_from_parent="0" content_type="1" value="-1" default_value="-1" min="-1" max="30" tooltip="To speak with a different speak language, specify it there (default -1: current one)" id="11" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <BehaviorLayer name="LED" mute="0">
                                    <BehaviorKeyframe name="blink" index="9" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="blink2" index="86" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="blink3" index="133" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList>
                                    <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="21" value="-6.77007" />
                                        <Key frame="34" value="-7.38531" />
                                        <Key frame="50" value="-6.94585" />
                                        <Key frame="64" value="7.29261" />
                                        <Key frame="77" value="-12.483" />
                                        <Key frame="93" value="-6.94585" />
                                        <Key frame="101" value="-5.97904" />
                                        <Key frame="118" value="-0.705538" />
                                        <Key frame="134" value="-6.24272" />
                                        <Key frame="163" value="-10.0221" />
                                        <Key frame="179" value="-7.38531" />
                                        <Key frame="191" value="-7.91266" />
                                        <Key frame="200" value="-8.35212" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="21" value="-15.2956" />
                                        <Key frame="34" value="-9.5826" />
                                        <Key frame="50" value="-10.7252" />
                                        <Key frame="64" value="3.42537" />
                                        <Key frame="77" value="-5.01223" />
                                        <Key frame="93" value="-17.7565" />
                                        <Key frame="101" value="-18.7233" />
                                        <Key frame="118" value="11.7751" />
                                        <Key frame="134" value="29.1776" />
                                        <Key frame="163" value="29.5016" />
                                        <Key frame="179" value="-13.5377" />
                                        <Key frame="191" value="-17.4929" />
                                        <Key frame="200" value="-10.9889" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="19" value="84.901" />
                                        <Key frame="32" value="87.4499" />
                                        <Key frame="48" value="87.8014" />
                                        <Key frame="62" value="82.0006" />
                                        <Key frame="75" value="74.9692" />
                                        <Key frame="91" value="87.8014" />
                                        <Key frame="99" value="90.0866" />
                                        <Key frame="116" value="86.3073" />
                                        <Key frame="132" value="87.5378" />
                                        <Key frame="161" value="85.692" />
                                        <Key frame="177" value="60.9945" />
                                        <Key frame="189" value="45.2618" />
                                        <Key frame="198" value="54.4905" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="19" value="0.498473" />
                                        <Key frame="32" value="0.498473" />
                                        <Key frame="48" value="1.14019" />
                                        <Key frame="62" value="0.70073" />
                                        <Key frame="75" value="0.498473" />
                                        <Key frame="91" value="1.84332" />
                                        <Key frame="99" value="2.98591" />
                                        <Key frame="116" value="0.612838" />
                                        <Key frame="132" value="6.85315" />
                                        <Key frame="161" value="3.24959" />
                                        <Key frame="177" value="0.498473" />
                                        <Key frame="189" value="3.95272" />
                                        <Key frame="198" value="9.4899" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="19" value="-73.6557" />
                                        <Key frame="32" value="-65.2181" />
                                        <Key frame="48" value="-66.9759" />
                                        <Key frame="62" value="-47.9913" />
                                        <Key frame="75" value="-50.8917" />
                                        <Key frame="91" value="-82.7964" />
                                        <Key frame="99" value="-85.6968" />
                                        <Key frame="116" value="-53.1769" />
                                        <Key frame="132" value="-65.8333" />
                                        <Key frame="161" value="-61.3508" />
                                        <Key frame="177" value="-69.5248" />
                                        <Key frame="189" value="-90.5309" />
                                        <Key frame="198" value="-92.6403" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="19" value="-38.67" />
                                        <Key frame="32" value="-37.6153" />
                                        <Key frame="48" value="-33.3086" />
                                        <Key frame="62" value="-46.1408" />
                                        <Key frame="75" value="-57.3909" />
                                        <Key frame="91" value="-41.1309" />
                                        <Key frame="99" value="-39.5489" />
                                        <Key frame="116" value="-43.2403" />
                                        <Key frame="132" value="-33.3965" />
                                        <Key frame="161" value="-39.3731" />
                                        <Key frame="177" value="-68.641" />
                                        <Key frame="189" value="-46.756" />
                                        <Key frame="198" value="-39.9004" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="32" value="0.349163" />
                                        <Key frame="62" value="-33" />
                                        <Key frame="91" value="-53" />
                                        <Key frame="99" value="-53.7921" />
                                        <Key frame="132" value="-2.2" />
                                        <Key frame="177" value="-80" />
                                        <Key frame="198" value="-74.3" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="32" value="19.2414" />
                                        <Key frame="62" value="13" />
                                        <Key frame="91" value="36.9" />
                                        <Key frame="99" value="35.4813" />
                                        <Key frame="132" value="22" />
                                        <Key frame="177" value="39" />
                                        <Key frame="198" value="36" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="17" value="34.7196" />
                                        <Key frame="30" value="47.7276" />
                                        <Key frame="46" value="54.4953" />
                                        <Key frame="60" value="64.2513" />
                                        <Key frame="73" value="60.7356" />
                                        <Key frame="89" value="85.9605" />
                                        <Key frame="97" value="89.2125" />
                                        <Key frame="114" value="20.9206" />
                                        <Key frame="130" value="-13.1814" />
                                        <Key frame="159" value="-5.00742" />
                                        <Key frame="175" value="26.282" />
                                        <Key frame="187" value="37.2685" />
                                        <Key frame="196" value="50.8917" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="17" value="-0.705538" />
                                        <Key frame="30" value="-0.617646" />
                                        <Key frame="46" value="-0.617646" />
                                        <Key frame="60" value="-0.881321" />
                                        <Key frame="73" value="-0.881321" />
                                        <Key frame="89" value="-4.22121" />
                                        <Key frame="97" value="-3.51807" />
                                        <Key frame="114" value="-10.1978" />
                                        <Key frame="130" value="-23.8211" />
                                        <Key frame="159" value="-16.9655" />
                                        <Key frame="175" value="-9.49471" />
                                        <Key frame="187" value="-9.31893" />
                                        <Key frame="196" value="-14.8561" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="17" value="64.6859" />
                                        <Key frame="30" value="65.1254" />
                                        <Key frame="46" value="69.1684" />
                                        <Key frame="60" value="28.6503" />
                                        <Key frame="73" value="47.6349" />
                                        <Key frame="89" value="92.6355" />
                                        <Key frame="97" value="95.6238" />
                                        <Key frame="114" value="-4.22121" />
                                        <Key frame="130" value="38.4942" />
                                        <Key frame="159" value="49.5685" />
                                        <Key frame="175" value="83.2311" />
                                        <Key frame="187" value="104.765" />
                                        <Key frame="196" value="112.06" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="17" value="88.0699" />
                                        <Key frame="30" value="70.4037" />
                                        <Key frame="46" value="64.9544" />
                                        <Key frame="60" value="67.1517" />
                                        <Key frame="73" value="87.3668" />
                                        <Key frame="89" value="45.3545" />
                                        <Key frame="97" value="41.2236" />
                                        <Key frame="114" value="60.5598" />
                                        <Key frame="130" value="89.3883" />
                                        <Key frame="159" value="89.2125" />
                                        <Key frame="175" value="73.9193" />
                                        <Key frame="187" value="49.837" />
                                        <Key frame="196" value="41.3115" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="30" value="46" />
                                        <Key frame="60" value="64" />
                                        <Key frame="89" value="61" />
                                        <Key frame="97" value="61.8734" />
                                        <Key frame="130" value="57" />
                                        <Key frame="145" value="40" />
                                        <Key frame="159" value="64" />
                                        <Key frame="175" value="46" />
                                        <Key frame="196" value="63" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="30" value="33.7" />
                                        <Key frame="60" value="14" />
                                        <Key frame="89" value="38.3" />
                                        <Key frame="97" value="36.8613" />
                                        <Key frame="130" value="33" />
                                        <Key frame="145" value="41" />
                                        <Key frame="159" value="28" />
                                        <Key frame="175" value="34" />
                                        <Key frame="196" value="39" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="31" value="-20.2127" />
                                        <Key frame="61" value="-23.0252" />
                                        <Key frame="90" value="-21.7069" />
                                        <Key frame="98" value="-21.7069" />
                                        <Key frame="131" value="-23.8163" />
                                        <Key frame="176" value="-20.74" />
                                        <Key frame="197" value="-21.5311" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="31" value="0.090296" />
                                        <Key frame="61" value="3.07861" />
                                        <Key frame="90" value="9.31893" />
                                        <Key frame="98" value="9.23104" />
                                        <Key frame="131" value="3.34229" />
                                        <Key frame="176" value="4.74856" />
                                        <Key frame="197" value="8.35212" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="31" value="22.8543" />
                                        <Key frame="61" value="13.3619" />
                                        <Key frame="90" value="17.0534" />
                                        <Key frame="98" value="17.0534" />
                                        <Key frame="131" value="6.4185" />
                                        <Key frame="176" value="16.0866" />
                                        <Key frame="197" value="13.1862" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="31" value="-5.18802" />
                                        <Key frame="61" value="-5.27591" />
                                        <Key frame="90" value="-5.29104" />
                                        <Key frame="98" value="-5.29104" />
                                        <Key frame="131" value="-5.29104" />
                                        <Key frame="176" value="-4.39699" />
                                        <Key frame="197" value="-4.39699" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="31" value="2.72224" />
                                        <Key frame="61" value="7.64418" />
                                        <Key frame="90" value="4.48007" />
                                        <Key frame="98" value="4.56797" />
                                        <Key frame="131" value="10.8083" />
                                        <Key frame="176" value="6.15002" />
                                        <Key frame="197" value="7.55628" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="31" value="0.266079" />
                                        <Key frame="61" value="-2.54646" />
                                        <Key frame="90" value="-7.64418" />
                                        <Key frame="98" value="-7.64418" />
                                        <Key frame="131" value="-3.77694" />
                                        <Key frame="176" value="-3.24959" />
                                        <Key frame="197" value="-6.50158" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="31" value="-10.8083" />
                                        <Key frame="61" value="-2.72224" />
                                        <Key frame="90" value="0.705538" />
                                        <Key frame="98" value="0.705538" />
                                        <Key frame="131" value="2.02391" />
                                        <Key frame="176" value="-3.42537" />
                                        <Key frame="197" value="1.76024" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="31" value="20.0369" />
                                        <Key frame="61" value="13.7087" />
                                        <Key frame="90" value="19.7732" />
                                        <Key frame="98" value="19.7732" />
                                        <Key frame="131" value="7.90785" />
                                        <Key frame="176" value="18.0154" />
                                        <Key frame="197" value="16.9607" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="31" value="-5.71056" />
                                        <Key frame="61" value="-5.90622" />
                                        <Key frame="90" value="-5.90622" />
                                        <Key frame="98" value="-5.88634" />
                                        <Key frame="131" value="-5.88634" />
                                        <Key frame="176" value="-5.62267" />
                                        <Key frame="197" value="-5.88634" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="31" value="4.48488" />
                                        <Key frame="61" value="7.4732" />
                                        <Key frame="90" value="2.99072" />
                                        <Key frame="98" value="2.99072" />
                                        <Key frame="131" value="9.40682" />
                                        <Key frame="176" value="5.01223" />
                                        <Key frame="197" value="5.10012" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="31" value="7.38531" />
                                        <Key frame="61" value="1.76024" />
                                        <Key frame="90" value="-1.0523" />
                                        <Key frame="98" value="-1.0523" />
                                        <Key frame="131" value="-1.0523" />
                                        <Key frame="176" value="1.76024" />
                                        <Key frame="197" value="-2.01911" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="stand_realStory1_3" robot="" id="9" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="340" y="35">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                            <Timeline fps="25" resources_acquisition="0" size="400" enable="1" start_frame="0" end_frame="-1" scale="10">
                                <watches />
                                <BehaviorLayer name="speech" mute="0">
                                    <BehaviorKeyframe name="speech" index="7" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="Enter name here" robot="" id="1" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="localizationbox_plugin" x="111" y="66">
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)
		self.tts = ALProxy("ALTextToSpeech")

	def onInput_onStart(self):
		sEnglish = ""
		sFrench = "Alors je mlève, \\Pau=500\\ je prend ma douche tranquile, \\Pau=3000\\ et comme il pleut, je décide de prendre le métro."
		sSpanish = ""
		sItalian = ""
		sGerman = ""
		sChinese = ""
		sPolish = ""
		sKorean = ""
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(eval("s"+sDefaultLang))]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <english></english>
                                                    <french>Alors je mlève, \\Pau=500\\ je prend ma douche tranquile, \\Pau=3000\\ et comme il pleut, je décide de prendre le métro.</french>
                                                    <spanish></spanish>
                                                    <italian></italian>
                                                    <german></german>
                                                    <chinese></chinese>
                                                    <polish></polish>
                                                    <korean></korean>
                                                    <language>1</language>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Box name="SayTextPrerender_ref" robot="" id="2" tooltip="Receive a string, precompute it, then say it!&#x0A;All steps are outputted to add synchro or interesting behaviors...&#x0A;&#x0A;v1.1" bitmap_expanded="1" plugin="" x="426" y="194">
                                                <bitmap>media/images/box/icons_appu/sayPrecomputed.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# SayTextPrerender - v1.1
import altools

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self);
        self.nStateInit = 0;
        self.nStatePreparing = 1;
        self.nStateSpeaking = 2;
        self.nStateStopped = 3;
        
    def onLoad(self):
        self.nStep = self.nStateInit;
        self.bStopped = False;
    
    def onUnload(self):
        self.onInput_onStop();

    def onInput_onStart(self, p):
        if( self.nStep == self.nStateSpeaking or self.nStep == self.nStatePreparing ):
            self.log( "%s: already speaking, won't say that sentence: '%s'" % ( self.boxName, p ) );
            return;

        self.bStopped = False;
        txt = p;
        self.nStep = self.nStatePreparing;
        self.output_onPreparing();
        if( self.getParameter( "bWithLight" ) ):
            altools.sayAndCacheAndLight( txt, True, self.getParameter( 'bStoreToNonVolatilePath' ), nUseLang = self.getParameter( 'nNumLanguage' ) );
        else:
            altools.sayAndCache( txt, True, self.getParameter( 'bStoreToNonVolatilePath' ), nUseLang = self.getParameter( 'nNumLanguage' ) );
        self.output_onPrepared();            
        if( not self.getParameter( 'bJustPrepare' ) ):
            if( not self.bStopped ):
                self.nStep = self.nStateSpeaking;
                self.output_onStartSpeaking();
                if( self.getParameter( "bWithLight" ) ):
                    altools.sayAndCacheAndLight( txt, nUseLang = self.getParameter( 'nNumLanguage' ) );
                else:
                    altools.sayAndCache( txt, nUseLang = self.getParameter( 'nNumLanguage' ) );
                self.output_onStopSpeaking();            
        else:
            pass
        self.nStep = self.nStateStopped;
    
    def onInput_onStop(self):
        nCpt = 0;
        # adding a timeout
        nMaxCpt = 60;
        self.bStopped = True;
        while( self.nStep == self.nStatePreparing and nCpt <= nMaxCpt ): # can't kill while preparing
            print( "%s.onStop: waiting to stop than the sound is prepared..." % self.boxName );
            time.sleep( 0.5 );
            nCpt += 1;
        if( nCpt > nMaxCpt ):
            altools.playSound( 'warning_speech_error.wav' );
        # on le fait plusieurs fois car des fois on peut se trouver pile entre le set du play et le lancage de la commande
        for i in range( 3 ):
            if( self.nStep == self.nStateSpeaking ):
                altools.mySystemCall( "killall aplay" );     # todo: better killling method!
                time.sleep( 0.2 );]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="output_onPreparing" type="1" type_size="1" nature="2" inner="0" tooltip="Text are being prepared" id="4" />
                                                <Output name="output_onPrepared" type="1" type_size="1" nature="2" inner="0" tooltip="the sound is prepared and ready to be launched" id="5" />
                                                <Output name="output_onStartSpeaking" type="1" type_size="1" nature="2" inner="0" tooltip="Nao begin to speak" id="6" />
                                                <Output name="output_onStopSpeaking" type="1" type_size="1" nature="2" inner="0" tooltip="Nao has stop speaking" id="7" />
                                                <Parameter name="bWithLight" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="use light in eyes to speak" id="8" />
                                                <Parameter name="bJustPrepare" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Don&apos;t say the text now, just generate it." id="9" />
                                                <Parameter name="bStoreToNonVolatilePath" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="copy the generated file to a non volatile path." id="10" />
                                                <Parameter name="nNumLanguage" inherits_from_parent="0" content_type="1" value="-1" default_value="-1" min="-1" max="30" tooltip="To speak with a different speak language, specify it there (default -1: current one)" id="11" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <BehaviorLayer name="fx" mute="0">
                                    <BehaviorKeyframe name="shower" index="74" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="PlaySoundMixLight_p" robot="" id="1" tooltip="Play a sound even if there&apos;s current one playing.&#x0A;&#x0A;v1.00&#x0A;&#x0A;- just play a sound with a specific sound volume (work only for .wav)" bitmap_expanded="1" plugin="" x="278" y="115">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# PlaySoundMix Light v1.0
import altools
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        altools.playSound( self.getParameter( 'strSoundName' ), bDirectPlay = self.getParameter( 'bDirectPlay' ), nSoundVolume = self.getParameter( 'nVolume' ) );
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Parameter name="strSoundName" inherits_from_parent="0" content_type="3" value="shower1.wav" default_value="youhou1.wav" custom_choice="0" tooltip="name of the sound to play (absolute or just the name if it&apos;s in the standard path)" id="5" />
                                                <Parameter name="bDirectPlay" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="launch the sound directly (don&apos;t use gstreamer)" id="6" />
                                                <Parameter name="nVolume" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="volume between 0 and 100% - DON&apos;T WORK IN THOSE VERSION(S)" id="7" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <BehaviorLayer name="LED" mute="0">
                                    <BehaviorKeyframe name="blink" index="44" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="blink2" index="149" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="blink3" index="173" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="blink4" index="248" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList>
                                    <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="17" value="-6.94585" />
                                        <Key frame="31" value="-7.91266" />
                                        <Key frame="52" value="-9.40682" />
                                        <Key frame="75" value="-12.3951" />
                                        <Key frame="105" value="-15.1198" />
                                        <Key frame="166" value="2.107" />
                                        <Key frame="190" value="2.63435" />
                                        <Key frame="211" value="-6.50639" />
                                        <Key frame="233" value="-3.2544" />
                                        <Key frame="249" value="-7.20953" />
                                        <Key frame="266" value="-7.64898" />
                                        <Key frame="279" value="-4.04542" />
                                        <Key frame="292" value="-7.38531" />
                                        <Key frame="304" value="-7.4732" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="17" value="-5.10012" />
                                        <Key frame="31" value="-10.901" />
                                        <Key frame="52" value="-18.8991" />
                                        <Key frame="75" value="10.5446" />
                                        <Key frame="105" value="16.3455" />
                                        <Key frame="166" value="21.3553" />
                                        <Key frame="190" value="-1.0571" />
                                        <Key frame="211" value="-14.3288" />
                                        <Key frame="233" value="1.57965" />
                                        <Key frame="249" value="-17.3171" />
                                        <Key frame="266" value="-8.96736" />
                                        <Key frame="279" value="-12.8346" />
                                        <Key frame="292" value="-8.79158" />
                                        <Key frame="304" value="-9.67049" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="15" value="76.3755" />
                                        <Key frame="29" value="61.6976" />
                                        <Key frame="50" value="64.2464" />
                                        <Key frame="73" value="80.4185" />
                                        <Key frame="103" value="101.337" />
                                        <Key frame="164" value="94.5691" />
                                        <Key frame="188" value="106.962" />
                                        <Key frame="209" value="101.513" />
                                        <Key frame="231" value="62.6644" />
                                        <Key frame="247" value="61.2581" />
                                        <Key frame="264" value="94.1296" />
                                        <Key frame="277" value="71.0141" />
                                        <Key frame="290" value="71.0141" />
                                        <Key frame="302" value="84.5494" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="15" value="4.91953" />
                                        <Key frame="29" value="2.28278" />
                                        <Key frame="50" value="3.60116" />
                                        <Key frame="73" value="7.90785" />
                                        <Key frame="103" value="11.6872" />
                                        <Key frame="164" value="17.4002" />
                                        <Key frame="188" value="14.5876" />
                                        <Key frame="209" value="11.6872" />
                                        <Key frame="231" value="0.498473" />
                                        <Key frame="247" value="0.498473" />
                                        <Key frame="264" value="10.6325" />
                                        <Key frame="277" value="0.612838" />
                                        <Key frame="290" value="0.612838" />
                                        <Key frame="302" value="3.60116" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="15" value="-47.2882" />
                                        <Key frame="29" value="-46.4971" />
                                        <Key frame="50" value="-55.55" />
                                        <Key frame="73" value="-65.2181" />
                                        <Key frame="103" value="-84.5542" />
                                        <Key frame="164" value="-89.5641" />
                                        <Key frame="188" value="-94.3981" />
                                        <Key frame="209" value="-72.601" />
                                        <Key frame="231" value="-29.8856" />
                                        <Key frame="247" value="-85.5211" />
                                        <Key frame="264" value="-103.803" />
                                        <Key frame="277" value="-42.0147" />
                                        <Key frame="290" value="-29.3582" />
                                        <Key frame="302" value="-57.2199" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="15" value="-53.7873" />
                                        <Key frame="29" value="-52.6447" />
                                        <Key frame="50" value="-50.9748" />
                                        <Key frame="73" value="-34.2754" />
                                        <Key frame="103" value="-24.6952" />
                                        <Key frame="164" value="-28.2108" />
                                        <Key frame="188" value="-64.0707" />
                                        <Key frame="209" value="-54.7541" />
                                        <Key frame="231" value="-75.2329" />
                                        <Key frame="247" value="-58.9729" />
                                        <Key frame="264" value="-41.7462" />
                                        <Key frame="277" value="-45.3497" />
                                        <Key frame="290" value="-51.0627" />
                                        <Key frame="302" value="-29.0019" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="29" value="-47" />
                                        <Key frame="50" value="-48.3429" />
                                        <Key frame="73" value="-51.4191" />
                                        <Key frame="103" value="-57" />
                                        <Key frame="164" value="-30" />
                                        <Key frame="188" value="-29.4461" />
                                        <Key frame="209" value="-47" />
                                        <Key frame="247" value="-60" />
                                        <Key frame="277" value="-51" />
                                        <Key frame="302" value="-30" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="29" value="20.4" />
                                        <Key frame="50" value="20.5214" />
                                        <Key frame="73" value="19.7814" />
                                        <Key frame="103" value="19.8214" />
                                        <Key frame="164" value="19.9614" />
                                        <Key frame="188" value="20.0614" />
                                        <Key frame="209" value="11.1" />
                                        <Key frame="247" value="23" />
                                        <Key frame="277" value="31" />
                                        <Key frame="302" value="16.8" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="13" value="84.5542" />
                                        <Key frame="27" value="84.9937" />
                                        <Key frame="48" value="90.6188" />
                                        <Key frame="71" value="-8.78677" />
                                        <Key frame="101" value="-69.8715" />
                                        <Key frame="133" value="-59.6761" />
                                        <Key frame="162" value="-60.6429" />
                                        <Key frame="186" value="-51.1506" />
                                        <Key frame="207" value="54.7589" />
                                        <Key frame="229" value="65.306" />
                                        <Key frame="245" value="87.4547" />
                                        <Key frame="262" value="83.148" />
                                        <Key frame="275" value="89.4762" />
                                        <Key frame="288" value="98.6169" />
                                        <Key frame="300" value="91.3219" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="13" value="-3.69386" />
                                        <Key frame="27" value="-0.529755" />
                                        <Key frame="48" value="-1.0571" />
                                        <Key frame="71" value="-5.53958" />
                                        <Key frame="101" value="-22.5906" />
                                        <Key frame="133" value="-43.7725" />
                                        <Key frame="162" value="-34.6317" />
                                        <Key frame="186" value="-41.6631" />
                                        <Key frame="207" value="-9.93417" />
                                        <Key frame="229" value="-9.05525" />
                                        <Key frame="245" value="-9.23104" />
                                        <Key frame="262" value="-2.37548" />
                                        <Key frame="275" value="-5.3638" />
                                        <Key frame="288" value="-8.79158" />
                                        <Key frame="300" value="-6.33061" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="13" value="71.4536" />
                                        <Key frame="27" value="86.7467" />
                                        <Key frame="48" value="93.6023" />
                                        <Key frame="71" value="-14.944" />
                                        <Key frame="101" value="34.0996" />
                                        <Key frame="133" value="20.74" />
                                        <Key frame="162" value="27.6835" />
                                        <Key frame="186" value="17.9275" />
                                        <Key frame="207" value="67.5863" />
                                        <Key frame="229" value="93.6902" />
                                        <Key frame="245" value="108.456" />
                                        <Key frame="262" value="48.1623" />
                                        <Key frame="275" value="119.496" />
                                        <Key frame="288" value="119.355" />
                                        <Key frame="300" value="83.6705" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="13" value="79.7202" />
                                        <Key frame="27" value="58.6262" />
                                        <Key frame="48" value="50.8038" />
                                        <Key frame="71" value="61.7024" />
                                        <Key frame="101" value="63.0208" />
                                        <Key frame="133" value="79.9839" />
                                        <Key frame="162" value="75.5014" />
                                        <Key frame="186" value="78.226" />
                                        <Key frame="207" value="89.0367" />
                                        <Key frame="229" value="64.6907" />
                                        <Key frame="245" value="41.0478" />
                                        <Key frame="262" value="53.3527" />
                                        <Key frame="275" value="32.786" />
                                        <Key frame="288" value="28.8309" />
                                        <Key frame="300" value="28.9188" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="27" value="-6" />
                                        <Key frame="48" value="-5.27591" />
                                        <Key frame="71" value="-4.66067" />
                                        <Key frame="101" value="49" />
                                        <Key frame="162" value="59" />
                                        <Key frame="186" value="57.6546" />
                                        <Key frame="207" value="52" />
                                        <Key frame="245" value="28" />
                                        <Key frame="275" value="49.6" />
                                        <Key frame="300" value="26" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="27" value="25" />
                                        <Key frame="48" value="25.1214" />
                                        <Key frame="71" value="24.2014" />
                                        <Key frame="101" value="17.5" />
                                        <Key frame="162" value="17.6214" />
                                        <Key frame="186" value="17.7214" />
                                        <Key frame="207" value="7.9" />
                                        <Key frame="245" value="8.06143" />
                                        <Key frame="275" value="26" />
                                        <Key frame="300" value="10" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="28" value="-19.2459" />
                                        <Key frame="49" value="-19.4217" />
                                        <Key frame="72" value="-26.1014" />
                                        <Key frame="102" value="-17.9275" />
                                        <Key frame="163" value="-20.5643" />
                                        <Key frame="187" value="-17.2244" />
                                        <Key frame="208" value="-15.7302" />
                                        <Key frame="246" value="-15.2908" />
                                        <Key frame="276" value="-17.1365" />
                                        <Key frame="301" value="-17.5759" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="28" value="9.84628" />
                                        <Key frame="49" value="9.84628" />
                                        <Key frame="72" value="1.145" />
                                        <Key frame="102" value="-0.876513" />
                                        <Key frame="163" value="6.06693" />
                                        <Key frame="187" value="7.82477" />
                                        <Key frame="208" value="12.5709" />
                                        <Key frame="246" value="12.3951" />
                                        <Key frame="276" value="6.06693" />
                                        <Key frame="301" value="10.2857" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="28" value="13.0104" />
                                        <Key frame="49" value="13.0104" />
                                        <Key frame="72" value="-2.89802" />
                                        <Key frame="102" value="-1.14019" />
                                        <Key frame="163" value="-16.2576" />
                                        <Key frame="187" value="-1.75543" />
                                        <Key frame="208" value="7.82477" />
                                        <Key frame="246" value="14.944" />
                                        <Key frame="276" value="13.1862" />
                                        <Key frame="301" value="11.2525" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="28" value="-5.01223" />
                                        <Key frame="49" value="-5.01223" />
                                        <Key frame="72" value="5.71056" />
                                        <Key frame="102" value="33.1328" />
                                        <Key frame="163" value="41.3946" />
                                        <Key frame="187" value="16.5212" />
                                        <Key frame="208" value="1.31597" />
                                        <Key frame="246" value="1.40386" />
                                        <Key frame="276" value="1.49176" />
                                        <Key frame="301" value="1.49176" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="28" value="5.2711" />
                                        <Key frame="49" value="5.18321" />
                                        <Key frame="72" value="6.15002" />
                                        <Key frame="102" value="-13.5377" />
                                        <Key frame="163" value="-14.5045" />
                                        <Key frame="187" value="-1.67235" />
                                        <Key frame="208" value="2.54646" />
                                        <Key frame="246" value="-1.93602" />
                                        <Key frame="276" value="0.0854875" />
                                        <Key frame="301" value="1.49176" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="28" value="-8.34731" />
                                        <Key frame="49" value="-8.4352" />
                                        <Key frame="72" value="-3.86483" />
                                        <Key frame="102" value="-2.107" />
                                        <Key frame="163" value="-2.28278" />
                                        <Key frame="187" value="-6.67737" />
                                        <Key frame="208" value="-10.8083" />
                                        <Key frame="246" value="-10.6325" />
                                        <Key frame="276" value="-6.3258" />
                                        <Key frame="301" value="-8.87466" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="28" value="0.266079" />
                                        <Key frame="49" value="0.353971" />
                                        <Key frame="72" value="0.00240423" />
                                        <Key frame="102" value="-13.9724" />
                                        <Key frame="163" value="-1.40386" />
                                        <Key frame="187" value="-7.11683" />
                                        <Key frame="208" value="0.353971" />
                                        <Key frame="246" value="-5.18321" />
                                        <Key frame="276" value="-10.5446" />
                                        <Key frame="301" value="-5.62267" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="28" value="16.4333" />
                                        <Key frame="49" value="16.2576" />
                                        <Key frame="72" value="-10.11" />
                                        <Key frame="102" value="-8.08844" />
                                        <Key frame="163" value="-8.17633" />
                                        <Key frame="187" value="2.45856" />
                                        <Key frame="208" value="12.0388" />
                                        <Key frame="246" value="21.1795" />
                                        <Key frame="276" value="16.7849" />
                                        <Key frame="301" value="16.7849" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="28" value="-5.90622" />
                                        <Key frame="49" value="-5.90622" />
                                        <Key frame="72" value="17.0534" />
                                        <Key frame="102" value="44.2998" />
                                        <Key frame="163" value="31.8192" />
                                        <Key frame="187" value="12.3951" />
                                        <Key frame="208" value="-5.90622" />
                                        <Key frame="246" value="-5.90622" />
                                        <Key frame="276" value="-5.88634" />
                                        <Key frame="301" value="-5.88634" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="28" value="3.16651" />
                                        <Key frame="49" value="3.07861" />
                                        <Key frame="72" value="0.441863" />
                                        <Key frame="102" value="-20.3885" />
                                        <Key frame="163" value="-12.3024" />
                                        <Key frame="187" value="-2.19489" />
                                        <Key frame="208" value="5.71537" />
                                        <Key frame="246" value="-0.173379" />
                                        <Key frame="276" value="3.43018" />
                                        <Key frame="301" value="3.69386" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="28" value="0.178188" />
                                        <Key frame="49" value="0.178188" />
                                        <Key frame="72" value="0.266079" />
                                        <Key frame="102" value="6.85796" />
                                        <Key frame="163" value="4.57277" />
                                        <Key frame="187" value="7.03374" />
                                        <Key frame="208" value="1.145" />
                                        <Key frame="246" value="5.18802" />
                                        <Key frame="276" value="8.70368" />
                                        <Key frame="301" value="5.53958" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="stand_realStory1_12" robot="" id="11" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="461" y="280">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                            <Timeline fps="25" resources_acquisition="0" size="400" enable="1" start_frame="0" end_frame="-1" scale="10">
                                <watches />
                                <BehaviorLayer name="speech" mute="0">
                                    <BehaviorKeyframe name="speech" index="4" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="Enter name here" robot="" id="1" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="localizationbox_plugin" x="110" y="66">
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)
		self.tts = ALProxy("ALTextToSpeech")

	def onInput_onStart(self):
		sEnglish = ""
		sFrench = "En faite, nous étions dimanche, et aldébaran est fermé le dimanche."
		sSpanish = ""
		sItalian = ""
		sGerman = ""
		sChinese = ""
		sPolish = ""
		sKorean = ""
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(eval("s"+sDefaultLang))]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <english></english>
                                                    <french>En faite, nous étions dimanche, et aldébaran est fermé le dimanche.</french>
                                                    <spanish></spanish>
                                                    <italian></italian>
                                                    <german></german>
                                                    <chinese></chinese>
                                                    <polish></polish>
                                                    <korean></korean>
                                                    <language>1</language>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Box name="SayTextPrerender_ref" robot="" id="2" tooltip="Receive a string, precompute it, then say it!&#x0A;All steps are outputted to add synchro or interesting behaviors...&#x0A;&#x0A;v1.1" bitmap_expanded="1" plugin="" x="483" y="63">
                                                <bitmap>media/images/box/icons_appu/sayPrecomputed.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# SayTextPrerender - v1.1
import altools

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self);
        self.nStateInit = 0;
        self.nStatePreparing = 1;
        self.nStateSpeaking = 2;
        self.nStateStopped = 3;
        
    def onLoad(self):
        self.nStep = self.nStateInit;
        self.bStopped = False;
    
    def onUnload(self):
        self.onInput_onStop();

    def onInput_onStart(self, p):
        if( self.nStep == self.nStateSpeaking or self.nStep == self.nStatePreparing ):
            self.log( "%s: already speaking, won't say that sentence: '%s'" % ( self.boxName, p ) );
            return;

        self.bStopped = False;
        txt = p;
        self.nStep = self.nStatePreparing;
        self.output_onPreparing();
        if( self.getParameter( "bWithLight" ) ):
            altools.sayAndCacheAndLight( txt, True, self.getParameter( 'bStoreToNonVolatilePath' ), nUseLang = self.getParameter( 'nNumLanguage' ) );
        else:
            altools.sayAndCache( txt, True, self.getParameter( 'bStoreToNonVolatilePath' ), nUseLang = self.getParameter( 'nNumLanguage' ) );
        self.output_onPrepared();            
        if( not self.getParameter( 'bJustPrepare' ) ):
            if( not self.bStopped ):
                self.nStep = self.nStateSpeaking;
                self.output_onStartSpeaking();
                if( self.getParameter( "bWithLight" ) ):
                    altools.sayAndCacheAndLight( txt, nUseLang = self.getParameter( 'nNumLanguage' ) );
                else:
                    altools.sayAndCache( txt, nUseLang = self.getParameter( 'nNumLanguage' ) );
                self.output_onStopSpeaking();            
        else:
            pass
        self.nStep = self.nStateStopped;
    
    def onInput_onStop(self):
        nCpt = 0;
        # adding a timeout
        nMaxCpt = 60;
        self.bStopped = True;
        while( self.nStep == self.nStatePreparing and nCpt <= nMaxCpt ): # can't kill while preparing
            print( "%s.onStop: waiting to stop than the sound is prepared..." % self.boxName );
            time.sleep( 0.5 );
            nCpt += 1;
        if( nCpt > nMaxCpt ):
            altools.playSound( 'warning_speech_error.wav' );
        # on le fait plusieurs fois car des fois on peut se trouver pile entre le set du play et le lancage de la commande
        for i in range( 3 ):
            if( self.nStep == self.nStateSpeaking ):
                altools.mySystemCall( "killall aplay" );     # todo: better killling method!
                time.sleep( 0.2 );]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="output_onPreparing" type="1" type_size="1" nature="2" inner="0" tooltip="Text are being prepared" id="4" />
                                                <Output name="output_onPrepared" type="1" type_size="1" nature="2" inner="0" tooltip="the sound is prepared and ready to be launched" id="5" />
                                                <Output name="output_onStartSpeaking" type="1" type_size="1" nature="2" inner="0" tooltip="Nao begin to speak" id="6" />
                                                <Output name="output_onStopSpeaking" type="1" type_size="1" nature="2" inner="0" tooltip="Nao has stop speaking" id="7" />
                                                <Parameter name="bWithLight" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="use light in eyes to speak" id="8" />
                                                <Parameter name="bJustPrepare" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Don&apos;t say the text now, just generate it." id="9" />
                                                <Parameter name="bStoreToNonVolatilePath" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="copy the generated file to a non volatile path." id="10" />
                                                <Parameter name="nNumLanguage" inherits_from_parent="0" content_type="1" value="-1" default_value="-1" min="-1" max="30" tooltip="To speak with a different speak language, specify it there (default -1: current one)" id="11" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <BehaviorLayer name="fx" mute="0">
                                    <BehaviorKeyframe name="blink" index="15" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="blink2" index="71" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="blink3" index="92" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList>
                                    <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="21" value="-3.16651" />
                                        <Key frame="36" value="-21.8874" />
                                        <Key frame="52" value="-8.17633" />
                                        <Key frame="66" value="-4.39699" />
                                        <Key frame="82" value="-5.10012" />
                                        <Key frame="96" value="-6.15482" />
                                        <Key frame="110" value="-5.97904" />
                                        <Key frame="127" value="-3.60596" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="21" value="16.5212" />
                                        <Key frame="36" value="28.1229" />
                                        <Key frame="52" value="-20.1296" />
                                        <Key frame="66" value="-23.1179" />
                                        <Key frame="82" value="-6.4185" />
                                        <Key frame="96" value="-18.3718" />
                                        <Key frame="110" value="-7.64898" />
                                        <Key frame="127" value="-10.11" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="19" value="73.563" />
                                        <Key frame="34" value="79.6275" />
                                        <Key frame="50" value="70.9262" />
                                        <Key frame="64" value="73.6509" />
                                        <Key frame="80" value="76.1118" />
                                        <Key frame="94" value="73.7388" />
                                        <Key frame="108" value="66.0922" />
                                        <Key frame="125" value="86.4831" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="19" value="0.612838" />
                                        <Key frame="34" value="1.31597" />
                                        <Key frame="50" value="0.498473" />
                                        <Key frame="64" value="4.56797" />
                                        <Key frame="80" value="0.524946" />
                                        <Key frame="94" value="0.612838" />
                                        <Key frame="108" value="1.75543" />
                                        <Key frame="125" value="1.14019" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="19" value="-42.1904" />
                                        <Key frame="34" value="-58.1867" />
                                        <Key frame="50" value="-99.2322" />
                                        <Key frame="64" value="-106.791" />
                                        <Key frame="80" value="-54.1437" />
                                        <Key frame="94" value="-47.376" />
                                        <Key frame="108" value="-68.8216" />
                                        <Key frame="125" value="-66.7122" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="19" value="-44.7345" />
                                        <Key frame="34" value="-25.3104" />
                                        <Key frame="50" value="-46.5802" />
                                        <Key frame="64" value="-43.1524" />
                                        <Key frame="80" value="-40.9551" />
                                        <Key frame="94" value="-51.5021" />
                                        <Key frame="108" value="-72.3325" />
                                        <Key frame="125" value="-33.2207" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="34" value="7" />
                                        <Key frame="64" value="-44" />
                                        <Key frame="94" value="-46.3213" />
                                        <Key frame="125" value="-10" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="34" value="19" />
                                        <Key frame="64" value="37.6" />
                                        <Key frame="94" value="37.7213" />
                                        <Key frame="125" value="20.8" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="17" value="74.6225" />
                                        <Key frame="32" value="57.923" />
                                        <Key frame="48" value="70.4037" />
                                        <Key frame="62" value="71.2826" />
                                        <Key frame="78" value="78.5776" />
                                        <Key frame="92" value="78.4018" />
                                        <Key frame="106" value="75.7651" />
                                        <Key frame="123" value="84.6421" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="17" value="-1.23289" />
                                        <Key frame="32" value="-0.705538" />
                                        <Key frame="48" value="-0.617646" />
                                        <Key frame="62" value="-2.55126" />
                                        <Key frame="78" value="-10.5494" />
                                        <Key frame="92" value="-16.6139" />
                                        <Key frame="106" value="-10.11" />
                                        <Key frame="123" value="-1.67235" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="17" value="41.4825" />
                                        <Key frame="32" value="42.5372" />
                                        <Key frame="48" value="84.4615" />
                                        <Key frame="62" value="100.282" />
                                        <Key frame="78" value="106.347" />
                                        <Key frame="92" value="119.496" />
                                        <Key frame="106" value="95.1843" />
                                        <Key frame="123" value="61.1702" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="17" value="68.0306" />
                                        <Key frame="32" value="89.3883" />
                                        <Key frame="48" value="58.6262" />
                                        <Key frame="62" value="51.7706" />
                                        <Key frame="78" value="34.0165" />
                                        <Key frame="92" value="34.1923" />
                                        <Key frame="106" value="71.1068" />
                                        <Key frame="123" value="45.4424" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="32" value="52" />
                                        <Key frame="62" value="44.2" />
                                        <Key frame="92" value="45.1739" />
                                        <Key frame="123" value="12" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="32" value="19.3" />
                                        <Key frame="62" value="35.8" />
                                        <Key frame="92" value="35.9413" />
                                        <Key frame="123" value="16.8" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="33" value="-29.5292" />
                                        <Key frame="63" value="-29.0019" />
                                        <Key frame="93" value="-21.0916" />
                                        <Key frame="124" value="-20.9158" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="33" value="3.69386" />
                                        <Key frame="63" value="4.74856" />
                                        <Key frame="93" value="12.8346" />
                                        <Key frame="124" value="8.00055" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="33" value="0.617646" />
                                        <Key frame="63" value="8.17633" />
                                        <Key frame="93" value="17.5807" />
                                        <Key frame="124" value="18.4597" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="33" value="-5.29104" />
                                        <Key frame="63" value="-5.18802" />
                                        <Key frame="93" value="-5.29104" />
                                        <Key frame="124" value="-5.18802" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="33" value="15.906" />
                                        <Key frame="63" value="12.9177" />
                                        <Key frame="93" value="6.06212" />
                                        <Key frame="124" value="4.30429" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="33" value="-4.2164" />
                                        <Key frame="63" value="-3.51326" />
                                        <Key frame="93" value="-9.92936" />
                                        <Key frame="124" value="-6.06212" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="33" value="5.80326" />
                                        <Key frame="63" value="1.0571" />
                                        <Key frame="93" value="3.86964" />
                                        <Key frame="124" value="-1.57965" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="33" value="5.71056" />
                                        <Key frame="63" value="14.2361" />
                                        <Key frame="93" value="21.3553" />
                                        <Key frame="124" value="20.9158" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="33" value="-5.90622" />
                                        <Key frame="63" value="-5.90622" />
                                        <Key frame="93" value="-5.90622" />
                                        <Key frame="124" value="-5.90622" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="33" value="11.2525" />
                                        <Key frame="63" value="8.44001" />
                                        <Key frame="93" value="3.60596" />
                                        <Key frame="124" value="3.43018" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="33" value="-2.81013" />
                                        <Key frame="63" value="-0.70073" />
                                        <Key frame="93" value="-4.2164" />
                                        <Key frame="124" value="0.090296" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="stand_realStory1_8" robot="" id="10" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="461" y="157">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                            <Timeline fps="25" resources_acquisition="0" size="400" enable="1" start_frame="0" end_frame="-1" scale="10">
                                <watches />
                                <BehaviorLayer name="speech" mute="0">
                                    <BehaviorKeyframe name="speech" index="10" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="Enter name here" robot="" id="1" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="localizationbox_plugin" x="110" y="66">
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)
		self.tts = ALProxy("ALTextToSpeech")

	def onInput_onStart(self):
		sEnglish = ""
		sFrench = "Il finissent par me demander de faire ma nouvelle danse."
		sSpanish = ""
		sItalian = ""
		sGerman = ""
		sChinese = ""
		sPolish = ""
		sKorean = ""
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(eval("s"+sDefaultLang))]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <english></english>
                                                    <french>Il finissent par me demander de faire ma nouvelle danse.</french>
                                                    <spanish></spanish>
                                                    <italian></italian>
                                                    <german></german>
                                                    <chinese></chinese>
                                                    <polish></polish>
                                                    <korean></korean>
                                                    <language>1</language>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Box name="SayTextPrerender_ref" robot="" id="2" tooltip="Receive a string, precompute it, then say it!&#x0A;All steps are outputted to add synchro or interesting behaviors...&#x0A;&#x0A;v1.1" bitmap_expanded="1" plugin="" x="422" y="84">
                                                <bitmap>media/images/box/icons_appu/sayPrecomputed.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# SayTextPrerender - v1.1
import altools

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self);
        self.nStateInit = 0;
        self.nStatePreparing = 1;
        self.nStateSpeaking = 2;
        self.nStateStopped = 3;
        
    def onLoad(self):
        self.nStep = self.nStateInit;
        self.bStopped = False;
    
    def onUnload(self):
        self.onInput_onStop();

    def onInput_onStart(self, p):
        if( self.nStep == self.nStateSpeaking or self.nStep == self.nStatePreparing ):
            self.log( "%s: already speaking, won't say that sentence: '%s'" % ( self.boxName, p ) );
            return;

        self.bStopped = False;
        txt = p;
        self.nStep = self.nStatePreparing;
        self.output_onPreparing();
        if( self.getParameter( "bWithLight" ) ):
            altools.sayAndCacheAndLight( txt, True, self.getParameter( 'bStoreToNonVolatilePath' ), nUseLang = self.getParameter( 'nNumLanguage' ) );
        else:
            altools.sayAndCache( txt, True, self.getParameter( 'bStoreToNonVolatilePath' ), nUseLang = self.getParameter( 'nNumLanguage' ) );
        self.output_onPrepared();            
        if( not self.getParameter( 'bJustPrepare' ) ):
            if( not self.bStopped ):
                self.nStep = self.nStateSpeaking;
                self.output_onStartSpeaking();
                if( self.getParameter( "bWithLight" ) ):
                    altools.sayAndCacheAndLight( txt, nUseLang = self.getParameter( 'nNumLanguage' ) );
                else:
                    altools.sayAndCache( txt, nUseLang = self.getParameter( 'nNumLanguage' ) );
                self.output_onStopSpeaking();            
        else:
            pass
        self.nStep = self.nStateStopped;
    
    def onInput_onStop(self):
        nCpt = 0;
        # adding a timeout
        nMaxCpt = 60;
        self.bStopped = True;
        while( self.nStep == self.nStatePreparing and nCpt <= nMaxCpt ): # can't kill while preparing
            print( "%s.onStop: waiting to stop than the sound is prepared..." % self.boxName );
            time.sleep( 0.5 );
            nCpt += 1;
        if( nCpt > nMaxCpt ):
            altools.playSound( 'warning_speech_error.wav' );
        # on le fait plusieurs fois car des fois on peut se trouver pile entre le set du play et le lancage de la commande
        for i in range( 3 ):
            if( self.nStep == self.nStateSpeaking ):
                altools.mySystemCall( "killall aplay" );     # todo: better killling method!
                time.sleep( 0.2 );]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="output_onPreparing" type="1" type_size="1" nature="2" inner="0" tooltip="Text are being prepared" id="4" />
                                                <Output name="output_onPrepared" type="1" type_size="1" nature="2" inner="0" tooltip="the sound is prepared and ready to be launched" id="5" />
                                                <Output name="output_onStartSpeaking" type="1" type_size="1" nature="2" inner="0" tooltip="Nao begin to speak" id="6" />
                                                <Output name="output_onStopSpeaking" type="1" type_size="1" nature="2" inner="0" tooltip="Nao has stop speaking" id="7" />
                                                <Parameter name="bWithLight" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="use light in eyes to speak" id="8" />
                                                <Parameter name="bJustPrepare" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Don&apos;t say the text now, just generate it." id="9" />
                                                <Parameter name="bStoreToNonVolatilePath" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="copy the generated file to a non volatile path." id="10" />
                                                <Parameter name="nNumLanguage" inherits_from_parent="0" content_type="1" value="-1" default_value="-1" min="-1" max="30" tooltip="To speak with a different speak language, specify it there (default -1: current one)" id="11" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <BehaviorLayer name="LED" mute="0">
                                    <BehaviorKeyframe name="blink" index="13" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="blink2" index="71" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList>
                                    <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="20" value="-4.39699" />
                                        <Key frame="37" value="-4.92434" />
                                        <Key frame="52" value="-9.05525" />
                                        <Key frame="65" value="-8.00055" />
                                        <Key frame="81" value="-6.50639" />
                                        <Key frame="94" value="-7.73688" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="20" value="10.3688" />
                                        <Key frame="37" value="-13.0983" />
                                        <Key frame="52" value="-19.9538" />
                                        <Key frame="65" value="-14.5045" />
                                        <Key frame="81" value="-2.02391" />
                                        <Key frame="94" value="-17.7565" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="18" value="57.6546" />
                                        <Key frame="35" value="58.7093" />
                                        <Key frame="50" value="67.5863" />
                                        <Key frame="63" value="74.6177" />
                                        <Key frame="79" value="80.6822" />
                                        <Key frame="92" value="83.4068" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="18" value="0.612838" />
                                        <Key frame="35" value="0.498473" />
                                        <Key frame="50" value="3.86483" />
                                        <Key frame="63" value="4.39218" />
                                        <Key frame="79" value="0.498473" />
                                        <Key frame="92" value="0.876513" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="18" value="-24.7" />
                                        <Key frame="35" value="-55.2863" />
                                        <Key frame="50" value="-63.8118" />
                                        <Key frame="63" value="-99.4079" />
                                        <Key frame="79" value="-73.392" />
                                        <Key frame="92" value="-87.6305" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="18" value="-62.3128" />
                                        <Key frame="35" value="-57.4788" />
                                        <Key frame="50" value="-44.9103" />
                                        <Key frame="63" value="-59.2366" />
                                        <Key frame="79" value="-28.4745" />
                                        <Key frame="92" value="-26.1893" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="35" value="-66.8" />
                                        <Key frame="63" value="-59" />
                                        <Key frame="92" value="12" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="35" value="19.7" />
                                        <Key frame="63" value="25.8" />
                                        <Key frame="92" value="16.8" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="16" value="41.1357" />
                                        <Key frame="33" value="50.1007" />
                                        <Key frame="48" value="32.2587" />
                                        <Key frame="61" value="34.2802" />
                                        <Key frame="77" value="70.8431" />
                                        <Key frame="90" value="83.7632" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="16" value="-1.145" />
                                        <Key frame="33" value="-0.969213" />
                                        <Key frame="48" value="-0.969213" />
                                        <Key frame="61" value="-26.4578" />
                                        <Key frame="77" value="-3.16651" />
                                        <Key frame="90" value="-2.90283" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="16" value="60.4671" />
                                        <Key frame="33" value="76.4634" />
                                        <Key frame="48" value="34.9785" />
                                        <Key frame="61" value="82.0006" />
                                        <Key frame="77" value="38.7578" />
                                        <Key frame="90" value="71.8051" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="16" value="88.5094" />
                                        <Key frame="33" value="52.8253" />
                                        <Key frame="48" value="79.6323" />
                                        <Key frame="61" value="42.4541" />
                                        <Key frame="77" value="64.5149" />
                                        <Key frame="90" value="28.5672" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="33" value="42" />
                                        <Key frame="61" value="79" />
                                        <Key frame="90" value="1" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="33" value="21.1" />
                                        <Key frame="61" value="44.8" />
                                        <Key frame="90" value="15" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="34" value="-24.7831" />
                                        <Key frame="62" value="-26.0135" />
                                        <Key frame="91" value="-20.4764" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="34" value="-2.01911" />
                                        <Key frame="62" value="1.58446" />
                                        <Key frame="91" value="3.2544" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="34" value="17.6686" />
                                        <Key frame="62" value="13.6256" />
                                        <Key frame="91" value="13.1862" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="34" value="-4.39699" />
                                        <Key frame="62" value="-4.48488" />
                                        <Key frame="91" value="-5.27591" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="34" value="4.2164" />
                                        <Key frame="62" value="8.87466" />
                                        <Key frame="91" value="7.81996" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="34" value="1.93602" />
                                        <Key frame="62" value="-0.612838" />
                                        <Key frame="91" value="-2.63435" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="34" value="-10.1051" />
                                        <Key frame="62" value="-4.65586" />
                                        <Key frame="91" value="-2.81013" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="34" value="16.2576" />
                                        <Key frame="62" value="14.4997" />
                                        <Key frame="91" value="14.4997" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="34" value="-5.90622" />
                                        <Key frame="62" value="-5.90622" />
                                        <Key frame="91" value="-5.90622" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="34" value="6.06693" />
                                        <Key frame="62" value="9.23104" />
                                        <Key frame="91" value="7.56109" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="34" value="7.12163" />
                                        <Key frame="62" value="2.63916" />
                                        <Key frame="91" value="1.49656" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="stand_realStory1_4" robot="" id="12" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="462" y="35">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                            <Timeline fps="25" resources_acquisition="0" size="400" enable="1" start_frame="0" end_frame="-1" scale="10">
                                <watches />
                                <BehaviorLayer name="speech" mute="0">
                                    <BehaviorKeyframe name="aie" index="236" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="Enter name here" robot="" id="1" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="localizationbox_plugin" x="111" y="66">
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)
		self.tts = ALProxy("ALTextToSpeech")

	def onInput_onStart(self):
		sEnglish = ""
		sFrench = "Outch!"
		sSpanish = ""
		sItalian = ""
		sGerman = ""
		sChinese = ""
		sPolish = ""
		sKorean = ""
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(eval("s"+sDefaultLang))]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <english></english>
                                                    <french>Outch!</french>
                                                    <spanish></spanish>
                                                    <italian></italian>
                                                    <german></german>
                                                    <chinese></chinese>
                                                    <polish></polish>
                                                    <korean></korean>
                                                    <language>1</language>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Box name="SayTextPrerender_ref" robot="" id="2" tooltip="Receive a string, precompute it, then say it!&#x0A;All steps are outputted to add synchro or interesting behaviors...&#x0A;&#x0A;v1.1" bitmap_expanded="1" plugin="" x="434" y="191">
                                                <bitmap>media/images/box/icons_appu/sayPrecomputed.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# SayTextPrerender - v1.1
import altools

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self);
        self.nStateInit = 0;
        self.nStatePreparing = 1;
        self.nStateSpeaking = 2;
        self.nStateStopped = 3;
        
    def onLoad(self):
        self.nStep = self.nStateInit;
        self.bStopped = False;
    
    def onUnload(self):
        self.onInput_onStop();

    def onInput_onStart(self, p):
        if( self.nStep == self.nStateSpeaking or self.nStep == self.nStatePreparing ):
            self.log( "%s: already speaking, won't say that sentence: '%s'" % ( self.boxName, p ) );
            return;

        self.bStopped = False;
        txt = p;
        self.nStep = self.nStatePreparing;
        self.output_onPreparing();
        if( self.getParameter( "bWithLight" ) ):
            altools.sayAndCacheAndLight( txt, True, self.getParameter( 'bStoreToNonVolatilePath' ), nUseLang = self.getParameter( 'nNumLanguage' ) );
        else:
            altools.sayAndCache( txt, True, self.getParameter( 'bStoreToNonVolatilePath' ), nUseLang = self.getParameter( 'nNumLanguage' ) );
        self.output_onPrepared();            
        if( not self.getParameter( 'bJustPrepare' ) ):
            if( not self.bStopped ):
                self.nStep = self.nStateSpeaking;
                self.output_onStartSpeaking();
                if( self.getParameter( "bWithLight" ) ):
                    altools.sayAndCacheAndLight( txt, nUseLang = self.getParameter( 'nNumLanguage' ) );
                else:
                    altools.sayAndCache( txt, nUseLang = self.getParameter( 'nNumLanguage' ) );
                self.output_onStopSpeaking();            
        else:
            pass
        self.nStep = self.nStateStopped;
    
    def onInput_onStop(self):
        nCpt = 0;
        # adding a timeout
        nMaxCpt = 60;
        self.bStopped = True;
        while( self.nStep == self.nStatePreparing and nCpt <= nMaxCpt ): # can't kill while preparing
            print( "%s.onStop: waiting to stop than the sound is prepared..." % self.boxName );
            time.sleep( 0.5 );
            nCpt += 1;
        if( nCpt > nMaxCpt ):
            altools.playSound( 'warning_speech_error.wav' );
        # on le fait plusieurs fois car des fois on peut se trouver pile entre le set du play et le lancage de la commande
        for i in range( 3 ):
            if( self.nStep == self.nStateSpeaking ):
                altools.mySystemCall( "killall aplay" );     # todo: better killling method!
                time.sleep( 0.2 );]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="output_onPreparing" type="1" type_size="1" nature="2" inner="0" tooltip="Text are being prepared" id="4" />
                                                <Output name="output_onPrepared" type="1" type_size="1" nature="2" inner="0" tooltip="the sound is prepared and ready to be launched" id="5" />
                                                <Output name="output_onStartSpeaking" type="1" type_size="1" nature="2" inner="0" tooltip="Nao begin to speak" id="6" />
                                                <Output name="output_onStopSpeaking" type="1" type_size="1" nature="2" inner="0" tooltip="Nao has stop speaking" id="7" />
                                                <Parameter name="bWithLight" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="use light in eyes to speak" id="8" />
                                                <Parameter name="bJustPrepare" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Don&apos;t say the text now, just generate it." id="9" />
                                                <Parameter name="bStoreToNonVolatilePath" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="copy the generated file to a non volatile path." id="10" />
                                                <Parameter name="nNumLanguage" inherits_from_parent="0" content_type="1" value="-1" default_value="-1" min="-1" max="30" tooltip="To speak with a different speak language, specify it there (default -1: current one)" id="11" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="speech" index="281" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="Enter name here" robot="" id="1" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="localizationbox_plugin" x="111" y="66">
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)
		self.tts = ALProxy("ALTextToSpeech")

	def onInput_onStart(self):
		sEnglish = ""
		sFrench = "Alors là, je me suis dis, ils sont fous ces humains de supporter ça!"
		sSpanish = ""
		sItalian = ""
		sGerman = ""
		sChinese = ""
		sPolish = ""
		sKorean = ""
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(eval("s"+sDefaultLang))]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <english></english>
                                                    <french>Alors là, je me suis dis, ils sont fous ces humains de supporter ça!</french>
                                                    <spanish></spanish>
                                                    <italian></italian>
                                                    <german></german>
                                                    <chinese></chinese>
                                                    <polish></polish>
                                                    <korean></korean>
                                                    <language>1</language>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Box name="SayTextPrerender" robot="" id="2" tooltip="Receive a string, precompute it, then say it!&#x0A;All steps are outputted to add synchro or interesting behaviors...&#x0A;&#x0A;You can add/remove eyes light synchro by modifying the bWithLight option.&#x0A;*** ref box in: ./2_wip/conversation/BodyTalk.xar ***&#x0A;*** last modification date(git):   Thu Oct 15 16:26:21 2009 +0200 ***" bitmap_expanded="1" plugin="" x="389" y="68">
                                                <bitmap>media/images/box/icons_appu/sayPrecomputed.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import altools

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self);
        self.nStateInit = 0;
        self.nStatePreparing = 1;
        self.nStateSpeaking = 2;
        self.nStateStopped = 3;
        self.nStep = self.nStateInit;
    
    def onUnload(self):
        self.onInput_onStop();

    def onInput_onStart(self, p):
        if( self.nStep == self.nStateSpeaking or self.nStep == self.nStatePreparing ):
            self.log( "%s: already speaking, won't say that sentence: '%s'" % ( self.boxName, p ) );
            return;
        txt = "\\RSPD=85\\ " + altools.transformAsciiAccentForSynthesis( p );
        self.nStep = self.nStatePreparing;
        self.output_onPreparing();
        if( self.getParameter( "bWithLight" ) ):
            altools.sayAndCacheAndLight( txt, True, bStoreToNonVolatilePath = self.getParameter( 'bStoreToNonVolatilePath' ) );
        else:
            altools.sayAndCache( txt, True, bStoreToNonVolatilePath = self.getParameter( 'bStoreToNonVolatilePath' ) );
        if( not self.getParameter( 'bJustPrepare' ) ):
            self.nStep = self.nStateSpeaking;
            self.output_onStartSpeaking();
            if( self.getParameter( "bWithLight" ) ):
                altools.sayAndCacheAndLight( txt, bStoreToNonVolatilePath = self.getParameter( 'bStoreToNonVolatilePath' ) );
            else:
                altools.sayAndCache( txt );
        self.nStep = self.nStateStopped;
        self.output_onStopSpeaking();
        
    def onInput_onStop(self):
        while( self.nStep == self.nStatePreparing ): # can't kill while preparing
            time.sleep( 0.2 );
        # on le fait plusieurs fois car des fois on peut se trouver pile entre le set du play et le lancage de la commande
        for i in range( 3 ):
            if( self.nStep == self.nStateSpeaking ):
                altools.mySystemCall( "killall aplay" );     # todo: better killling method!
                time.sleep( 0.2 );]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="output_onPreparing" type="1" type_size="1" nature="2" inner="0" tooltip="Text are being prepared" id="4" />
                                                <Output name="output_onStartSpeaking" type="1" type_size="1" nature="2" inner="0" tooltip="Nao begin to speak" id="5" />
                                                <Output name="output_onStopSpeaking" type="1" type_size="1" nature="2" inner="0" tooltip="Nao has stop speaking" id="6" />
                                                <Parameter name="bWithLight" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="use light in eyes to speak" id="7" />
                                                <Parameter name="bJustPrepare" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Don&apos;t say the text now, just generate it." id="8" />
                                                <Parameter name="bStoreToNonVolatilePath" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="copy the generated file to a non volatile path." id="9" />
                                            </Box>
                                            <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" />
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <BehaviorLayer name="LED" mute="0">
                                    <BehaviorKeyframe name="blink" index="26" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="blink2" index="81" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="blink3" index="102" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="blink4" index="113" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="blink5" index="142" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="blink6" index="217" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="blink7" index="291" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="blink8" index="316" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="216" y="63">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        return;
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <BehaviorLayer name="fx" mute="0">
                                    <BehaviorKeyframe name="metro" index="1" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="PlaySoundMixLight_p" robot="" id="1" tooltip="Play a sound even if there&apos;s current one playing.&#x0A;&#x0A;v1.00&#x0A;&#x0A;- just play a sound with a specific sound volume (work only for .wav)" bitmap_expanded="1" plugin="" x="199" y="13">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# PlaySoundMix Light v1.0
import altools
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        altools.playSound( self.getParameter( 'strSoundName' ), bDirectPlay = self.getParameter( 'bDirectPlay' ), nSoundVolume = self.getParameter( 'nVolume' ) );
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Parameter name="strSoundName" inherits_from_parent="0" content_type="3" value="metro1.wav" default_value="youhou1.wav" custom_choice="0" tooltip="name of the sound to play (absolute or just the name if it&apos;s in the standard path)" id="5" />
                                                <Parameter name="bDirectPlay" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="launch the sound directly (don&apos;t use gstreamer)" id="6" />
                                                <Parameter name="nVolume" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="volume between 0 and 100% - DON&apos;T WORK IN THOSE VERSION(S)" id="7" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <BehaviorLayer name="fx2" mute="0">
                                    <BehaviorKeyframe name="aie" index="145" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="PlaySoundMixLight_p" robot="" id="1" tooltip="Play a sound even if there&apos;s current one playing.&#x0A;&#x0A;v1.00&#x0A;&#x0A;- just play a sound with a specific sound volume (work only for .wav)" bitmap_expanded="1" plugin="" x="282" y="13">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# PlaySoundMix Light v1.0
import altools
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        altools.playSound( self.getParameter( 'strSoundName' ), bDirectPlay = self.getParameter( 'bDirectPlay' ), nSoundVolume = self.getParameter( 'nVolume' ) );
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Parameter name="strSoundName" inherits_from_parent="0" content_type="3" value="aie_fast.wav" default_value="youhou1.wav" custom_choice="0" tooltip="name of the sound to play (absolute or just the name if it&apos;s in the standard path)" id="5" />
                                                <Parameter name="bDirectPlay" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="launch the sound directly (don&apos;t use gstreamer)" id="6" />
                                                <Parameter name="nVolume" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="volume between 0 and 100% - DON&apos;T WORK IN THOSE VERSION(S)" id="7" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList>
                                    <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="36" value="-4.04542" />
                                        <Key frame="48" value="-2.99072" />
                                        <Key frame="68" value="-3.43018" />
                                        <Key frame="89" value="9.57779" />
                                        <Key frame="97" value="9.57779" />
                                        <Key frame="127" value="-19.8659" />
                                        <Key frame="131" value="-19.4265" />
                                        <Key frame="150" value="25.662" />
                                        <Key frame="171" value="26.5409" />
                                        <Key frame="198" value="9.66569" />
                                        <Key frame="221" value="-12.0436" />
                                        <Key frame="232" value="-17.3171" />
                                        <Key frame="250" value="-31.6434" />
                                        <Key frame="273" value="-39.8174" />
                                        <Key frame="295" value="-10.3736" />
                                        <Key frame="306" value="14" />
                                        <Key frame="318" value="-16" />
                                        <Key frame="327" value="-9.23104" />
                                        <Key frame="346" value="-6.94585" />
                                        <Key frame="360" value="-7.56109" />
                                        <Key frame="373" value="-4.48488" />
                                        <Key frame="385" value="-7.64898" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="36" value="-12.3072" />
                                        <Key frame="48" value="-14.2409" />
                                        <Key frame="68" value="-13.4498" />
                                        <Key frame="81" value="-10" />
                                        <Key frame="89" value="-4.04542" />
                                        <Key frame="97" value="-3.95753" />
                                        <Key frame="111" value="5" />
                                        <Key frame="127" value="1.93121" />
                                        <Key frame="131" value="1.22808" />
                                        <Key frame="150" value="-17.3171" />
                                        <Key frame="171" value="-7.56109" />
                                        <Key frame="198" value="-13.8014" />
                                        <Key frame="221" value="-26.8094" />
                                        <Key frame="232" value="-30.8524" />
                                        <Key frame="250" value="-28.743" />
                                        <Key frame="273" value="-32.6981" />
                                        <Key frame="295" value="-20.7449" />
                                        <Key frame="327" value="-12.483" />
                                        <Key frame="346" value="2.54646" />
                                        <Key frame="360" value="-11.5162" />
                                        <Key frame="373" value="0.173379" />
                                        <Key frame="385" value="-13.1862" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="34" value="89.1198" />
                                        <Key frame="46" value="48.6896" />
                                        <Key frame="66" value="48.6896" />
                                        <Key frame="125" value="48.6896" />
                                        <Key frame="129" value="50.799" />
                                        <Key frame="148" value="52.6447" />
                                        <Key frame="169" value="44.7345" />
                                        <Key frame="196" value="39.9883" />
                                        <Key frame="219" value="32.957" />
                                        <Key frame="230" value="34.6269" />
                                        <Key frame="248" value="37.4395" />
                                        <Key frame="271" value="89.4714" />
                                        <Key frame="293" value="73.6509" />
                                        <Key frame="308" value="73.4751" />
                                        <Key frame="325" value="83.1432" />
                                        <Key frame="344" value="51.3264" />
                                        <Key frame="358" value="82.1764" />
                                        <Key frame="371" value="73.4751" />
                                        <Key frame="383" value="89.8229" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="34" value="13.3571" />
                                        <Key frame="46" value="0.498473" />
                                        <Key frame="66" value="0.498473" />
                                        <Key frame="125" value="0.498473" />
                                        <Key frame="129" value="1.66754" />
                                        <Key frame="148" value="17.6638" />
                                        <Key frame="169" value="17.6638" />
                                        <Key frame="196" value="5.53477" />
                                        <Key frame="219" value="0.498473" />
                                        <Key frame="230" value="0.498473" />
                                        <Key frame="248" value="2.54646" />
                                        <Key frame="271" value="13.7966" />
                                        <Key frame="293" value="0.498473" />
                                        <Key frame="308" value="0.498473" />
                                        <Key frame="325" value="5.53477" />
                                        <Key frame="344" value="0.876513" />
                                        <Key frame="358" value="3.33748" />
                                        <Key frame="371" value="0.498473" />
                                        <Key frame="383" value="2.81013" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="34" value="-68.1185" />
                                        <Key frame="41" value="-59" />
                                        <Key frame="46" value="-44.1241" />
                                        <Key frame="66" value="-44.1241" />
                                        <Key frame="125" value="-44.1241" />
                                        <Key frame="129" value="-44.3877" />
                                        <Key frame="148" value="-64.5149" />
                                        <Key frame="169" value="-58.7141" />
                                        <Key frame="196" value="-44.5635" />
                                        <Key frame="219" value="-45.1787" />
                                        <Key frame="230" value="-45.9698" />
                                        <Key frame="248" value="-48.6944" />
                                        <Key frame="271" value="-94.9255" />
                                        <Key frame="293" value="-56.0773" />
                                        <Key frame="308" value="-98.7927" />
                                        <Key frame="325" value="-119.496" />
                                        <Key frame="344" value="-80.687" />
                                        <Key frame="358" value="-105.736" />
                                        <Key frame="371" value="-52.9132" />
                                        <Key frame="383" value="-105.648" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="34" value="-29.7929" />
                                        <Key frame="41" value="-43" />
                                        <Key frame="46" value="-58.094" />
                                        <Key frame="66" value="-58.094" />
                                        <Key frame="125" value="-58.094" />
                                        <Key frame="129" value="-57.1272" />
                                        <Key frame="148" value="-57.2151" />
                                        <Key frame="169" value="-55.3694" />
                                        <Key frame="196" value="-58.5335" />
                                        <Key frame="219" value="-37.1758" />
                                        <Key frame="230" value="-37.6153" />
                                        <Key frame="248" value="-34.9785" />
                                        <Key frame="271" value="-28.914" />
                                        <Key frame="293" value="-62.9281" />
                                        <Key frame="308" value="-39.0215" />
                                        <Key frame="325" value="-36.8242" />
                                        <Key frame="344" value="-79.1001" />
                                        <Key frame="358" value="-41.6583" />
                                        <Key frame="371" value="-62.6644" />
                                        <Key frame="383" value="-32.0781" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="34" value="-32.2587" />
                                        <Key frame="46" value="-30" />
                                        <Key frame="66" value="-30.4129" />
                                        <Key frame="125" value="-30.4129" />
                                        <Key frame="129" value="-30.8524" />
                                        <Key frame="148" value="-32.3466" />
                                        <Key frame="196" value="-32.4344" />
                                        <Key frame="219" value="-31.5555" />
                                        <Key frame="230" value="-32.4344" />
                                        <Key frame="271" value="-53.3527" />
                                        <Key frame="293" value="-51.4191" />
                                        <Key frame="325" value="-51.5948" />
                                        <Key frame="358" value="-33" />
                                        <Key frame="383" value="-33.1376" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="34" value="31" />
                                        <Key frame="46" value="4" />
                                        <Key frame="66" value="4.06144" />
                                        <Key frame="125" value="4.06144" />
                                        <Key frame="129" value="4.10144" />
                                        <Key frame="148" value="4.10144" />
                                        <Key frame="196" value="4.08144" />
                                        <Key frame="219" value="4.08144" />
                                        <Key frame="230" value="4.08144" />
                                        <Key frame="271" value="38.8813" />
                                        <Key frame="293" value="36.5813" />
                                        <Key frame="325" value="41.2" />
                                        <Key frame="358" value="27" />
                                        <Key frame="383" value="27.1414" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="32" value="94.486" />
                                        <Key frame="44" value="93.2555" />
                                        <Key frame="64" value="93.2555" />
                                        <Key frame="123" value="93.2555" />
                                        <Key frame="127" value="93.3434" />
                                        <Key frame="146" value="95.3649" />
                                        <Key frame="167" value="95.9802" />
                                        <Key frame="194" value="90.7067" />
                                        <Key frame="217" value="91.9371" />
                                        <Key frame="228" value="90.3551" />
                                        <Key frame="246" value="117.865" />
                                        <Key frame="269" value="82.3569" />
                                        <Key frame="291" value="90.7067" />
                                        <Key frame="306" value="89.3004" />
                                        <Key frame="323" value="92.1129" />
                                        <Key frame="342" value="82.3569" />
                                        <Key frame="356" value="87.191" />
                                        <Key frame="369" value="86.4" />
                                        <Key frame="381" value="89.4762" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="32" value="-17.0534" />
                                        <Key frame="44" value="-1.49656" />
                                        <Key frame="64" value="-1.40867" />
                                        <Key frame="123" value="-1.40867" />
                                        <Key frame="127" value="-1.84813" />
                                        <Key frame="146" value="-0.705538" />
                                        <Key frame="167" value="-2.02391" />
                                        <Key frame="194" value="-0.529755" />
                                        <Key frame="217" value="-0.529755" />
                                        <Key frame="228" value="-1.58446" />
                                        <Key frame="246" value="-5.53958" />
                                        <Key frame="269" value="-4.83645" />
                                        <Key frame="291" value="-1.145" />
                                        <Key frame="306" value="-10.11" />
                                        <Key frame="323" value="-7.91266" />
                                        <Key frame="342" value="-0.79343" />
                                        <Key frame="356" value="-4.57277" />
                                        <Key frame="369" value="-0.617646" />
                                        <Key frame="381" value="-5.10012" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="32" value="69.2563" />
                                        <Key frame="44" value="56.512" />
                                        <Key frame="64" value="56.512" />
                                        <Key frame="123" value="56.512" />
                                        <Key frame="127" value="57.2151" />
                                        <Key frame="146" value="78.6607" />
                                        <Key frame="167" value="86.3952" />
                                        <Key frame="194" value="60.7308" />
                                        <Key frame="217" value="67.2348" />
                                        <Key frame="228" value="61.6097" />
                                        <Key frame="246" value="119.003" />
                                        <Key frame="256" value="115" />
                                        <Key frame="269" value="74.7934" />
                                        <Key frame="291" value="99.3152" />
                                        <Key frame="306" value="119.496" />
                                        <Key frame="323" value="112.499" />
                                        <Key frame="342" value="65.0375" />
                                        <Key frame="356" value="74.4419" />
                                        <Key frame="369" value="71.1899" />
                                        <Key frame="381" value="78.2212" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="32" value="38.499" />
                                        <Key frame="44" value="54.3195" />
                                        <Key frame="64" value="54.3195" />
                                        <Key frame="123" value="54.3195" />
                                        <Key frame="127" value="53.3527" />
                                        <Key frame="146" value="53.0011" />
                                        <Key frame="167" value="46.8487" />
                                        <Key frame="194" value="50.628" />
                                        <Key frame="217" value="46.0577" />
                                        <Key frame="228" value="48.8702" />
                                        <Key frame="235" value="68" />
                                        <Key frame="246" value="18.5476" />
                                        <Key frame="256" value="31" />
                                        <Key frame="269" value="38.5869" />
                                        <Key frame="291" value="30.2372" />
                                        <Key frame="306" value="29.4461" />
                                        <Key frame="323" value="30.4129" />
                                        <Key frame="342" value="45.9698" />
                                        <Key frame="356" value="35.0712" />
                                        <Key frame="369" value="48.6944" />
                                        <Key frame="381" value="29.0067" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="32" value="25.8378" />
                                        <Key frame="44" value="32.5175" />
                                        <Key frame="64" value="31.9023" />
                                        <Key frame="123" value="31.9023" />
                                        <Key frame="127" value="32.3418" />
                                        <Key frame="146" value="33.0449" />
                                        <Key frame="194" value="33.748" />
                                        <Key frame="217" value="35.2422" />
                                        <Key frame="228" value="34.7148" />
                                        <Key frame="269" value="-3.51807" />
                                        <Key frame="291" value="-2.55126" />
                                        <Key frame="323" value="42" />
                                        <Key frame="356" value="-4" />
                                        <Key frame="381" value="-3.51807" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="32" value="9.80143" />
                                        <Key frame="44" value="9.80143" />
                                        <Key frame="64" value="9.80143" />
                                        <Key frame="123" value="9.80143" />
                                        <Key frame="127" value="9.80143" />
                                        <Key frame="146" value="9.80143" />
                                        <Key frame="194" value="9.80143" />
                                        <Key frame="217" value="9.80143" />
                                        <Key frame="228" value="9.80143" />
                                        <Key frame="269" value="26.6014" />
                                        <Key frame="291" value="25.3214" />
                                        <Key frame="323" value="42.6" />
                                        <Key frame="356" value="16.1" />
                                        <Key frame="381" value="16.0814" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="33" value="-17.7517" />
                                        <Key frame="45" value="-15.6423" />
                                        <Key frame="65" value="-15.6423" />
                                        <Key frame="124" value="-15.5544" />
                                        <Key frame="128" value="-15.5544" />
                                        <Key frame="147" value="-14.2361" />
                                        <Key frame="168" value="-15.115" />
                                        <Key frame="195" value="-17.4881" />
                                        <Key frame="218" value="-19.949" />
                                        <Key frame="229" value="-19.949" />
                                        <Key frame="247" value="-29.3534" />
                                        <Key frame="270" value="-17.0486" />
                                        <Key frame="292" value="-23.2889" />
                                        <Key frame="324" value="-17.0486" />
                                        <Key frame="357" value="-17.5759" />
                                        <Key frame="382" value="-17.5759" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="33" value="15.6471" />
                                        <Key frame="45" value="1.49656" />
                                        <Key frame="65" value="1.40867" />
                                        <Key frame="124" value="1.32078" />
                                        <Key frame="128" value="0.881321" />
                                        <Key frame="147" value="13.3619" />
                                        <Key frame="168" value="10.4615" />
                                        <Key frame="195" value="-3.51326" />
                                        <Key frame="218" value="1.23289" />
                                        <Key frame="229" value="1.32078" />
                                        <Key frame="247" value="7.4732" />
                                        <Key frame="270" value="10.8131" />
                                        <Key frame="292" value="1.67235" />
                                        <Key frame="324" value="10.5494" />
                                        <Key frame="357" value="6.15482" />
                                        <Key frame="382" value="6.15482" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="33" value="5.62747" />
                                        <Key frame="45" value="15.0319" />
                                        <Key frame="65" value="14.944" />
                                        <Key frame="124" value="15.2077" />
                                        <Key frame="128" value="15.1198" />
                                        <Key frame="147" value="17.6686" />
                                        <Key frame="168" value="12.2194" />
                                        <Key frame="195" value="-1.22808" />
                                        <Key frame="218" value="-6.67737" />
                                        <Key frame="229" value="-9.4899" />
                                        <Key frame="247" value="-2.01911" />
                                        <Key frame="270" value="-8.78677" />
                                        <Key frame="292" value="15.9987" />
                                        <Key frame="324" value="20.2175" />
                                        <Key frame="357" value="16.0866" />
                                        <Key frame="382" value="16.1745" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="33" value="1.31597" />
                                        <Key frame="45" value="3.68905" />
                                        <Key frame="65" value="3.68905" />
                                        <Key frame="124" value="3.51326" />
                                        <Key frame="128" value="3.68905" />
                                        <Key frame="147" value="-5.27591" />
                                        <Key frame="168" value="-5.27591" />
                                        <Key frame="195" value="0.964405" />
                                        <Key frame="218" value="29.8808" />
                                        <Key frame="229" value="35.2422" />
                                        <Key frame="247" value="20.0369" />
                                        <Key frame="270" value="43.5919" />
                                        <Key frame="292" value="-5.29104" />
                                        <Key frame="324" value="-4.48488" />
                                        <Key frame="357" value="-5.01223" />
                                        <Key frame="382" value="-5.01223" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="33" value="5.18321" />
                                        <Key frame="45" value="-3.95753" />
                                        <Key frame="65" value="-3.95753" />
                                        <Key frame="124" value="-4.22121" />
                                        <Key frame="128" value="-4.04542" />
                                        <Key frame="147" value="3.68905" />
                                        <Key frame="168" value="2.19489" />
                                        <Key frame="195" value="3.1617" />
                                        <Key frame="218" value="-11.5162" />
                                        <Key frame="229" value="-15.0319" />
                                        <Key frame="247" value="-0.529755" />
                                        <Key frame="270" value="-21.1843" />
                                        <Key frame="292" value="6.85315" />
                                        <Key frame="324" value="1.84332" />
                                        <Key frame="357" value="3.33748" />
                                        <Key frame="382" value="3.42537" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="33" value="-12.5661" />
                                        <Key frame="45" value="-0.876513" />
                                        <Key frame="65" value="-0.788621" />
                                        <Key frame="124" value="-0.788621" />
                                        <Key frame="128" value="-0.612838" />
                                        <Key frame="147" value="-14.0603" />
                                        <Key frame="168" value="-11.9509" />
                                        <Key frame="195" value="1.23289" />
                                        <Key frame="218" value="0.79343" />
                                        <Key frame="229" value="1.84813" />
                                        <Key frame="247" value="-4.65586" />
                                        <Key frame="270" value="-4.04062" />
                                        <Key frame="292" value="-1.40386" />
                                        <Key frame="324" value="-8.25942" />
                                        <Key frame="357" value="-5.53477" />
                                        <Key frame="382" value="-5.53477" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="33" value="2.11181" />
                                        <Key frame="45" value="2.72705" />
                                        <Key frame="65" value="2.72705" />
                                        <Key frame="124" value="2.81494" />
                                        <Key frame="128" value="2.55126" />
                                        <Key frame="147" value="14.6803" />
                                        <Key frame="168" value="12.483" />
                                        <Key frame="195" value="3.95753" />
                                        <Key frame="218" value="5.18802" />
                                        <Key frame="229" value="5.45169" />
                                        <Key frame="247" value="3.86964" />
                                        <Key frame="270" value="4.3091" />
                                        <Key frame="292" value="-9.22623" />
                                        <Key frame="324" value="-2.81013" />
                                        <Key frame="357" value="-4.39218" />
                                        <Key frame="382" value="-4.39218" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="33" value="13.7966" />
                                        <Key frame="45" value="18.1912" />
                                        <Key frame="65" value="18.2791" />
                                        <Key frame="124" value="18.1033" />
                                        <Key frame="128" value="18.1912" />
                                        <Key frame="147" value="19.158" />
                                        <Key frame="168" value="15.9939" />
                                        <Key frame="195" value="-3.07861" />
                                        <Key frame="218" value="-2.72705" />
                                        <Key frame="229" value="-3.69386" />
                                        <Key frame="247" value="3.60116" />
                                        <Key frame="270" value="1.40386" />
                                        <Key frame="292" value="17.3123" />
                                        <Key frame="324" value="24.4315" />
                                        <Key frame="357" value="18.367" />
                                        <Key frame="382" value="18.367" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="33" value="-5.90622" />
                                        <Key frame="45" value="-5.79845" />
                                        <Key frame="65" value="-5.71056" />
                                        <Key frame="124" value="-5.79845" />
                                        <Key frame="128" value="-5.90622" />
                                        <Key frame="147" value="-5.79845" />
                                        <Key frame="168" value="-5.88634" />
                                        <Key frame="195" value="2.28759" />
                                        <Key frame="218" value="21.0964" />
                                        <Key frame="229" value="23.03" />
                                        <Key frame="247" value="19.778" />
                                        <Key frame="270" value="26.8094" />
                                        <Key frame="292" value="-5.79845" />
                                        <Key frame="324" value="-5.88634" />
                                        <Key frame="357" value="-5.79845" />
                                        <Key frame="382" value="-5.71056" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="33" value="5.53958" />
                                        <Key frame="45" value="2.90283" />
                                        <Key frame="65" value="2.90283" />
                                        <Key frame="124" value="2.81494" />
                                        <Key frame="128" value="1.84813" />
                                        <Key frame="147" value="1.32078" />
                                        <Key frame="168" value="-0.788621" />
                                        <Key frame="195" value="3.60596" />
                                        <Key frame="218" value="-6.67737" />
                                        <Key frame="229" value="-7.64418" />
                                        <Key frame="247" value="-5.18321" />
                                        <Key frame="270" value="-12.654" />
                                        <Key frame="292" value="5.3638" />
                                        <Key frame="324" value="-0.0854875" />
                                        <Key frame="357" value="1.76024" />
                                        <Key frame="382" value="1.76024" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                        <Key frame="33" value="0.441863" />
                                        <Key frame="45" value="-3.68905" />
                                        <Key frame="65" value="-3.68905" />
                                        <Key frame="124" value="-3.77694" />
                                        <Key frame="128" value="-3.51326" />
                                        <Key frame="147" value="-16.5212" />
                                        <Key frame="168" value="-14.3239" />
                                        <Key frame="195" value="-2.81013" />
                                        <Key frame="218" value="-3.86483" />
                                        <Key frame="229" value="-2.81013" />
                                        <Key frame="247" value="-4.56797" />
                                        <Key frame="270" value="0.178188" />
                                        <Key frame="292" value="6.59428" />
                                        <Key frame="324" value="1.67235" />
                                        <Key frame="357" value="3.34229" />
                                        <Key frame="382" value="3.34229" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Text Edit" robot="" id="13" tooltip="Transmits the text you entered when the input is stimulated." bitmap_expanded="1" plugin="textedit_plugin" x="204" y="494">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("TODO: faire un truc qui genere les voix avant de lancer l'histoire !")]]>
</content>
                            </script>
                            <pluginContent>
                                <text>TODO: faire un truc qui genere les voix avant de lancer l&apos;histoire !</text>
                            </pluginContent>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits text." id="2" />
                            <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                        </Box>
                        <Link inputowner="12" indexofinput="2" outputowner="9" indexofoutput="4" />
                        <Link inputowner="6" indexofinput="2" outputowner="1" indexofoutput="4" />
                        <Link inputowner="9" indexofinput="2" outputowner="6" indexofoutput="4" />
                        <Link inputowner="3" indexofinput="2" outputowner="12" indexofoutput="4" />
                        <Link inputowner="8" indexofinput="2" outputowner="4" indexofoutput="4" />
                        <Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="4" />
                        <Link inputowner="7" indexofinput="2" outputowner="5" indexofoutput="4" />
                        <Link inputowner="11" indexofinput="2" outputowner="7" indexofoutput="4" />
                        <Link inputowner="10" indexofinput="2" outputowner="8" indexofoutput="4" />
                        <Link inputowner="2" indexofinput="2" outputowner="10" indexofoutput="4" />
                        <Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="4" />
                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                        <Link inputowner="0" indexofinput="4" outputowner="11" indexofoutput="4" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
            <ActuatorList />
        </Timeline>
    </Box>
</ChoregrapheProject>
