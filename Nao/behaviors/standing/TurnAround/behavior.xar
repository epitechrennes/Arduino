<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="2">
    <Box name="root" robot="" id="-1" tooltip="Root box of Choregraphe&apos;s project. Highest level possible." bitmap_expanded="1" plugin="" x="0" y="0">
        <bitmap>media/images/box/root.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
        <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
            <watches />
            <BehaviorLayer name="behavior_layer1" mute="0">
                <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                    <Diagram scale="-1">
                        <Box name="RandomTurn" robot="" id="2" tooltip="Makes change body orientation (a random turn)." bitmap_expanded="1" plugin="" x="386" y="128">
                            <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import random
import time
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)
        #

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        # active walk process
        rAngle = 0.2 + 0.6*random.random();
        if( random.random() < 0.5 ):
            rAngle = -rAngle;
        rSpeed = 0.05 + 0.4*random.random();
        rTime = 2.0 + 5.*random.random();
        self.log( "%s: angle: %f; speed: %f, time: %f" % ( self.boxName, rAngle, rSpeed, rTime ) );
        self.motion.setWalkTargetVelocity( 0., 0., rAngle, rSpeed );
        time.sleep( rTime );
        self.motion.setWalkTargetVelocity( 0., 0., 0., 0. );        
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                            <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is enabled, the left arm moves to make the walking process more realistic.&#x0A;&#x0A;Note: If during the walking process another movement is sent to the left arm, &#x0A;is that new movement that will be executed, even if this option is enabled. &#x0A;After the end of that movement, the arm returns to its previous state &#x0A;(will keep the arm animation if this option is enabled, or will stop if it&apos;s not enabled)." id="5" />
                            <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is enabled, the right arm moves to make the walking process more realistic.&#x0A;&#x0A;Note: If during the walking process another movement is sent to the right arm, &#x0A;is that new movement that will be executed, even if this option is enabled. &#x0A;After the end of that movement, the arm returns to its previous state &#x0A;(will keep the arm animation if this option is enabled, or will stop if it&apos;s not enabled)." id="6" />
                            <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="If there is no foot contact (no pressure on foot sensors), the walk process is killed." id="7" />
                        </Box>
                        <Box name="BoringPhraseAndMove" robot="" id="1" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="97" y="45">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                <watches />
                                <BehaviorLayer name="behavior_layer1" mute="0">
                                    <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="SayTextPrerender_ref" robot="" id="9" tooltip="Receive a string, precompute it, then say it!&#x0A;All steps are outputted to add synchro or interesting behaviors...&#x0A;&#x0A;v1.1" bitmap_expanded="1" plugin="" x="506" y="293">
                                                <bitmap>media/images/box/icons_appu/sayPrecomputed.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# SayTextPrerender - v1.1
import altools

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self);
        self.nStateInit = 0;
        self.nStatePreparing = 1;
        self.nStateSpeaking = 2;
        self.nStateStopped = 3;
        
    def onLoad(self):
        self.nStep = self.nStateInit;
        self.bStopped = False;
    
    def onUnload(self):
        self.onInput_onStop();

    def onInput_onStart(self, p):
        if( self.nStep == self.nStateSpeaking or self.nStep == self.nStatePreparing ):
            self.log( "%s: already speaking, won't say that sentence: '%s'" % ( self.boxName, p ) );
            return;

        self.bStopped = False;
        txt = p;
        self.nStep = self.nStatePreparing;
        self.output_onPreparing();
        if( self.getParameter( "bWithLight" ) ):
            altools.sayAndCacheAndLight( txt, True, self.getParameter( 'bStoreToNonVolatilePath' ), nUseLang = self.getParameter( 'nNumLanguage' ) );
        else:
            altools.sayAndCache( txt, True, self.getParameter( 'bStoreToNonVolatilePath' ), nUseLang = self.getParameter( 'nNumLanguage' ) );
        self.output_onPrepared();            
        if( not self.getParameter( 'bJustPrepare' ) ):
            if( not self.bStopped ):
                self.nStep = self.nStateSpeaking;
                self.output_onStartSpeaking();
                if( self.getParameter( "bWithLight" ) ):
                    altools.sayAndCacheAndLight( txt, nUseLang = self.getParameter( 'nNumLanguage' ) );
                else:
                    altools.sayAndCache( txt, nUseLang = self.getParameter( 'nNumLanguage' ) );
                self.output_onStopSpeaking();            
        else:
            pass
        self.nStep = self.nStateStopped;
    
    def onInput_onStop(self):
        nCpt = 0;
        # adding a timeout
        nMaxCpt = 60;
        self.bStopped = True;
        while( self.nStep == self.nStatePreparing and nCpt <= nMaxCpt ): # can't kill while preparing
            print( "%s.onStop: waiting to stop than the sound is prepared..." % self.boxName );
            time.sleep( 0.5 );
            nCpt += 1;
        if( nCpt > nMaxCpt ):
            altools.playSound( 'warning_speech_error.wav' );
        # on le fait plusieurs fois car des fois on peut se trouver pile entre le set du play et le lancage de la commande
        for i in range( 3 ):
            if( self.nStep == self.nStateSpeaking ):
                altools.mySystemCall( "killall aplay" );     # todo: better killling method!
                time.sleep( 0.2 );]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="output_onPreparing" type="1" type_size="1" nature="2" inner="0" tooltip="Text are being prepared" id="4" />
                                                <Output name="output_onPrepared" type="1" type_size="1" nature="2" inner="0" tooltip="the sound is prepared and ready to be launched" id="5" />
                                                <Output name="output_onStartSpeaking" type="1" type_size="1" nature="2" inner="0" tooltip="Nao begin to speak" id="6" />
                                                <Output name="output_onStopSpeaking" type="1" type_size="1" nature="2" inner="0" tooltip="Nao has stop speaking" id="7" />
                                                <Parameter name="bWithLight" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="use light in eyes to speak" id="8" />
                                                <Parameter name="bJustPrepare" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Don&apos;t say the text now, just generate it." id="9" />
                                                <Parameter name="bStoreToNonVolatilePath" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="copy the generated file to a non volatile path." id="10" />
                                                <Parameter name="nNumLanguage" inherits_from_parent="0" content_type="1" value="-1" default_value="-1" min="-1" max="30" tooltip="To speak with a different speak language, specify it there (default -1: current one)" id="11" />
                                            </Box>
                                            <Box name="AddBof" robot="" id="1" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="279" y="204">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import altools
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        p += altools.generateBof();
        self.onStopped(p) #~ activate output of the box]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                            </Box>
                                            <Box name="DebutPhrase" robot="" id="2" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="104" y="128">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy("ALTextToSpeech")

    def onInput_onStart(self):
        sEnglish = "That looks like a wall! How boring!"
        sFrench = altools.concateneRandom( ["Ca ressemble a un mur",altools.wordlist_things(), "."] );
        sSpanish = ""
        sItalian = ""
        sGerman = ""
        sChinese = ""
        sPolish = ""
        sKorean = ""
        sDefaultLang = self.tts.getLanguage()
        self.onStopped(eval("s"+sDefaultLang))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                            </Box>
                                            <Box name="frontWall_1" robot="" id="6" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="436" y="528">
                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                    <watches />
                                                    <BehaviorLayer name="speech" mute="1">
                                                        <BehaviorKeyframe name="keyframe13" index="13" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="Say Text" robot="" id="3" tooltip="Say the sentence received in the input. See box parameters for fine tuning of the voice." bitmap_expanded="1" plugin="" x="395" y="27">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        #puts code for box cleanup here
        self.ids = []

    def onUnload(self):
        #puts code for box cleanup here
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass

    def onInput_onStart(self, p):
        sentence = "\RSPD="+ str( self.getParameter("Speed") )+ "\ "
        sentence += "\VCT="+ str( self.getParameter("Voice Shaping") ) + "\ "
        sentence += str(p)
        sentence +=  "\RST\ "
        id = self.tts.post.say(sentence)
        self.ids.append(id)
        self.tts.wait(id, 0)
        self.ids.remove(id)
        self.onStopped() # activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a string is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="Voice Shaping" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='This tag is used to modify at runtime the voice feature (tone, speed) in way slightly different of what pitch and speed modification does, giving a kind of &quot;gender or age modification &quot; effect.&#x0A;&#x0A;To better tune the effect, one should compensate the speed modification due to the value parameter. For exemple to keep an average constant speed, one should add 20% to speed parameter when decreasing 20% to the Voice Shaping (VCT) parameter :&#x0A;&#x0A;A quite good male derivation of female voice for example could be obtained using the following parameters: VCT=78.' id="5" />
                                                                    <Parameter name="Speed" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice." id="6" />
                                                                </Box>
                                                                <Box name="Say" robot="" id="1" tooltip="Say" bitmap_expanded="1" plugin="localizationbox_plugin" x="108" y="30">
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)
		self.tts = ALProxy("ALTextToSpeech")

	def onInput_onStart(self):
		sEnglish = "It sucks here! I'll go elsewhere!"
		sFrench = "C'est nul ici! Je vais aller voir ailleurs!"
		sSpanish = ""
		sItalian = ""
		sGerman = ""
		sChinese = ""
		sPolish = ""
		sKorean = ""
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(eval("s"+sDefaultLang))]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <english>It sucks here! I&apos;ll go elsewhere!</english>
                                                                        <french>C&apos;est nul ici! Je vais aller voir ailleurs!</french>
                                                                        <spanish></spanish>
                                                                        <italian></italian>
                                                                        <german></german>
                                                                        <chinese></chinese>
                                                                        <polish></polish>
                                                                        <korean></korean>
                                                                        <language>1</language>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                </Box>
                                                                <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <ActuatorList>
                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="19" value="-26.7215" />
                                                            <Key frame="37" value="11.5114" />
                                                            <Key frame="51" value="14" />
                                                            <Key frame="69" value="-4.22121" />
                                                            <Key frame="99" value="4.83164" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="19" value="10.193" />
                                                            <Key frame="37" value="2.63435" />
                                                            <Key frame="51" value="10" />
                                                            <Key frame="69" value="-14.2409" />
                                                            <Key frame="99" value="-13.7135" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="17" value="59.2366" />
                                                            <Key frame="35" value="83.8463" />
                                                            <Key frame="67" value="92.7234" />
                                                            <Key frame="97" value="95.6238" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="17" value="14.0603" />
                                                            <Key frame="35" value="19.158" />
                                                            <Key frame="67" value="18.0154" />
                                                            <Key frame="97" value="10.5446" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="17" value="-13.0983" />
                                                            <Key frame="35" value="-116.371" />
                                                            <Key frame="67" value="-115.756" />
                                                            <Key frame="97" value="-95.277" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="17" value="-71.7172" />
                                                            <Key frame="35" value="-47.8986" />
                                                            <Key frame="67" value="-39.6368" />
                                                            <Key frame="97" value="-25.5741" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="35" value="-57" />
                                                            <Key frame="67" value="-57.923" />
                                                            <Key frame="97" value="-58.0988" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="35" value="43.7" />
                                                            <Key frame="67" value="41.9413" />
                                                            <Key frame="97" value="40.3413" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="15" value="60.7356" />
                                                            <Key frame="33" value="81.478" />
                                                            <Key frame="65" value="90.3551" />
                                                            <Key frame="95" value="96.0681" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="15" value="-14.153" />
                                                            <Key frame="33" value="-16.7897" />
                                                            <Key frame="65" value="-15.4713" />
                                                            <Key frame="95" value="-9.84628" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="15" value="14.4118" />
                                                            <Key frame="33" value="112.763" />
                                                            <Key frame="65" value="119.003" />
                                                            <Key frame="95" value="112.587" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="15" value="67.4154" />
                                                            <Key frame="33" value="43.0693" />
                                                            <Key frame="65" value="37.1806" />
                                                            <Key frame="95" value="24.1726" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="33" value="52" />
                                                            <Key frame="65" value="51.3264" />
                                                            <Key frame="95" value="51.3264" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="33" value="45" />
                                                            <Key frame="65" value="28.318" />
                                                            <Key frame="95" value="27.2414" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="34" value="-11.7751" />
                                                            <Key frame="66" value="-11.5114" />
                                                            <Key frame="96" value="-11.863" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="34" value="14.0651" />
                                                            <Key frame="66" value="13.9772" />
                                                            <Key frame="96" value="7.03374" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="34" value="21.1843" />
                                                            <Key frame="66" value="21.3601" />
                                                            <Key frame="96" value="20.1296" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="34" value="-4.48488" />
                                                            <Key frame="66" value="-4.3091" />
                                                            <Key frame="96" value="-4.48488" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="34" value="1.14019" />
                                                            <Key frame="66" value="1.31597" />
                                                            <Key frame="96" value="1.14019" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="34" value="-11.072" />
                                                            <Key frame="66" value="-10.8962" />
                                                            <Key frame="96" value="-5.88634" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="34" value="2.37548" />
                                                            <Key frame="66" value="2.28759" />
                                                            <Key frame="96" value="-3.86483" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="34" value="23.6405" />
                                                            <Key frame="66" value="23.7284" />
                                                            <Key frame="96" value="22.5858" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="34" value="-3.95272" />
                                                            <Key frame="66" value="-3.60116" />
                                                            <Key frame="96" value="-4.39218" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="34" value="-2.19489" />
                                                            <Key frame="66" value="-2.01911" />
                                                            <Key frame="96" value="-1.49176" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="34" value="-2.28278" />
                                                            <Key frame="66" value="-2.28278" />
                                                            <Key frame="96" value="2.55126" />
                                                        </ActuatorCurve>
                                                    </ActuatorList>
                                                </Timeline>
                                            </Box>
                                            <Box name="frontWall_2" robot="" id="3" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="436" y="648">
                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                    <watches />
                                                    <BehaviorLayer name="speech" mute="1">
                                                        <BehaviorKeyframe name="keyframe13" index="13" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="Say Text" robot="" id="3" tooltip="Say the sentence received in the input. See box parameters for fine tuning of the voice." bitmap_expanded="1" plugin="" x="395" y="27">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        #puts code for box cleanup here
        self.ids = []

    def onUnload(self):
        #puts code for box cleanup here
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass

    def onInput_onStart(self, p):
        sentence = "\RSPD="+ str( self.getParameter("Speed") )+ "\ "
        sentence += "\VCT="+ str( self.getParameter("Voice Shaping") ) + "\ "
        sentence += str(p)
        sentence +=  "\RST\ "
        id = self.tts.post.say(sentence)
        self.ids.append(id)
        self.tts.wait(id, 0)
        self.ids.remove(id)
        self.onStopped() # activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a string is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="Voice Shaping" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='This tag is used to modify at runtime the voice feature (tone, speed) in way slightly different of what pitch and speed modification does, giving a kind of &quot;gender or age modification &quot; effect.&#x0A;&#x0A;To better tune the effect, one should compensate the speed modification due to the value parameter. For exemple to keep an average constant speed, one should add 20% to speed parameter when decreasing 20% to the Voice Shaping (VCT) parameter :&#x0A;&#x0A;A quite good male derivation of female voice for example could be obtained using the following parameters: VCT=78.' id="5" />
                                                                    <Parameter name="Speed" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice." id="6" />
                                                                </Box>
                                                                <Box name="Say" robot="" id="1" tooltip="Say" bitmap_expanded="1" plugin="localizationbox_plugin" x="108" y="30">
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)
		self.tts = ALProxy("ALTextToSpeech")

	def onInput_onStart(self):
		sEnglish = "This wall is ugly, and I don't want to rust here!"
		sFrench = "Ce mur est moche, et j'ai aucune envie de rouiller ici!"
		sSpanish = ""
		sItalian = ""
		sGerman = ""
		sChinese = ""
		sPolish = ""
		sKorean = ""
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(eval("s"+sDefaultLang))]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <english>This wall is ugly, and I don&apos;t want to rust here!</english>
                                                                        <french>Ce mur est moche, et j&apos;ai aucune envie de rouiller ici!</french>
                                                                        <spanish></spanish>
                                                                        <italian></italian>
                                                                        <german></german>
                                                                        <chinese></chinese>
                                                                        <polish></polish>
                                                                        <korean></korean>
                                                                        <language>1</language>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                </Box>
                                                                <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <ActuatorList>
                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="16" value="-20.5691" />
                                                            <Key frame="31" value="-6.15482" />
                                                            <Key frame="59" value="-0.79343" />
                                                            <Key frame="75" value="-21.0964" />
                                                            <Key frame="86" value="5.09532" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="16" value="6.94104" />
                                                            <Key frame="31" value="-14.0651" />
                                                            <Key frame="59" value="-16.8776" />
                                                            <Key frame="75" value="-1.49656" />
                                                            <Key frame="86" value="15.3786" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="14" value="41.3946" />
                                                            <Key frame="29" value="56.1604" />
                                                            <Key frame="57" value="74.9692" />
                                                            <Key frame="73" value="75.7603" />
                                                            <Key frame="84" value="84.2858" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="14" value="5.00742" />
                                                            <Key frame="29" value="12.9177" />
                                                            <Key frame="57" value="17.2244" />
                                                            <Key frame="73" value="12.2145" />
                                                            <Key frame="84" value="12.3024" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="14" value="14.2361" />
                                                            <Key frame="29" value="-101.254" />
                                                            <Key frame="57" value="-108.197" />
                                                            <Key frame="73" value="-87.1031" />
                                                            <Key frame="84" value="-70.7552" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="14" value="-35.1543" />
                                                            <Key frame="29" value="-30.4081" />
                                                            <Key frame="57" value="-23.0252" />
                                                            <Key frame="73" value="-82.0006" />
                                                            <Key frame="84" value="-26.1014" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="29" value="-47.9034" />
                                                            <Key frame="57" value="-51" />
                                                            <Key frame="84" value="-59" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="29" value="39.8813" />
                                                            <Key frame="57" value="38.2" />
                                                            <Key frame="84" value="43.3" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="12" value="49.6612" />
                                                            <Key frame="27" value="51.8585" />
                                                            <Key frame="55" value="73.3041" />
                                                            <Key frame="71" value="70.3158" />
                                                            <Key frame="82" value="83.5874" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="12" value="-11.9557" />
                                                            <Key frame="27" value="-16.9655" />
                                                            <Key frame="55" value="-19.0749" />
                                                            <Key frame="71" value="-12.8346" />
                                                            <Key frame="82" value="-7.82477" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="12" value="-16.1745" />
                                                            <Key frame="27" value="89.6472" />
                                                            <Key frame="55" value="99.3152" />
                                                            <Key frame="71" value="86.8346" />
                                                            <Key frame="82" value="76.5513" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="12" value="38.9384" />
                                                            <Key frame="27" value="34.2802" />
                                                            <Key frame="55" value="24.6121" />
                                                            <Key frame="71" value="79.3686" />
                                                            <Key frame="82" value="18.0202" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="27" value="48.0744" />
                                                            <Key frame="55" value="57" />
                                                            <Key frame="82" value="34" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="27" value="28.318" />
                                                            <Key frame="55" value="46" />
                                                            <Key frame="82" value="49.8" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="28" value="-7.46839" />
                                                            <Key frame="56" value="-13.2692" />
                                                            <Key frame="83" value="-15.4665" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="28" value="8.87947" />
                                                            <Key frame="56" value="9.84628" />
                                                            <Key frame="83" value="8.96736" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="28" value="18.2839" />
                                                            <Key frame="56" value="15.9108" />
                                                            <Key frame="83" value="6.77007" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="28" value="-5.18802" />
                                                            <Key frame="56" value="-5.29" />
                                                            <Key frame="83" value="-4.83645" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="28" value="0.70073" />
                                                            <Key frame="56" value="2.107" />
                                                            <Key frame="83" value="8.25942" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="28" value="-8.25942" />
                                                            <Key frame="56" value="-8.69888" />
                                                            <Key frame="83" value="-8.34731" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="28" value="-3.42537" />
                                                            <Key frame="56" value="-2.98591" />
                                                            <Key frame="83" value="-0.876513" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="28" value="20.9158" />
                                                            <Key frame="56" value="17.4881" />
                                                            <Key frame="83" value="8.78677" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="28" value="-5.2711" />
                                                            <Key frame="56" value="-5.29" />
                                                            <Key frame="83" value="-5.29" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="28" value="-0.0854875" />
                                                            <Key frame="56" value="1.49656" />
                                                            <Key frame="83" value="7.4732" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="28" value="3.2544" />
                                                            <Key frame="56" value="3.16651" />
                                                            <Key frame="83" value="2.02391" />
                                                        </ActuatorCurve>
                                                    </ActuatorList>
                                                </Timeline>
                                            </Box>
                                            <Box name="Random Int." robot="" id="8" tooltip="Generate a random integer between 0 and a max number set as parameter.&#x0A;Note that the max number is excluded from the range of possible integers." bitmap_expanded="1" plugin="" x="203" y="504">
                                                <bitmap>media/images/box/box-script.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import random;

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        nMax = self.getParameter("Max")
        if(self.getParameter("Shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Generates a random integer." id="2" />
                                                <Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" />
                                                <Parameter name="Max" inherits_from_parent="0" content_type="1" value="2" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max, excluding max!" id="4" />
                                                <Parameter name="Shuffle" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="When this option is selected the box will give all the numbers between 0 and max before giving the same number twice." id="5" />
                                            </Box>
                                            <Box name="Dispatcher" robot="" id="4" tooltip="Dispatch an event carrying an information, depending on the information value. The information will be tested against all the values of the table, and the matching output will be stimulated!" bitmap_expanded="1" plugin="dispatcher_plugin" x="131" y="610">
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self, p):
		if(p == (0)):
			self.output_1(p)
		elif(p == (1)):
			self.output_2(p)
		elif(p == (2)):
			self.output_3(p)
		else:
			self.onDefault()]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <keywords>
                                                        <keyword>0</keyword>
                                                        <keyword>1</keyword>
                                                        <keyword>2</keyword>
                                                        <keyword></keyword>
                                                        <keyword></keyword>
                                                        <keyword></keyword>
                                                        <keyword></keyword>
                                                    </keywords>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" />
                                                <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                                <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                                <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" />
                                                <Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="8" />
                                                <Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="9" />
                                                <Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="10" />
                                            </Box>
                                            <Link inputowner="0" indexofinput="4" outputowner="9" indexofoutput="7" />
                                            <Link inputowner="9" indexofinput="2" outputowner="1" indexofoutput="3" />
                                            <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="3" />
                                            <Link inputowner="4" indexofinput="2" outputowner="8" indexofoutput="3" />
                                            <Link inputowner="6" indexofinput="2" outputowner="4" indexofoutput="4" />
                                            <Link inputowner="3" indexofinput="2" outputowner="4" indexofoutput="5" />
                                            <Link inputowner="8" indexofinput="2" outputowner="9" indexofoutput="5" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList />
                            </Timeline>
                        </Box>
                        <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                        <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" />
                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
            <ActuatorList />
        </Timeline>
    </Box>
</ChoregrapheProject>
